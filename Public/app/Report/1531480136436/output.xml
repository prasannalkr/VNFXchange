<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180713 16:38:57.323" generator="Robot 3.0.2 (Python 2.7.10 on win32)">
<suite source="C:\xampp\htdocs\VNFXchange\Genric_Script\SBC_Onboarding_TestCases.robot" id="s1" name="SBC Onboarding TestCases">
<test id="s1-t1" name="TC1_Verification of on-boarded vnf on RHOSP">
<kw name="ImportDetails" library="Genric_Keywords">
<arguments>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Server}</var>
</assign>
<kw name="Parseconfdata" library="Library">
<arguments>
<arg>${ConfigPath}</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Param}</var>
</assign>
<msg timestamp="20180713 16:38:57.920" level="INFO">@{Param} = [ "RedHat" | sfdsf | asdfsf | qcow2 | /root/auto_heatfiles | bare | C:\xampp\htdocs\VNFXchange | nova:compute1 | default | TCP | Ingress | ipv4 | Oracle_SBC_Flavour_Template.txt | nnSCZ739p1-img-vm_kv...</msg>
<status status="PASS" endtime="20180713 16:38:57.920" starttime="20180713 16:38:57.919"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${server}</var>
</assign>
<msg timestamp="20180713 16:38:57.921" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180713 16:38:57.921" starttime="20180713 16:38:57.920"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${VNFName}</var>
</assign>
<msg timestamp="20180713 16:38:57.921" level="INFO">${VNFName} = sfdsf</msg>
<status status="PASS" endtime="20180713 16:38:57.921" starttime="20180713 16:38:57.921"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${ImageName}</var>
</assign>
<msg timestamp="20180713 16:38:57.922" level="INFO">${ImageName} = asdfsf</msg>
<status status="PASS" endtime="20180713 16:38:57.922" starttime="20180713 16:38:57.922"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${DiskFormat}</var>
</assign>
<msg timestamp="20180713 16:38:57.922" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180713 16:38:57.922" starttime="20180713 16:38:57.922"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${ImageFilePath}</var>
</assign>
<msg timestamp="20180713 16:38:57.923" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180713 16:38:57.923" starttime="20180713 16:38:57.923"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${ConatinerFormat}</var>
</assign>
<msg timestamp="20180713 16:38:57.923" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180713 16:38:57.923" starttime="20180713 16:38:57.923"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${FlavorP}</var>
</assign>
<msg timestamp="20180713 16:38:57.924" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180713 16:38:57.924" starttime="20180713 16:38:57.924"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${AvZone}</var>
</assign>
<msg timestamp="20180713 16:38:57.924" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180713 16:38:57.925" starttime="20180713 16:38:57.924"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${Security}</var>
</assign>
<msg timestamp="20180713 16:38:57.925" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180713 16:38:57.925" starttime="20180713 16:38:57.925"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${Protocol}</var>
</assign>
<msg timestamp="20180713 16:38:57.926" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180713 16:38:57.926" starttime="20180713 16:38:57.925"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>10</arg>
</arguments>
<assign>
<var>${Direction}</var>
</assign>
<msg timestamp="20180713 16:38:57.926" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180713 16:38:57.926" starttime="20180713 16:38:57.926"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>11</arg>
</arguments>
<assign>
<var>${Ethertype}</var>
</assign>
<msg timestamp="20180713 16:38:57.927" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180713 16:38:57.927" starttime="20180713 16:38:57.926"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<assign>
<var>${FN}</var>
</assign>
<msg timestamp="20180713 16:38:57.927" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180713 16:38:57.927" starttime="20180713 16:38:57.927"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<assign>
<var>${ImageFileName}</var>
</assign>
<msg timestamp="20180713 16:38:57.928" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:38:57.928" starttime="20180713 16:38:57.927"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic1}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20180713 16:38:57.928" starttime="20180713 16:38:57.928"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic2}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20180713 16:38:57.928" starttime="20180713 16:38:57.928"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic3}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>14</arg>
</arguments>
<status status="PASS" endtime="20180713 16:38:57.929" starttime="20180713 16:38:57.929"></status>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<doc>Splits the extension from the given path.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<assign>
<var>${FlavourName}</var>
<var>${Ext}</var>
</assign>
<msg timestamp="20180713 16:38:57.930" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<msg timestamp="20180713 16:38:57.930" level="INFO">${Ext} = txt</msg>
<status status="PASS" endtime="20180713 16:38:57.930" starttime="20180713 16:38:57.929"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFileName}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.930" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:38:57.930" starttime="20180713 16:38:57.930"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.931" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180713 16:38:57.931" starttime="20180713 16:38:57.930"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavourName}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.931" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180713 16:38:57.931" starttime="20180713 16:38:57.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.932" level="INFO">${VNFName} = sfdsf</msg>
<status status="PASS" endtime="20180713 16:38:57.932" starttime="20180713 16:38:57.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${server}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.932" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180713 16:38:57.933" starttime="20180713 16:38:57.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageName}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.933" level="INFO">${ImageName} = asdfsf</msg>
<status status="PASS" endtime="20180713 16:38:57.933" starttime="20180713 16:38:57.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${DiskFormat}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.934" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180713 16:38:57.934" starttime="20180713 16:38:57.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFilePath}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.934" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180713 16:38:57.934" starttime="20180713 16:38:57.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ConatinerFormat}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.935" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180713 16:38:57.935" starttime="20180713 16:38:57.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavorP}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.936" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180713 16:38:57.936" starttime="20180713 16:38:57.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${AvZone}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.936" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180713 16:38:57.936" starttime="20180713 16:38:57.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Security}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.937" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180713 16:38:57.937" starttime="20180713 16:38:57.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Protocol}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.937" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180713 16:38:57.937" starttime="20180713 16:38:57.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Direction}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.938" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180713 16:38:57.938" starttime="20180713 16:38:57.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Ethertype}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.939" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180713 16:38:57.939" starttime="20180713 16:38:57.938"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic1}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:38:57.939" starttime="20180713 16:38:57.939"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic2}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:38:57.939" starttime="20180713 16:38:57.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.940" level="INFO">${VNFName} = sfdsf</msg>
<status status="PASS" endtime="20180713 16:38:57.940" starttime="20180713 16:38:57.939"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic3}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:38:57.940" starttime="20180713 16:38:57.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${server}=="RedHat"</arg>
<arg>Return From Keyword</arg>
<arg>@{RedHat}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>@{RedHat}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20180713 16:38:57.941" starttime="20180713 16:38:57.941"></status>
</kw>
<status status="PASS" endtime="20180713 16:38:57.941" starttime="20180713 16:38:57.940"></status>
</kw>
<msg timestamp="20180713 16:38:57.942" level="INFO">@{Server} = [ 10.53.214.10 | root | techm123 ]</msg>
<status status="PASS" endtime="20180713 16:38:57.942" starttime="20180713 16:38:57.919"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{Server}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.943" level="INFO">@{Server} = [ 10.53.214.10 | root | techm123 ]</msg>
<status status="PASS" endtime="20180713 16:38:57.943" starttime="20180713 16:38:57.942"></status>
</kw>
<kw name="Server_Login" library="Genric_Keywords">
<arguments>
<arg>@{Server}</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${HOST}</var>
</assign>
<msg timestamp="20180713 16:38:57.944" level="INFO">${HOST} = 10.53.214.10</msg>
<status status="PASS" endtime="20180713 16:38:57.944" starttime="20180713 16:38:57.944"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${USERNAME}</var>
</assign>
<msg timestamp="20180713 16:38:57.945" level="INFO">${USERNAME} = root</msg>
<status status="PASS" endtime="20180713 16:38:57.945" starttime="20180713 16:38:57.944"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${PASSWORD}</var>
</assign>
<msg timestamp="20180713 16:38:57.945" level="INFO">${PASSWORD} = techm123</msg>
<status status="PASS" endtime="20180713 16:38:57.945" starttime="20180713 16:38:57.945"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 4 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${HOST}</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20180713 16:38:57.946" level="INFO">${Index} = 1</msg>
<status status="PASS" endtime="20180713 16:38:57.946" starttime="20180713 16:38:57.946"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Login</arg>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180713 16:38:57.947" level="INFO">Logging into '10.53.214.10:22' as 'root'.</msg>
<msg timestamp="20180713 16:39:19.118" level="INFO">Read output: Last login: Fri Jul 13 06:37:07 2018 from 10.53.172.9
[root@controller ~]#</msg>
<status status="PASS" endtime="20180713 16:39:19.119" starttime="20180713 16:38:57.947"></status>
</kw>
<msg timestamp="20180713 16:39:19.119" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20180713 16:39:19.119" starttime="20180713 16:38:57.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:19.122" starttime="20180713 16:39:19.120"></status>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20180713 16:39:19.123" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20180713 16:39:19.123" starttime="20180713 16:39:19.122"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:19.124" starttime="20180713 16:38:57.945"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:19.124" starttime="20180713 16:38:57.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation**********************</arg>
</arguments>
<msg timestamp="20180713 16:39:19.125" level="INFO">*****************ServerLogin_Validation**********************</msg>
<status status="PASS" endtime="20180713 16:39:19.125" starttime="20180713 16:39:19.124"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>ifconfig | grep inet</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>ifconfig | grep inet</arg>
</arguments>
<msg timestamp="20180713 16:39:19.136" level="INFO">ifconfig | grep inet</msg>
<status status="PASS" endtime="20180713 16:39:19.137" starttime="20180713 16:39:19.128"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:19.137" starttime="20180713 16:39:19.126"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20180713 16:39:23.150" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20180713 16:39:23.151" starttime="20180713 16:39:19.138"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:39:23.153" level="INFO">[01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 172.18.113.11  netmask 255.255.255.0  broadcast 172.18.113.255
        [01;31m[Kinet[m[K6 fe80::8006:74ff:fe4f:e843  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.80.1.8  netmask 255.255.255.0  broadcast 10.80.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.81.1.8  netmask 255.255.255.0  broadcast 10.81.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3ca  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.53.214.10  netmask 255.255.255.0  broadcast 10.53.214.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cc  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 127.0.0.1  netmask 255.0.0.0
        [01;31m[Kinet[m[K6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
[root@controller ~]#</msg>
<msg timestamp="20180713 16:39:23.153" level="INFO">${output} =         [01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[...</msg>
<status status="PASS" endtime="20180713 16:39:23.154" starttime="20180713 16:39:23.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${HOST}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.156" starttime="20180713 16:39:23.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation Completed**********************</arg>
</arguments>
<msg timestamp="20180713 16:39:23.157" level="INFO">*****************ServerLogin_Validation Completed**********************</msg>
<status status="PASS" endtime="20180713 16:39:23.157" starttime="20180713 16:39:23.156"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>source keystonerc_admin</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>source keystonerc_admin</arg>
</arguments>
<msg timestamp="20180713 16:39:23.164" level="INFO">source keystonerc_admin</msg>
<status status="PASS" endtime="20180713 16:39:23.164" starttime="20180713 16:39:23.160"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:23.164" starttime="20180713 16:39:23.158"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:39:23.165" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:39:23.165" level="INFO">${output} = [root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180713 16:39:23.165" starttime="20180713 16:39:23.165"></status>
</kw>
<msg timestamp="20180713 16:39:23.166" level="INFO">${Index} = 1</msg>
<status status="PASS" endtime="20180713 16:39:23.166" starttime="20180713 16:38:57.943"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Print Logger</arg>
<arg>Server Logged</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.167" starttime="20180713 16:39:23.166"></status>
</kw>
<kw name="SBC_CreateFlavor" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.168" starttime="20180713 16:39:23.168"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.168" starttime="20180713 16:39:23.168"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC Flavor Creation is Started ***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.169" starttime="20180713 16:39:23.168"></status>
</kw>
<kw name="Create Flavor" library="Genric_Keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>********************Create Flavor start*****************************</arg>
</arguments>
<msg timestamp="20180713 16:39:23.170" level="INFO">********************Create Flavor start*****************************</msg>
<status status="PASS" endtime="20180713 16:39:23.170" starttime="20180713 16:39:23.169"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\</arg>
<arg>${FN}</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20180713 16:39:23.171" level="INFO">${path} = C:\xampp\htdocs\VNFXchange\Genric_Script\Config\Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180713 16:39:23.171" starttime="20180713 16:39:23.170"></status>
</kw>
<kw name="ImportFlavor" library="Genric_Keywords">
<arguments>
<arg>${path}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${Path}</arg>
</arguments>
<assign>
<var>${File}</var>
</assign>
<msg timestamp="20180713 16:39:23.172" html="yes" level="INFO">Getting file '&lt;a href="file://C:\xampp\htdocs\VNFXchange\Genric_Script\Config\Oracle_SBC_Flavour_Template.txt"&gt;C:\xampp\htdocs\VNFXchange\Genric_Script\Config\Oracle_SBC_Flavour_Template.txt&lt;/a&gt;'.</msg>
<msg timestamp="20180713 16:39:23.173" level="INFO">${File} = Ram:8192
disk:80
vcpus:4</msg>
<status status="PASS" endtime="20180713 16:39:23.173" starttime="20180713 16:39:23.171"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Flavor_list}</var>
</assign>
<msg timestamp="20180713 16:39:23.173" level="INFO">${Flavor_list} = []</msg>
<status status="PASS" endtime="20180713 16:39:23.174" starttime="20180713 16:39:23.173"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${File}</arg>
</arguments>
<assign>
<var>@{list}</var>
</assign>
<msg timestamp="20180713 16:39:23.174" level="INFO">3 lines returned</msg>
<msg timestamp="20180713 16:39:23.174" level="INFO">@{list} = [ Ram:8192 | disk:80 | vcpus:4 ]</msg>
<status status="PASS" endtime="20180713 16:39:23.174" starttime="20180713 16:39:23.174"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${i}</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.175" starttime="20180713 16:39:23.175"></status>
</kw>
<kw type="for" name="${line} IN [ @{list} ]">
<kw type="foritem" name="${line} = Ram:8192">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>${line}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.176" starttime="20180713 16:39:23.175"></status>
</kw>
<kw name="Split String From Right" library="String">
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<arguments>
<arg>${line}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{data}</var>
</assign>
<msg timestamp="20180713 16:39:23.176" level="INFO">@{data} = [ Ram | 8192 ]</msg>
<status status="PASS" endtime="20180713 16:39:23.176" starttime="20180713 16:39:23.176"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180713 16:39:23.177" level="INFO">${Value} = 8192</msg>
<status status="PASS" endtime="20180713 16:39:23.177" starttime="20180713 16:39:23.177"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>${Value}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.178" starttime="20180713 16:39:23.177"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:23.178" starttime="20180713 16:39:23.175"></status>
</kw>
<kw type="foritem" name="${line} = disk:80">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>${line}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.178" starttime="20180713 16:39:23.178"></status>
</kw>
<kw name="Split String From Right" library="String">
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<arguments>
<arg>${line}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{data}</var>
</assign>
<msg timestamp="20180713 16:39:23.179" level="INFO">@{data} = [ disk | 80 ]</msg>
<status status="PASS" endtime="20180713 16:39:23.179" starttime="20180713 16:39:23.179"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180713 16:39:23.180" level="INFO">${Value} = 80</msg>
<status status="PASS" endtime="20180713 16:39:23.180" starttime="20180713 16:39:23.179"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>${Value}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.181" starttime="20180713 16:39:23.180"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:23.181" starttime="20180713 16:39:23.178"></status>
</kw>
<kw type="foritem" name="${line} = vcpus:4">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>${line}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.181" starttime="20180713 16:39:23.181"></status>
</kw>
<kw name="Split String From Right" library="String">
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<arguments>
<arg>${line}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{data}</var>
</assign>
<msg timestamp="20180713 16:39:23.182" level="INFO">@{data} = [ vcpus | 4 ]</msg>
<status status="PASS" endtime="20180713 16:39:23.182" starttime="20180713 16:39:23.181"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180713 16:39:23.183" level="INFO">${Value} = 4</msg>
<status status="PASS" endtime="20180713 16:39:23.183" starttime="20180713 16:39:23.182"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>${Value}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:23.184" starttime="20180713 16:39:23.183"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:23.184" starttime="20180713 16:39:23.181"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:23.184" starttime="20180713 16:39:23.175"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Ram}</var>
</assign>
<msg timestamp="20180713 16:39:23.184" level="INFO">${Ram} = 8192</msg>
<status status="PASS" endtime="20180713 16:39:23.185" starttime="20180713 16:39:23.184"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Disk}</var>
</assign>
<msg timestamp="20180713 16:39:23.185" level="INFO">${Disk} = 80</msg>
<status status="PASS" endtime="20180713 16:39:23.185" starttime="20180713 16:39:23.185"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${CPU}</var>
</assign>
<msg timestamp="20180713 16:39:23.186" level="INFO">${CPU} = 4</msg>
<status status="PASS" endtime="20180713 16:39:23.186" starttime="20180713 16:39:23.186"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Ram}</arg>
</arguments>
<msg timestamp="20180713 16:39:23.187" level="INFO">${Ram} = 8192</msg>
<status status="PASS" endtime="20180713 16:39:23.187" starttime="20180713 16:39:23.186"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Disk}</arg>
</arguments>
<msg timestamp="20180713 16:39:23.188" level="INFO">${Disk} = 80</msg>
<status status="PASS" endtime="20180713 16:39:23.188" starttime="20180713 16:39:23.187"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CPU}</arg>
</arguments>
<msg timestamp="20180713 16:39:23.189" level="INFO">${CPU} = 4</msg>
<status status="PASS" endtime="20180713 16:39:23.189" starttime="20180713 16:39:23.188"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:23.189" starttime="20180713 16:39:23.171"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova flavor-create</arg>
<arg>${FlavourName}</arg>
<arg>auto</arg>
<arg>${Ram}</arg>
<arg>${Disk}</arg>
<arg>${CPU}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180713 16:39:23.190" level="INFO">${str} = nova flavor-create Oracle_SBC_Flavour_Template auto 8192 80 4</msg>
<status status="PASS" endtime="20180713 16:39:23.190" starttime="20180713 16:39:23.189"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180713 16:39:23.194" level="INFO">nova flavor-create Oracle_SBC_Flavour_Templ ate auto 8192 80 4</msg>
<status status="PASS" endtime="20180713 16:39:23.194" starttime="20180713 16:39:23.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:39:28.195" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:39:28.195" starttime="20180713 16:39:23.194"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:39:28.197" level="INFO">ERROR (Conflict): Flavor with name Oracle_SBC_Flavour_Template already exists. (HTTP 409) (Request-ID: req-eb5c8434-54fb-43f0-82a5-eb4e236019f9)
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:39:28.197" level="INFO">${output} = ERROR (Conflict): Flavor with name Oracle_SBC_Flavour_Template already exists. (HTTP 409) (Request-ID: req-eb5c8434-54fb-43f0-82a5-eb4e236019f9)
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180713 16:39:28.197" starttime="20180713 16:39:28.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>********************Create Flavor Complete*****************************</arg>
</arguments>
<msg timestamp="20180713 16:39:28.199" level="INFO">********************Create Flavor Complete*****************************</msg>
<status status="PASS" endtime="20180713 16:39:28.199" starttime="20180713 16:39:28.198"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:28.199" starttime="20180713 16:39:23.169"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC Flavor Creation is Successfully Completed ***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:28.201" starttime="20180713 16:39:28.200"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:28.202" starttime="20180713 16:39:23.167"></status>
</kw>
<kw name="Flavor_Validation" library="Oracle_SBC_Keywords">
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Flavor Validation Started ***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:28.206" starttime="20180713 16:39:28.205"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:28.207" starttime="20180713 16:39:28.207"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:28.209" starttime="20180713 16:39:28.208"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova flavor-list |grep \ -i</arg>
<arg>${FlavourName}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180713 16:39:28.211" level="INFO">${str} = nova flavor-list |grep  -i Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180713 16:39:28.211" starttime="20180713 16:39:28.209"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180713 16:39:28.218" level="INFO">nova flavor-list |grep  -i Oracle_SBC_Flavo ur_Template</msg>
<status status="PASS" endtime="20180713 16:39:28.218" starttime="20180713 16:39:28.213"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:28.218" starttime="20180713 16:39:28.211"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20180713 16:39:38.219" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20180713 16:39:38.220" starttime="20180713 16:39:28.219"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:39:38.222" level="INFO">| 9c0a9e9a-647c-4582-8282-a8e91283e5fd | [01;31m[KOracle_SBC_Flavour_Template[m[K | 8192      | 80    | 0         |      | 4     | 1.0         | True      |
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:39:38.223" level="INFO">${output} = | 9c0a9e9a-647c-4582-8282-a8e91283e5fd | [01;31m[KOracle_SBC_Flavour_Template[m[K | 8192      | 80    | 0         |      | 4     | 1.0         | True      |
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180713 16:39:38.223" starttime="20180713 16:39:38.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${FlavourName}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.224" starttime="20180713 16:39:38.223"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Flavor_Validation is Successfully Completed ***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.227" starttime="20180713 16:39:38.225"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:38.227" starttime="20180713 16:39:28.203"></status>
</kw>
<kw name="SBC_CreateImage" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.230" starttime="20180713 16:39:38.229"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.231" starttime="20180713 16:39:38.231"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>**************Push Image started***********</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.232" starttime="20180713 16:39:38.231"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>PushimagefiletoServer</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.233" starttime="20180713 16:39:38.232"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>**************Push Image Completed***********</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.234" starttime="20180713 16:39:38.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>**************Image Create Started ***********</arg>
</arguments>
<msg timestamp="20180713 16:39:38.235" level="INFO">**************Image Create Started ***********</msg>
<status status="PASS" endtime="20180713 16:39:38.236" starttime="20180713 16:39:38.235"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Image Create Started ***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.238" starttime="20180713 16:39:38.236"></status>
</kw>
<kw name="GlanceImageUpload" library="Genric_Keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>******************Create Image on Glance Started*******************</arg>
</arguments>
<msg timestamp="20180713 16:39:38.240" level="INFO">******************Create Image on Glance Started*******************</msg>
<status status="PASS" endtime="20180713 16:39:38.240" starttime="20180713 16:39:38.239"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Switch Connection</arg>
<arg>${Index}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.241" starttime="20180713 16:39:38.241"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${IN}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.242" starttime="20180713 16:39:38.242"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${DF}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.243" starttime="20180713 16:39:38.243"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${IFP}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.244" starttime="20180713 16:39:38.244"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${CF}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.245" starttime="20180713 16:39:38.245"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${FP}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.246" starttime="20180713 16:39:38.246"></status>
</kw>
<kw name="Getimagename" library="Library">
<arguments>
<arg>${ImageFilePath}</arg>
<arg>${ImageFileName}</arg>
</arguments>
<assign>
<var>${remotepathwithimagename}</var>
</assign>
<msg timestamp="20180713 16:39:38.248" level="INFO">${remotepathwithimagename} = /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:39:38.248" starttime="20180713 16:39:38.247"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${dstImage}</arg>
<arg>Catenate</arg>
<arg>SEPERATOR=/</arg>
<arg>/root/auto_heatfiles</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.249" starttime="20180713 16:39:38.249"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${IN}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:38.250" starttime="20180713 16:39:38.250"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>glance image-create --name</arg>
<arg>${ImageName}</arg>
</arguments>
<assign>
<var>${str1}</var>
</assign>
<msg timestamp="20180713 16:39:38.252" level="INFO">${str1} = glance image-create --name asdfsf</msg>
<status status="PASS" endtime="20180713 16:39:38.252" starttime="20180713 16:39:38.251"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--disk-format</arg>
<arg>${DiskFormat}</arg>
</arguments>
<assign>
<var>${str2}</var>
</assign>
<msg timestamp="20180713 16:39:38.254" level="INFO">${str2} = --disk-format qcow2</msg>
<status status="PASS" endtime="20180713 16:39:38.254" starttime="20180713 16:39:38.253"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--file</arg>
<arg>${remotepathwithimagename}</arg>
</arguments>
<assign>
<var>${str3}</var>
</assign>
<msg timestamp="20180713 16:39:38.256" level="INFO">${str3} = --file /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:39:38.256" starttime="20180713 16:39:38.255"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--container-format</arg>
<arg>${ConatinerFormat}</arg>
</arguments>
<assign>
<var>${str4}</var>
</assign>
<msg timestamp="20180713 16:39:38.257" level="INFO">${str4} = --container-format bare</msg>
<status status="PASS" endtime="20180713 16:39:38.258" starttime="20180713 16:39:38.256"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${str1}</arg>
<arg>${str2}</arg>
<arg>${str4}</arg>
<arg>${str3}</arg>
</arguments>
<assign>
<var>${str5}</var>
</assign>
<msg timestamp="20180713 16:39:38.260" level="INFO">${str5} = glance image-create --name asdfsf --disk-format qcow2 --container-format bare --file /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:39:38.260" starttime="20180713 16:39:38.258"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str5}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str5}</arg>
</arguments>
<msg timestamp="20180713 16:39:38.271" level="INFO">glance image-create --name asdfsf --disk-fo rmat qcow2 --container-format bare --file /root/auto_heatfiles/nnSCZ739p1-img-vm _kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:39:38.271" starttime="20180713 16:39:38.262"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:38.272" starttime="20180713 16:39:38.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15</arg>
</arguments>
<msg timestamp="20180713 16:39:53.273" level="INFO">Slept 15 seconds</msg>
<status status="PASS" endtime="20180713 16:39:53.274" starttime="20180713 16:39:38.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>******************Create Image on Glance completed*******************</arg>
</arguments>
<msg timestamp="20180713 16:39:53.276" level="INFO">******************Create Image on Glance completed*******************</msg>
<status status="PASS" endtime="20180713 16:39:53.276" starttime="20180713 16:39:53.274"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:39:53.277" level="INFO">+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | 9c12c518d6358b2826b30d82597d4feb     |
| container_format | bare                                 |
| created_at       | 2018-07-13T11:08:32Z                 |
| disk_format      | qcow2                                |
| id               | fd8e2bd8-f71e-4815-951c-888bfdb68e81 |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | asdfsf                               |
| owner            | 8f6857039a224ab1b596bfd42147dc88     |
| protected        | False                                |
| size             | 93847552                             |
| status           | active                               |
| tags             | []                                   |
| updated_at       | 2018-07-13T11:08:33Z                 |
| virtual_size     | None                                 |
| visibility       | private                              |
+------------------+--------------------------------------+
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:39:53.278" level="INFO">${output} = +------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum       ...</msg>
<status status="PASS" endtime="20180713 16:39:53.278" starttime="20180713 16:39:53.277"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:53.279" starttime="20180713 16:39:38.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>**************Image Create Completed ***********</arg>
</arguments>
<msg timestamp="20180713 16:39:53.280" level="INFO">**************Image Create Completed ***********</msg>
<status status="PASS" endtime="20180713 16:39:53.280" starttime="20180713 16:39:53.279"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC_CreateImage Done***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:53.283" starttime="20180713 16:39:53.281"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:53.283" starttime="20180713 16:39:38.229"></status>
</kw>
<kw name="Image_Validation" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:53.286" starttime="20180713 16:39:53.285"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:53.286" starttime="20180713 16:39:53.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************************Image Validation Started**********************</arg>
</arguments>
<msg timestamp="20180713 16:39:53.287" level="INFO">*****************************Image Validation Started**********************</msg>
<status status="PASS" endtime="20180713 16:39:53.287" starttime="20180713 16:39:53.287"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Print Logger</arg>
<arg>*****************************Uploading of qcow2 Image to Glance**********************</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:53.288" starttime="20180713 16:39:53.288"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Image Validation Started***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:53.290" starttime="20180713 16:39:53.289"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova image-list |grep \ -i</arg>
<arg>${ImageName}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180713 16:39:53.291" level="INFO">${str} = nova image-list |grep  -i asdfsf</msg>
<status status="PASS" endtime="20180713 16:39:53.291" starttime="20180713 16:39:53.290"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180713 16:39:53.297" level="INFO">nova image-list |grep  -i asdfsf</msg>
<status status="PASS" endtime="20180713 16:39:53.298" starttime="20180713 16:39:53.293"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:53.298" starttime="20180713 16:39:53.292"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:39:58.298" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:39:58.298" starttime="20180713 16:39:53.298"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:39:58.300" level="INFO">| fd8e2bd8-f71e-4815-951c-888bfdb68e81 | [01;31m[Kasdfsf[m[K                                          | ACTIVE |                                      |
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:39:58.301" level="INFO">${output} = | fd8e2bd8-f71e-4815-951c-888bfdb68e81 | [01;31m[Kasdfsf[m[K                                          | ACTIVE |                                      |
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180713 16:39:58.301" starttime="20180713 16:39:58.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${ImageName}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.303" starttime="20180713 16:39:58.301"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Print Logger</arg>
<arg>*******SBC VNF image Qcow2 is uploaded &amp; validated for checksum*******</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.304" starttime="20180713 16:39:58.303"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Image_Validation Done***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.306" starttime="20180713 16:39:58.304"></status>
</kw>
<status status="PASS" endtime="20180713 16:39:58.306" starttime="20180713 16:39:53.284"></status>
</kw>
<kw name="SBC_OnboardVM" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.310" starttime="20180713 16:39:58.309"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.311" starttime="20180713 16:39:58.310"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC VM creation is in progress ***</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.313" starttime="20180713 16:39:58.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*************VM Create Started ***********</arg>
</arguments>
<msg timestamp="20180713 16:39:58.314" level="INFO">*************VM Create Started ***********</msg>
<status status="PASS" endtime="20180713 16:39:58.314" starttime="20180713 16:39:58.313"></status>
</kw>
<kw name="VMCreation" library="Genric_Keywords">
<arguments>
<arg>${Label}</arg>
<arg>${NicSBC}</arg>
</arguments>
<kw name="Getimagename" library="Library">
<arguments>
<arg>${ImageFilePath}</arg>
<arg>${ImageFileName}</arg>
</arguments>
<assign>
<var>${remotepathwithimagename}</var>
</assign>
<msg timestamp="20180713 16:39:58.319" level="INFO">${remotepathwithimagename} = /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:39:58.319" starttime="20180713 16:39:58.317"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>write</arg>
<arg>neutron net-list | head -6 | tail -3 | awk -F "|" '{print $2}' &gt;&gt; nicID.txt</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.320" starttime="20180713 16:39:58.320"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Get File</arg>
<arg>/root/nicID.txt</arg>
<arg>C://Users//Admin//Desktop//Sukesh-Automation//RobotFramework//Genric_Script//Python_Script//</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.321" starttime="20180713 16:39:58.321"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Switch Connection</arg>
<arg>${Index}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.323" starttime="20180713 16:39:58.322"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{FlvrParam}</arg>
<arg>Parseconfdata</arg>
<arg>${FlavorP}</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.324" starttime="20180713 16:39:58.323"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${FlavourName}</arg>
<arg>Get From List</arg>
<arg>${FlvrParam}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.325" starttime="20180713 16:39:58.324"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--flavor</arg>
<arg>${FlavourName}</arg>
</arguments>
<assign>
<var>${flavor}</var>
</assign>
<msg timestamp="20180713 16:39:58.327" level="INFO">${flavor} = --flavor Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180713 16:39:58.327" starttime="20180713 16:39:58.326"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--availability_zone</arg>
<arg>${AvZone}</arg>
</arguments>
<assign>
<var>${AvailZone}</var>
</assign>
<msg timestamp="20180713 16:39:58.329" level="INFO">${AvailZone} = --availability_zone nova:compute1</msg>
<status status="PASS" endtime="20180713 16:39:58.329" starttime="20180713 16:39:58.328"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--security-groups</arg>
<arg>${Security}</arg>
</arguments>
<assign>
<var>${SecurityPol}</var>
</assign>
<msg timestamp="20180713 16:39:58.331" level="INFO">${SecurityPol} = --security-groups default</msg>
<status status="PASS" endtime="20180713 16:39:58.331" starttime="20180713 16:39:58.330"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${image}</arg>
<arg>Catenate</arg>
<arg>--image</arg>
<arg>${IN}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:39:58.333" starttime="20180713 16:39:58.332"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova boot</arg>
<arg>${flavor}</arg>
<arg>--image</arg>
<arg>${ImageName}</arg>
<arg>${AvailZone}</arg>
<arg>${SecurityPol}</arg>
<arg>${Nic}</arg>
<arg>--config-drive=true</arg>
<arg>${VNFName}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180713 16:39:58.336" level="INFO">${str} = nova boot --flavor Oracle_SBC_Flavour_Template --image asdfsf --availability_zone nova:compute1 --security-groups default --nic net-id=3f4a053f-3b05-4388-8e4a-8e47bcd757fb  --nic net-id=78d1ec17-397d-...</msg>
<status status="PASS" endtime="20180713 16:39:58.336" starttime="20180713 16:39:58.333"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:40:03.337" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:40:03.337" starttime="20180713 16:39:58.337"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180713 16:40:03.358" level="INFO">nova boot --flavor Oracle_SBC_Flavour_Templ ate --image asdfsf --availability_zone nova:compute1 --security-groups default - -nic net-id=3f4a053f-3b05-4388-8e4a-8e47bcd757fb  --nic net-id=78d1ec17-397d-455 c-9d4d-3e79116d6337  --nic net-id=78d1ec17-397d-455c-9d4d-3e79116d6337 --config- drive=true sfdsf</msg>
<status status="PASS" endtime="20180713 16:40:03.358" starttime="20180713 16:40:03.340"></status>
</kw>
<status status="PASS" endtime="20180713 16:40:03.358" starttime="20180713 16:40:03.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40</arg>
</arguments>
<msg timestamp="20180713 16:40:43.360" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20180713 16:40:43.360" starttime="20180713 16:40:03.359"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:40:43.362" level="INFO">+--------------------------------------+--------------------------------------------------------------------+
| Property                             | Value                                                              |
+--------------------------------------+--------------------------------------------------------------------+
| OS-DCF:diskConfig                    | MANUAL                                                             |
| OS-EXT-AZ:availability_zone          | nova                                                               |
| OS-EXT-SRV-ATTR:host                 | -                                                                  |
| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                                                  |
| OS-EXT-SRV-ATTR:instance_name        | instance-00001420                                                  |
| OS-EXT-STS:power_state               | 0                                                                  |
| OS-EXT-STS:task_state                | scheduling                                                         |
| OS-EXT-STS:vm_state                  | building                                                           |
| OS-SRV-USG:launched_at               | -                                                                  |
| OS-SRV-USG:terminated_at             | -                                                                  |
| accessIPv4                           |                                                                    |
| accessIPv6                           |                                                                    |
| adminPass                            | 2Nt8RyWmptq5                                                       |
| config_drive                         | True                                                               |
| created                              | 2018-07-13T11:08:59Z                                               |
| flavor                               | Oracle_SBC_Flavour_Template (9c0a9e9a-647c-4582-8282-a8e91283e5fd) |
| hostId                               |                                                                    |
| id                                   | 593439b0-c51a-4b2f-b7cd-43e4e42205aa                               |
| image                                | asdfsf (fd8e2bd8-f71e-4815-951c-888bfdb68e81)                      |
| key_name                             | -                                                                  |
| metadata                             | {}                                                                 |
| name                                 | sfdsf                                                              |
| os-extended-volumes:volumes_attached | []                                                                 |
| progress                             | 0                                                                  |
| security_groups                      | default                                                            |
| status                               | BUILD                                                              |
| tenant_id                            | 8f6857039a224ab1b596bfd42147dc88                                   |
| updated                              | 2018-07-13T11:08:59Z                                               |
| user_id                              | 26917d95d4584829a3db1f86c252a709                                   |
+--------------------------------------+--------------------------------------------------------------------+
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:40:43.363" level="INFO">${output} = +--------------------------------------+--------------------------------------------------------------------+
| Property                             | Value                                           ...</msg>
<status status="PASS" endtime="20180713 16:40:43.363" starttime="20180713 16:40:43.361"></status>
</kw>
<status status="PASS" endtime="20180713 16:40:43.364" starttime="20180713 16:39:58.315"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20180713 16:41:43.365" level="INFO">Slept 1 minute</msg>
<status status="PASS" endtime="20180713 16:41:43.365" starttime="20180713 16:40:43.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>********Reboot Process In Progress Bringing up the VM *************</arg>
</arguments>
<msg timestamp="20180713 16:41:43.366" level="INFO">********Reboot Process In Progress Bringing up the VM *************</msg>
<status status="PASS" endtime="20180713 16:41:43.366" starttime="20180713 16:41:43.365"></status>
</kw>
<kw name="Reboot_loop" library="Oracle_SBC_Keywords">
<kw name="Get_SBC-IP" library="Oracle_SBC_Keywords">
<kw name="ImportDetails" library="Genric_Keywords">
<arguments>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Server}</var>
</assign>
<kw name="Parseconfdata" library="Library">
<arguments>
<arg>${ConfigPath}</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Param}</var>
</assign>
<msg timestamp="20180713 16:41:43.369" level="INFO">@{Param} = [ "RedHat" | sfdsf | asdfsf | qcow2 | /root/auto_heatfiles | bare | C:\xampp\htdocs\VNFXchange | nova:compute1 | default | TCP | Ingress | ipv4 | Oracle_SBC_Flavour_Template.txt | nnSCZ739p1-img-vm_kv...</msg>
<status status="PASS" endtime="20180713 16:41:43.369" starttime="20180713 16:41:43.368"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${server}</var>
</assign>
<msg timestamp="20180713 16:41:43.370" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180713 16:41:43.370" starttime="20180713 16:41:43.369"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${VNFName}</var>
</assign>
<msg timestamp="20180713 16:41:43.371" level="INFO">${VNFName} = sfdsf</msg>
<status status="PASS" endtime="20180713 16:41:43.371" starttime="20180713 16:41:43.370"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${ImageName}</var>
</assign>
<msg timestamp="20180713 16:41:43.372" level="INFO">${ImageName} = asdfsf</msg>
<status status="PASS" endtime="20180713 16:41:43.372" starttime="20180713 16:41:43.371"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${DiskFormat}</var>
</assign>
<msg timestamp="20180713 16:41:43.373" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180713 16:41:43.373" starttime="20180713 16:41:43.372"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${ImageFilePath}</var>
</assign>
<msg timestamp="20180713 16:41:43.374" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180713 16:41:43.374" starttime="20180713 16:41:43.373"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${ConatinerFormat}</var>
</assign>
<msg timestamp="20180713 16:41:43.375" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180713 16:41:43.375" starttime="20180713 16:41:43.374"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${FlavorP}</var>
</assign>
<msg timestamp="20180713 16:41:43.376" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180713 16:41:43.376" starttime="20180713 16:41:43.375"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${AvZone}</var>
</assign>
<msg timestamp="20180713 16:41:43.377" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180713 16:41:43.377" starttime="20180713 16:41:43.376"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${Security}</var>
</assign>
<msg timestamp="20180713 16:41:43.378" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180713 16:41:43.378" starttime="20180713 16:41:43.377"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${Protocol}</var>
</assign>
<msg timestamp="20180713 16:41:43.379" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180713 16:41:43.379" starttime="20180713 16:41:43.378"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>10</arg>
</arguments>
<assign>
<var>${Direction}</var>
</assign>
<msg timestamp="20180713 16:41:43.380" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180713 16:41:43.380" starttime="20180713 16:41:43.379"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>11</arg>
</arguments>
<assign>
<var>${Ethertype}</var>
</assign>
<msg timestamp="20180713 16:41:43.380" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180713 16:41:43.380" starttime="20180713 16:41:43.380"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<assign>
<var>${FN}</var>
</assign>
<msg timestamp="20180713 16:41:43.381" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180713 16:41:43.381" starttime="20180713 16:41:43.381"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<assign>
<var>${ImageFileName}</var>
</assign>
<msg timestamp="20180713 16:41:43.382" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:41:43.382" starttime="20180713 16:41:43.382"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic1}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20180713 16:41:43.383" starttime="20180713 16:41:43.382"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic2}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20180713 16:41:43.383" starttime="20180713 16:41:43.383"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic3}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>14</arg>
</arguments>
<status status="PASS" endtime="20180713 16:41:43.384" starttime="20180713 16:41:43.384"></status>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<doc>Splits the extension from the given path.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<assign>
<var>${FlavourName}</var>
<var>${Ext}</var>
</assign>
<msg timestamp="20180713 16:41:43.385" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<msg timestamp="20180713 16:41:43.385" level="INFO">${Ext} = txt</msg>
<status status="PASS" endtime="20180713 16:41:43.385" starttime="20180713 16:41:43.384"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFileName}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.386" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180713 16:41:43.386" starttime="20180713 16:41:43.385"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.387" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180713 16:41:43.387" starttime="20180713 16:41:43.386"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavourName}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.388" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180713 16:41:43.388" starttime="20180713 16:41:43.387"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.389" level="INFO">${VNFName} = sfdsf</msg>
<status status="PASS" endtime="20180713 16:41:43.389" starttime="20180713 16:41:43.388"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${server}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.390" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180713 16:41:43.390" starttime="20180713 16:41:43.389"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageName}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.391" level="INFO">${ImageName} = asdfsf</msg>
<status status="PASS" endtime="20180713 16:41:43.391" starttime="20180713 16:41:43.390"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${DiskFormat}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.392" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180713 16:41:43.392" starttime="20180713 16:41:43.391"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFilePath}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.393" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180713 16:41:43.393" starttime="20180713 16:41:43.392"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ConatinerFormat}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.394" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180713 16:41:43.394" starttime="20180713 16:41:43.393"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavorP}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.395" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180713 16:41:43.395" starttime="20180713 16:41:43.394"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${AvZone}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.396" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180713 16:41:43.396" starttime="20180713 16:41:43.396"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Security}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.397" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180713 16:41:43.397" starttime="20180713 16:41:43.397"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Protocol}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.398" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180713 16:41:43.398" starttime="20180713 16:41:43.398"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Direction}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.399" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180713 16:41:43.399" starttime="20180713 16:41:43.398"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Ethertype}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.400" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180713 16:41:43.400" starttime="20180713 16:41:43.400"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic1}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:41:43.401" starttime="20180713 16:41:43.400"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic2}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:41:43.401" starttime="20180713 16:41:43.401"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.402" level="INFO">${VNFName} = sfdsf</msg>
<status status="PASS" endtime="20180713 16:41:43.402" starttime="20180713 16:41:43.401"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic3}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:41:43.403" starttime="20180713 16:41:43.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${server}=="RedHat"</arg>
<arg>Return From Keyword</arg>
<arg>@{RedHat}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>@{RedHat}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20180713 16:41:43.404" starttime="20180713 16:41:43.404"></status>
</kw>
<status status="PASS" endtime="20180713 16:41:43.404" starttime="20180713 16:41:43.403"></status>
</kw>
<msg timestamp="20180713 16:41:43.405" level="INFO">@{Server} = [ 10.53.214.10 | root | techm123 ]</msg>
<status status="PASS" endtime="20180713 16:41:43.405" starttime="20180713 16:41:43.367"></status>
</kw>
<kw name="Server_Login" library="Genric_Keywords">
<arguments>
<arg>@{Server}</arg>
</arguments>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${HOST}</var>
</assign>
<msg timestamp="20180713 16:41:43.406" level="INFO">${HOST} = 10.53.214.10</msg>
<status status="PASS" endtime="20180713 16:41:43.406" starttime="20180713 16:41:43.406"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${USERNAME}</var>
</assign>
<msg timestamp="20180713 16:41:43.407" level="INFO">${USERNAME} = root</msg>
<status status="PASS" endtime="20180713 16:41:43.407" starttime="20180713 16:41:43.406"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${PASSWORD}</var>
</assign>
<msg timestamp="20180713 16:41:43.408" level="INFO">${PASSWORD} = techm123</msg>
<status status="PASS" endtime="20180713 16:41:43.408" starttime="20180713 16:41:43.407"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 4 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${HOST}</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20180713 16:41:43.411" level="INFO">${Index} = 2</msg>
<status status="PASS" endtime="20180713 16:41:43.411" starttime="20180713 16:41:43.409"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Login</arg>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180713 16:41:43.412" level="INFO">Logging into '10.53.214.10:22' as 'root'.</msg>
<msg timestamp="20180713 16:42:04.533" level="INFO">Read output: Last login: Fri Jul 13 07:08:12 2018 from 10.53.172.9
[root@controller ~]#</msg>
<status status="PASS" endtime="20180713 16:42:04.533" starttime="20180713 16:41:43.412"></status>
</kw>
<msg timestamp="20180713 16:42:04.533" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20180713 16:42:04.533" starttime="20180713 16:41:43.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20180713 16:42:04.534" starttime="20180713 16:42:04.533"></status>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20180713 16:42:04.534" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20180713 16:42:04.534" starttime="20180713 16:42:04.534"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:04.534" starttime="20180713 16:41:43.408"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:04.534" starttime="20180713 16:41:43.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation**********************</arg>
</arguments>
<msg timestamp="20180713 16:42:04.535" level="INFO">*****************ServerLogin_Validation**********************</msg>
<status status="PASS" endtime="20180713 16:42:04.535" starttime="20180713 16:42:04.535"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>ifconfig | grep inet</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>ifconfig | grep inet</arg>
</arguments>
<msg timestamp="20180713 16:42:04.538" level="INFO">ifconfig | grep inet</msg>
<status status="PASS" endtime="20180713 16:42:04.538" starttime="20180713 16:42:04.535"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:04.538" starttime="20180713 16:42:04.535"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20180713 16:42:08.539" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20180713 16:42:08.539" starttime="20180713 16:42:04.539"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:42:08.540" level="INFO">[01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 172.18.113.11  netmask 255.255.255.0  broadcast 172.18.113.255
        [01;31m[Kinet[m[K6 fe80::8006:74ff:fe4f:e843  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.80.1.8  netmask 255.255.255.0  broadcast 10.80.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.81.1.8  netmask 255.255.255.0  broadcast 10.81.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3ca  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.53.214.10  netmask 255.255.255.0  broadcast 10.53.214.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cc  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 127.0.0.1  netmask 255.0.0.0
        [01;31m[Kinet[m[K6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
[root@controller ~]#</msg>
<msg timestamp="20180713 16:42:08.541" level="INFO">${output} =         [01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[...</msg>
<status status="PASS" endtime="20180713 16:42:08.541" starttime="20180713 16:42:08.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${HOST}</arg>
</arguments>
<status status="PASS" endtime="20180713 16:42:08.542" starttime="20180713 16:42:08.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation Completed**********************</arg>
</arguments>
<msg timestamp="20180713 16:42:08.543" level="INFO">*****************ServerLogin_Validation Completed**********************</msg>
<status status="PASS" endtime="20180713 16:42:08.543" starttime="20180713 16:42:08.542"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>source keystonerc_admin</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>source keystonerc_admin</arg>
</arguments>
<msg timestamp="20180713 16:42:08.548" level="INFO">source keystonerc_admin</msg>
<status status="PASS" endtime="20180713 16:42:08.548" starttime="20180713 16:42:08.544"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:08.548" starttime="20180713 16:42:08.544"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:42:08.549" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:42:08.549" level="INFO">${output} = [root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180713 16:42:08.549" starttime="20180713 16:42:08.549"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:08.550" starttime="20180713 16:41:43.405"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>rm -rf value.txt</arg>
</arguments>
<msg timestamp="20180713 16:42:08.555" level="INFO">rm -rf value.txt</msg>
<status status="PASS" endtime="20180713 16:42:08.555" starttime="20180713 16:42:08.550"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>nova list | grep -i ${VNFName}|awk -F "=" '{print $2}'|awk -F "," '{print $2}'|awk -F ";" '{print $1}'</arg>
</arguments>
<msg timestamp="20180713 16:42:08.561" level="INFO">[root@controller ~(keystone_admin)]# nova list | grep -i sfdsf|awk -F "=" '{prin t $2}'|awk -F "," '{print $2}'|awk -F ";" '{print $1}'</msg>
<status status="PASS" endtime="20180713 16:42:08.561" starttime="20180713 16:42:08.555"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20180713 16:42:12.562" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20180713 16:42:12.562" starttime="20180713 16:42:08.562"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:42:12.564" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:42:12.564" level="INFO">${output} = 
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180713 16:42:12.564" starttime="20180713 16:42:12.563"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:42:12.566" level="INFO">${output} = [u'[root@controller', u'~(keystone_admin)]#']</msg>
<status status="PASS" endtime="20180713 16:42:12.566" starttime="20180713 16:42:12.565"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${output}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Proxy_IP}</var>
</assign>
<msg timestamp="20180713 16:42:12.568" level="INFO">${Proxy_IP} = [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:12.568" starttime="20180713 16:42:12.567"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Proxy_IP}</arg>
</arguments>
<msg timestamp="20180713 16:42:12.570" level="INFO">${Proxy_IP} = [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:12.570" starttime="20180713 16:42:12.569"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>nova list | grep -i ${VNFName}| awk -F ";" '{print $2}' | awk -F "=" '{print $2}'| awk -F " \ " '{print $1}'</arg>
</arguments>
<msg timestamp="20180713 16:42:12.582" level="INFO">nova list | grep -i sfdsf| awk -F ";" '{pri nt $2}' | awk -F "=" '{print $2}'| awk -F "  " '{print $1}'</msg>
<status status="PASS" endtime="20180713 16:42:12.582" starttime="20180713 16:42:12.571"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:17.584" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:17.584" starttime="20180713 16:42:12.583"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:42:17.584" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180713 16:42:17.584" level="INFO">${output} = 
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180713 16:42:17.585" starttime="20180713 16:42:17.584"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180713 16:42:17.585" level="INFO">${output} = [u'[root@controller', u'~(keystone_admin)]#']</msg>
<status status="PASS" endtime="20180713 16:42:17.585" starttime="20180713 16:42:17.585"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${output}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${MGmt_IP}</var>
</assign>
<msg timestamp="20180713 16:42:17.586" level="INFO">${MGmt_IP} = [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:17.586" starttime="20180713 16:42:17.585"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${MGmt_IP}</arg>
</arguments>
<msg timestamp="20180713 16:42:17.586" level="INFO">${MGmt_IP} = [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:17.587" starttime="20180713 16:42:17.586"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:17.587" starttime="20180713 16:41:43.366"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>Rebooting Server...............!</arg>
</arguments>
<status status="PASS" endtime="20180713 16:42:17.587" starttime="20180713 16:42:17.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3</arg>
</arguments>
<msg timestamp="20180713 16:42:20.588" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20180713 16:42:20.588" starttime="20180713 16:42:17.588"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>clear</arg>
</arguments>
<msg timestamp="20180713 16:42:20.591" level="INFO">clear</msg>
<status status="PASS" endtime="20180713 16:42:20.591" starttime="20180713 16:42:20.588"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${i}</var>
</assign>
<msg timestamp="20180713 16:42:20.592" level="INFO">${i} = 0</msg>
<status status="PASS" endtime="20180713 16:42:20.592" starttime="20180713 16:42:20.591"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 250 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:20.593" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:20.593" starttime="20180713 16:42:20.592"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:20.594" level="INFO">[H[J[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:20.594" starttime="20180713 16:42:20.593"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:25.595" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:25.595" starttime="20180713 16:42:20.595"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:42:25.595" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:42:25.595" starttime="20180713 16:42:25.595"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:42:25.596" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:42:25.596" starttime="20180713 16:42:25.596"></status>
</kw>
<msg timestamp="20180713 16:42:25.597" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:42:25.597" starttime="20180713 16:42:25.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:42:25.597" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:42:25.597" starttime="20180713 16:42:25.597"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:25.597" starttime="20180713 16:42:25.597"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:25.598" starttime="20180713 16:42:20.592"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:25.598" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:25.598" starttime="20180713 16:42:25.598"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:25.600" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:25.601" starttime="20180713 16:42:25.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:30.601" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:30.602" starttime="20180713 16:42:25.601"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:42:30.603" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:42:30.603" starttime="20180713 16:42:30.602"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:42:30.607" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:42:30.607" starttime="20180713 16:42:30.605"></status>
</kw>
<msg timestamp="20180713 16:42:30.607" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:42:30.607" starttime="20180713 16:42:30.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:42:30.610" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:42:30.610" starttime="20180713 16:42:30.609"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:30.610" starttime="20180713 16:42:30.608"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:30.610" starttime="20180713 16:42:25.598"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:30.613" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:30.613" starttime="20180713 16:42:30.611"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:30.618" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:30.618" starttime="20180713 16:42:30.614"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:35.620" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:35.620" starttime="20180713 16:42:30.619"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:42:35.620" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:42:35.620" starttime="20180713 16:42:35.620"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:42:35.621" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:42:35.621" starttime="20180713 16:42:35.621"></status>
</kw>
<msg timestamp="20180713 16:42:35.622" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:42:35.622" starttime="20180713 16:42:35.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:42:35.622" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:42:35.622" starttime="20180713 16:42:35.622"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:35.622" starttime="20180713 16:42:35.622"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:35.622" starttime="20180713 16:42:30.611"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:35.623" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:35.623" starttime="20180713 16:42:35.623"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:35.626" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:35.626" starttime="20180713 16:42:35.623"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:40.626" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:40.626" starttime="20180713 16:42:35.626"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:42:40.626" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:42:40.626" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:42:40.626" starttime="20180713 16:42:40.626"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:42:40.628" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:42:40.628" starttime="20180713 16:42:40.627"></status>
</kw>
<msg timestamp="20180713 16:42:40.628" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:42:40.628" starttime="20180713 16:42:40.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:42:40.629" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:42:40.629" starttime="20180713 16:42:40.629"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:40.629" starttime="20180713 16:42:40.628"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:40.629" starttime="20180713 16:42:35.623"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:40.630" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:40.630" starttime="20180713 16:42:40.629"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:40.632" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:40.632" starttime="20180713 16:42:40.630"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:45.632" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:45.632" starttime="20180713 16:42:40.632"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:42:45.632" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:42:45.632" starttime="20180713 16:42:45.632"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:42:45.633" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:42:45.633" starttime="20180713 16:42:45.633"></status>
</kw>
<msg timestamp="20180713 16:42:45.633" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:42:45.633" starttime="20180713 16:42:45.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:42:45.634" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:42:45.634" starttime="20180713 16:42:45.634"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:45.634" starttime="20180713 16:42:45.634"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:45.634" starttime="20180713 16:42:40.629"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:45.635" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:45.635" starttime="20180713 16:42:45.635"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:45.637" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:45.637" starttime="20180713 16:42:45.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:50.638" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:50.638" starttime="20180713 16:42:45.638"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:42:50.638" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:42:50.638" starttime="20180713 16:42:50.638"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:42:50.639" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:42:50.639" starttime="20180713 16:42:50.639"></status>
</kw>
<msg timestamp="20180713 16:42:50.639" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:42:50.639" starttime="20180713 16:42:50.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:42:50.640" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:42:50.640" starttime="20180713 16:42:50.640"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:50.640" starttime="20180713 16:42:50.640"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:50.640" starttime="20180713 16:42:45.634"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:50.641" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:50.641" starttime="20180713 16:42:50.641"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:50.644" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:50.644" starttime="20180713 16:42:50.641"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:42:55.644" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:42:55.644" starttime="20180713 16:42:50.644"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:42:55.644" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:42:55.644" starttime="20180713 16:42:55.644"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:42:55.645" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:42:55.645" starttime="20180713 16:42:55.645"></status>
</kw>
<msg timestamp="20180713 16:42:55.646" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:42:55.646" starttime="20180713 16:42:55.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:42:55.647" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:42:55.647" starttime="20180713 16:42:55.646"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:55.647" starttime="20180713 16:42:55.646"></status>
</kw>
<status status="PASS" endtime="20180713 16:42:55.647" starttime="20180713 16:42:50.641"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:42:55.647" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:55.647" starttime="20180713 16:42:55.647"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:42:55.650" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:42:55.650" starttime="20180713 16:42:55.648"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:00.650" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:00.650" starttime="20180713 16:42:55.650"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:00.650" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:43:00.650" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:43:00.650" starttime="20180713 16:43:00.650"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:00.651" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:00.651" starttime="20180713 16:43:00.651"></status>
</kw>
<msg timestamp="20180713 16:43:00.652" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:00.652" starttime="20180713 16:43:00.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:00.653" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:00.653" starttime="20180713 16:43:00.652"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:00.653" starttime="20180713 16:43:00.652"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:00.653" starttime="20180713 16:42:55.647"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:00.653" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:00.653" starttime="20180713 16:43:00.653"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:00.656" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:00.656" starttime="20180713 16:43:00.654"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:05.656" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:05.656" starttime="20180713 16:43:00.656"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:05.656" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:05.656" starttime="20180713 16:43:05.656"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:05.657" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:05.657" starttime="20180713 16:43:05.657"></status>
</kw>
<msg timestamp="20180713 16:43:05.657" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:05.657" starttime="20180713 16:43:05.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:05.658" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:05.658" starttime="20180713 16:43:05.658"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:05.658" starttime="20180713 16:43:05.658"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:05.658" starttime="20180713 16:43:00.653"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:05.659" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:05.659" starttime="20180713 16:43:05.659"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:05.661" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:05.661" starttime="20180713 16:43:05.659"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:10.661" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:10.661" starttime="20180713 16:43:05.661"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:10.663" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:10.663" starttime="20180713 16:43:10.662"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:10.666" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:10.667" starttime="20180713 16:43:10.665"></status>
</kw>
<msg timestamp="20180713 16:43:10.667" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:10.667" starttime="20180713 16:43:10.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:10.670" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:10.670" starttime="20180713 16:43:10.669"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:10.670" starttime="20180713 16:43:10.668"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:10.670" starttime="20180713 16:43:05.658"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:10.673" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:10.673" starttime="20180713 16:43:10.671"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:10.678" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:10.678" starttime="20180713 16:43:10.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:15.679" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:15.679" starttime="20180713 16:43:10.679"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:15.681" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:15.681" starttime="20180713 16:43:15.680"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:15.684" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:15.684" starttime="20180713 16:43:15.683"></status>
</kw>
<msg timestamp="20180713 16:43:15.684" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:15.685" starttime="20180713 16:43:15.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:15.687" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:15.688" starttime="20180713 16:43:15.687"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:15.688" starttime="20180713 16:43:15.685"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:15.688" starttime="20180713 16:43:10.671"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:15.690" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:15.690" starttime="20180713 16:43:15.689"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:15.696" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:15.697" starttime="20180713 16:43:15.691"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:20.698" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:20.698" starttime="20180713 16:43:15.697"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:20.698" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:43:20.698" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:43:20.698" starttime="20180713 16:43:20.698"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:20.698" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:20.698" starttime="20180713 16:43:20.698"></status>
</kw>
<msg timestamp="20180713 16:43:20.698" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:20.698" starttime="20180713 16:43:20.698"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:20.698" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:20.698" starttime="20180713 16:43:20.698"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:20.698" starttime="20180713 16:43:20.698"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:20.698" starttime="20180713 16:43:15.688"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:20.698" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:20.698" starttime="20180713 16:43:20.698"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:20.713" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:20.713" starttime="20180713 16:43:20.713"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:25.723" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:25.723" starttime="20180713 16:43:20.713"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:25.723" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:25.723" starttime="20180713 16:43:25.723"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:25.723" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:25.723" starttime="20180713 16:43:25.723"></status>
</kw>
<msg timestamp="20180713 16:43:25.723" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:25.723" starttime="20180713 16:43:25.723"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:25.723" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:25.723" starttime="20180713 16:43:25.723"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:25.723" starttime="20180713 16:43:25.723"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:25.723" starttime="20180713 16:43:20.698"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:25.723" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:25.723" starttime="20180713 16:43:25.723"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:25.739" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:25.739" starttime="20180713 16:43:25.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:30.740" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:30.740" starttime="20180713 16:43:25.739"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:30.740" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:30.740" starttime="20180713 16:43:30.740"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:30.740" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:30.740" starttime="20180713 16:43:30.740"></status>
</kw>
<msg timestamp="20180713 16:43:30.740" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:30.740" starttime="20180713 16:43:30.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:30.740" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:30.740" starttime="20180713 16:43:30.740"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:30.740" starttime="20180713 16:43:30.740"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:30.740" starttime="20180713 16:43:25.723"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:30.740" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:30.740" starttime="20180713 16:43:30.740"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:30.756" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:30.756" starttime="20180713 16:43:30.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:35.757" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:35.757" starttime="20180713 16:43:30.756"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:35.757" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:35.757" starttime="20180713 16:43:35.757"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:35.757" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:35.757" starttime="20180713 16:43:35.757"></status>
</kw>
<msg timestamp="20180713 16:43:35.757" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:35.757" starttime="20180713 16:43:35.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:35.757" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:35.757" starttime="20180713 16:43:35.757"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:35.757" starttime="20180713 16:43:35.757"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:35.757" starttime="20180713 16:43:30.740"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:35.757" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:35.757" starttime="20180713 16:43:35.757"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:35.773" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:35.773" starttime="20180713 16:43:35.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:40.777" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:40.777" starttime="20180713 16:43:35.773"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:40.777" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:43:40.777" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:43:40.777" starttime="20180713 16:43:40.777"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:40.777" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:40.777" starttime="20180713 16:43:40.777"></status>
</kw>
<msg timestamp="20180713 16:43:40.777" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:40.777" starttime="20180713 16:43:40.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:40.777" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:40.777" starttime="20180713 16:43:40.777"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:40.777" starttime="20180713 16:43:40.777"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:40.777" starttime="20180713 16:43:35.757"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:40.777" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:40.777" starttime="20180713 16:43:40.777"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:40.792" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:40.792" starttime="20180713 16:43:40.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:45.800" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:45.800" starttime="20180713 16:43:40.792"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:45.800" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:45.800" starttime="20180713 16:43:45.800"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:45.800" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:45.800" starttime="20180713 16:43:45.800"></status>
</kw>
<msg timestamp="20180713 16:43:45.800" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:45.800" starttime="20180713 16:43:45.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:45.800" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:45.800" starttime="20180713 16:43:45.800"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:45.800" starttime="20180713 16:43:45.800"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:45.800" starttime="20180713 16:43:40.777"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:45.800" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:45.800" starttime="20180713 16:43:45.800"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:45.816" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:45.816" starttime="20180713 16:43:45.800"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:50.822" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:45.816"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:50.822" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:50.822"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:50.822" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:50.822" starttime="20180713 16:43:50.822"></status>
</kw>
<msg timestamp="20180713 16:43:50.822" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:50.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:50.822" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:50.822"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:50.822"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:45.800"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:50.822" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:50.822"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:50.822" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:50.822" starttime="20180713 16:43:50.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:43:55.830" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:43:55.830" starttime="20180713 16:43:50.822"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:43:55.830" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:43:55.830" starttime="20180713 16:43:55.830"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:43:55.830" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:43:55.830" starttime="20180713 16:43:55.830"></status>
</kw>
<msg timestamp="20180713 16:43:55.830" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:43:55.830" starttime="20180713 16:43:55.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:43:55.830" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:43:55.830" starttime="20180713 16:43:55.830"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:55.830" starttime="20180713 16:43:55.830"></status>
</kw>
<status status="PASS" endtime="20180713 16:43:55.830" starttime="20180713 16:43:50.822"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:43:55.830" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:55.830" starttime="20180713 16:43:55.830"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:43:55.846" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:43:55.846" starttime="20180713 16:43:55.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:00.861" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:00.861" starttime="20180713 16:43:55.846"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:00.861" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:44:00.861" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:44:00.861" starttime="20180713 16:44:00.861"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:00.861" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:00.861" starttime="20180713 16:44:00.861"></status>
</kw>
<msg timestamp="20180713 16:44:00.861" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:00.861" starttime="20180713 16:44:00.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:00.861" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:00.861" starttime="20180713 16:44:00.861"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:00.861" starttime="20180713 16:44:00.861"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:00.861" starttime="20180713 16:43:55.830"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:00.861" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:00.861" starttime="20180713 16:44:00.861"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:00.877" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:00.877" starttime="20180713 16:44:00.877"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:05.879" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:05.879" starttime="20180713 16:44:00.877"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:05.879" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:05.879" starttime="20180713 16:44:05.879"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:05.879" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:05.879" starttime="20180713 16:44:05.879"></status>
</kw>
<msg timestamp="20180713 16:44:05.879" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:05.879" starttime="20180713 16:44:05.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:05.879" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:05.879" starttime="20180713 16:44:05.879"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:05.879" starttime="20180713 16:44:05.879"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:05.879" starttime="20180713 16:44:00.861"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:05.879" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:05.879" starttime="20180713 16:44:05.879"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:05.895" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:05.895" starttime="20180713 16:44:05.879"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:10.895" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:05.895"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:10.895" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:10.895"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:10.895" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:10.895" starttime="20180713 16:44:10.895"></status>
</kw>
<msg timestamp="20180713 16:44:10.895" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:10.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:10.895" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:10.895"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:10.895"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:05.879"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:10.895" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:10.895"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:10.895" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:10.895" starttime="20180713 16:44:10.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:15.904" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:15.904" starttime="20180713 16:44:10.895"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:15.904" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:15.904" starttime="20180713 16:44:15.904"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:15.904" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:15.904" starttime="20180713 16:44:15.904"></status>
</kw>
<msg timestamp="20180713 16:44:15.904" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:15.904" starttime="20180713 16:44:15.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:15.904" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:15.904" starttime="20180713 16:44:15.904"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:15.904" starttime="20180713 16:44:15.904"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:15.904" starttime="20180713 16:44:10.895"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:15.904" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:15.904" starttime="20180713 16:44:15.904"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:15.920" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:15.920" starttime="20180713 16:44:15.920"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:20.927" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:20.927" starttime="20180713 16:44:15.920"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:20.927" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:44:20.927" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:44:20.927" starttime="20180713 16:44:20.927"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:20.927" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:20.927" starttime="20180713 16:44:20.927"></status>
</kw>
<msg timestamp="20180713 16:44:20.927" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:20.927" starttime="20180713 16:44:20.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:20.927" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:20.927" starttime="20180713 16:44:20.927"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:20.927" starttime="20180713 16:44:20.927"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:20.927" starttime="20180713 16:44:15.904"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:20.927" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:20.927" starttime="20180713 16:44:20.927"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:20.943" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:20.943" starttime="20180713 16:44:20.927"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:25.950" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:25.950" starttime="20180713 16:44:20.943"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:25.950" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:25.950" starttime="20180713 16:44:25.950"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:25.950" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:25.950" starttime="20180713 16:44:25.950"></status>
</kw>
<msg timestamp="20180713 16:44:25.950" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:25.950" starttime="20180713 16:44:25.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:25.950" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:25.950" starttime="20180713 16:44:25.950"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:25.950" starttime="20180713 16:44:25.950"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:25.950" starttime="20180713 16:44:20.927"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:25.950" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:25.950" starttime="20180713 16:44:25.950"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:25.965" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:25.965" starttime="20180713 16:44:25.950"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:30.974" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:30.974" starttime="20180713 16:44:25.965"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:30.974" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:30.974" starttime="20180713 16:44:30.974"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:30.974" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:30.974" starttime="20180713 16:44:30.974"></status>
</kw>
<msg timestamp="20180713 16:44:30.974" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:30.974" starttime="20180713 16:44:30.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:30.974" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:30.974" starttime="20180713 16:44:30.974"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:30.974" starttime="20180713 16:44:30.974"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:30.974" starttime="20180713 16:44:25.950"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:30.974" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:30.974" starttime="20180713 16:44:30.974"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:30.989" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:30.989" starttime="20180713 16:44:30.974"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:36.000" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:36.000" starttime="20180713 16:44:30.989"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:36.000" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:36.000" starttime="20180713 16:44:36.000"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:36.000" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:36.000" starttime="20180713 16:44:36.000"></status>
</kw>
<msg timestamp="20180713 16:44:36.000" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:36.000" starttime="20180713 16:44:36.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:36.000" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:36.000" starttime="20180713 16:44:36.000"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:36.000" starttime="20180713 16:44:36.000"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:36.000" starttime="20180713 16:44:30.974"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:36.000" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:36.000" starttime="20180713 16:44:36.000"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:36.016" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:36.016" starttime="20180713 16:44:36.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:41.030" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:41.030" starttime="20180713 16:44:36.016"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:41.030" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:44:41.030" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:44:41.030" starttime="20180713 16:44:41.030"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:41.030" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:41.030" starttime="20180713 16:44:41.030"></status>
</kw>
<msg timestamp="20180713 16:44:41.030" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:41.030" starttime="20180713 16:44:41.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:41.030" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:41.030" starttime="20180713 16:44:41.030"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:41.030" starttime="20180713 16:44:41.030"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:41.030" starttime="20180713 16:44:36.000"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:41.030" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:41.030" starttime="20180713 16:44:41.030"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:41.045" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:41.045" starttime="20180713 16:44:41.045"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:46.049" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:46.049" starttime="20180713 16:44:41.045"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:46.049" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:46.049" starttime="20180713 16:44:46.049"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:46.049" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:46.049" starttime="20180713 16:44:46.049"></status>
</kw>
<msg timestamp="20180713 16:44:46.049" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:46.049" starttime="20180713 16:44:46.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:46.049" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:46.049" starttime="20180713 16:44:46.049"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:46.049" starttime="20180713 16:44:46.049"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:46.049" starttime="20180713 16:44:41.030"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:46.049" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:46.049" starttime="20180713 16:44:46.049"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:46.064" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:46.064" starttime="20180713 16:44:46.049"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:51.066" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:46.064"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:51.066" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:51.066"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:51.066" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:51.066" starttime="20180713 16:44:51.066"></status>
</kw>
<msg timestamp="20180713 16:44:51.066" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:51.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:51.066" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:51.066"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:51.066"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:46.049"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:51.066" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:51.066"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:51.066" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:51.066" starttime="20180713 16:44:51.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:44:56.073" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:44:56.073" starttime="20180713 16:44:51.066"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:44:56.073" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:44:56.073" starttime="20180713 16:44:56.073"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:44:56.073" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:44:56.073" starttime="20180713 16:44:56.073"></status>
</kw>
<msg timestamp="20180713 16:44:56.073" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:44:56.073" starttime="20180713 16:44:56.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:44:56.073" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:44:56.073" starttime="20180713 16:44:56.073"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:56.073" starttime="20180713 16:44:56.073"></status>
</kw>
<status status="PASS" endtime="20180713 16:44:56.073" starttime="20180713 16:44:51.066"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:44:56.073" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:56.073" starttime="20180713 16:44:56.073"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:44:56.089" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:44:56.089" starttime="20180713 16:44:56.073"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:01.101" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:01.101" starttime="20180713 16:44:56.089"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:01.101" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:45:01.101" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:45:01.101" starttime="20180713 16:45:01.101"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:01.101" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:01.101" starttime="20180713 16:45:01.101"></status>
</kw>
<msg timestamp="20180713 16:45:01.101" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:01.101" starttime="20180713 16:45:01.101"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:01.101" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:01.101" starttime="20180713 16:45:01.101"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:01.101" starttime="20180713 16:45:01.101"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:01.101" starttime="20180713 16:44:56.073"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:01.101" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:01.101" starttime="20180713 16:45:01.101"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:01.116" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:01.116" starttime="20180713 16:45:01.116"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:06.127" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:06.127" starttime="20180713 16:45:01.116"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:06.129" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:06.129" starttime="20180713 16:45:06.128"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:06.129" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:06.129" starttime="20180713 16:45:06.129"></status>
</kw>
<msg timestamp="20180713 16:45:06.129" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:06.129" starttime="20180713 16:45:06.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:06.129" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:06.129" starttime="20180713 16:45:06.129"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:06.129" starttime="20180713 16:45:06.129"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:06.129" starttime="20180713 16:45:01.101"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:06.129" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:06.129" starttime="20180713 16:45:06.129"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:06.144" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:06.144" starttime="20180713 16:45:06.129"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:11.158" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:11.158" starttime="20180713 16:45:06.144"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:11.158" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:11.158" starttime="20180713 16:45:11.158"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:11.158" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:11.158" starttime="20180713 16:45:11.158"></status>
</kw>
<msg timestamp="20180713 16:45:11.158" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:11.158" starttime="20180713 16:45:11.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:11.158" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:11.158" starttime="20180713 16:45:11.158"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:11.158" starttime="20180713 16:45:11.158"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:11.158" starttime="20180713 16:45:06.129"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:11.174" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:11.174" starttime="20180713 16:45:11.158"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:11.174" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:11.174" starttime="20180713 16:45:11.174"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:16.180" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:16.180" starttime="20180713 16:45:11.174"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:16.180" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:16.180" starttime="20180713 16:45:16.180"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:16.180" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:16.180" starttime="20180713 16:45:16.180"></status>
</kw>
<msg timestamp="20180713 16:45:16.180" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:16.180" starttime="20180713 16:45:16.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:16.180" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:16.180" starttime="20180713 16:45:16.180"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:16.180" starttime="20180713 16:45:16.180"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:16.180" starttime="20180713 16:45:11.158"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:16.180" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:16.180" starttime="20180713 16:45:16.180"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:16.195" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:16.195" starttime="20180713 16:45:16.180"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:21.210" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:21.210" starttime="20180713 16:45:16.195"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:21.210" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:45:21.210" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:45:21.210" starttime="20180713 16:45:21.210"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:21.210" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:21.210" starttime="20180713 16:45:21.210"></status>
</kw>
<msg timestamp="20180713 16:45:21.210" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:21.210" starttime="20180713 16:45:21.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:21.210" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:21.210" starttime="20180713 16:45:21.210"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:21.210" starttime="20180713 16:45:21.210"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:21.210" starttime="20180713 16:45:16.180"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:21.210" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:21.210" starttime="20180713 16:45:21.210"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:21.225" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:21.225" starttime="20180713 16:45:21.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:26.234" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:26.234" starttime="20180713 16:45:21.225"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:26.234" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:26.234" starttime="20180713 16:45:26.234"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:26.234" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:26.234" starttime="20180713 16:45:26.234"></status>
</kw>
<msg timestamp="20180713 16:45:26.234" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:26.234" starttime="20180713 16:45:26.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:26.234" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:26.234" starttime="20180713 16:45:26.234"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:26.234" starttime="20180713 16:45:26.234"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:26.234" starttime="20180713 16:45:21.210"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:26.234" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:26.234" starttime="20180713 16:45:26.234"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:26.249" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:26.249" starttime="20180713 16:45:26.234"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:31.254" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:31.254" starttime="20180713 16:45:26.249"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:31.254" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:31.254" starttime="20180713 16:45:31.254"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:31.254" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:31.254" starttime="20180713 16:45:31.254"></status>
</kw>
<msg timestamp="20180713 16:45:31.254" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:31.254" starttime="20180713 16:45:31.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:31.254" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:31.254" starttime="20180713 16:45:31.254"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:31.254" starttime="20180713 16:45:31.254"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:31.254" starttime="20180713 16:45:26.234"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:31.254" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:31.254" starttime="20180713 16:45:31.254"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:31.270" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:31.270" starttime="20180713 16:45:31.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:36.273" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:36.273" starttime="20180713 16:45:31.270"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:36.273" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:36.273" starttime="20180713 16:45:36.273"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:36.273" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:36.273" starttime="20180713 16:45:36.273"></status>
</kw>
<msg timestamp="20180713 16:45:36.273" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:36.273" starttime="20180713 16:45:36.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:36.273" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:36.273" starttime="20180713 16:45:36.273"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:36.273" starttime="20180713 16:45:36.273"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:36.273" starttime="20180713 16:45:31.254"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:36.273" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:36.273" starttime="20180713 16:45:36.273"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:36.288" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:36.288" starttime="20180713 16:45:36.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:41.297" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:41.297" starttime="20180713 16:45:36.288"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:41.297" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:45:41.297" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:45:41.297" starttime="20180713 16:45:41.297"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:41.297" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:41.297" starttime="20180713 16:45:41.297"></status>
</kw>
<msg timestamp="20180713 16:45:41.297" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:41.297" starttime="20180713 16:45:41.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:41.297" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:41.297" starttime="20180713 16:45:41.297"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:41.297" starttime="20180713 16:45:41.297"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:41.297" starttime="20180713 16:45:36.273"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:41.297" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:41.297" starttime="20180713 16:45:41.297"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:41.313" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:41.313" starttime="20180713 16:45:41.297"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:46.327" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:41.313"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:46.327" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:46.327"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:46.327" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:46.327" starttime="20180713 16:45:46.327"></status>
</kw>
<msg timestamp="20180713 16:45:46.327" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:46.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:46.327" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:46.327"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:46.327"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:41.297"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:46.327" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:46.327"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:46.327" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:46.327" starttime="20180713 16:45:46.327"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:51.333" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:51.334" starttime="20180713 16:45:46.327"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:51.334" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:51.334" starttime="20180713 16:45:51.334"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:51.334" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:51.334" starttime="20180713 16:45:51.334"></status>
</kw>
<msg timestamp="20180713 16:45:51.334" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:51.334" starttime="20180713 16:45:51.334"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:51.334" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:51.334" starttime="20180713 16:45:51.334"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:51.334" starttime="20180713 16:45:51.334"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:51.334" starttime="20180713 16:45:46.327"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:51.334" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:51.334" starttime="20180713 16:45:51.334"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:51.353" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:51.353" starttime="20180713 16:45:51.334"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:45:56.359" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:51.354"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:45:56.359" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:56.359"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:45:56.359" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:45:56.359" starttime="20180713 16:45:56.359"></status>
</kw>
<msg timestamp="20180713 16:45:56.359" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:56.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:45:56.359" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:56.359"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:56.359"></status>
</kw>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:51.334"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:45:56.359" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:56.359"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:45:56.359" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:45:56.359" starttime="20180713 16:45:56.359"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:01.360" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:01.360" starttime="20180713 16:45:56.359"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:01.360" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:46:01.360" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:46:01.360" starttime="20180713 16:46:01.360"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:01.360" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:01.360" starttime="20180713 16:46:01.360"></status>
</kw>
<msg timestamp="20180713 16:46:01.360" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:01.360" starttime="20180713 16:46:01.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:01.360" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:01.360" starttime="20180713 16:46:01.360"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:01.360" starttime="20180713 16:46:01.360"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:01.360" starttime="20180713 16:45:56.359"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:01.360" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:01.360" starttime="20180713 16:46:01.360"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:01.376" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:01.376" starttime="20180713 16:46:01.360"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:06.380" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:06.380" starttime="20180713 16:46:01.376"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:06.380" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:06.380" starttime="20180713 16:46:06.380"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:06.380" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:06.380" starttime="20180713 16:46:06.380"></status>
</kw>
<msg timestamp="20180713 16:46:06.380" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:06.380" starttime="20180713 16:46:06.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:06.380" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:06.380" starttime="20180713 16:46:06.380"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:06.380" starttime="20180713 16:46:06.380"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:06.380" starttime="20180713 16:46:01.360"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:06.380" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:06.380" starttime="20180713 16:46:06.380"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:06.402" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:06.402" starttime="20180713 16:46:06.380"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:11.409" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:06.403"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:11.409" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:11.409"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:11.409" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:11.409" starttime="20180713 16:46:11.409"></status>
</kw>
<msg timestamp="20180713 16:46:11.409" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:11.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:11.409" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:11.409"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:11.409"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:06.380"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:11.409" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:11.409"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:11.409" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:11.409" starttime="20180713 16:46:11.409"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:16.424" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:11.409"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:16.424" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:16.424"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:16.424" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:16.424" starttime="20180713 16:46:16.424"></status>
</kw>
<msg timestamp="20180713 16:46:16.424" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:16.424"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:16.424" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:16.424"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:16.424"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:11.409"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:16.424" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:16.424"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:16.424" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:16.424" starttime="20180713 16:46:16.424"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:21.431" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:21.431" starttime="20180713 16:46:16.424"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:21.431" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:46:21.431" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:46:21.431" starttime="20180713 16:46:21.431"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:21.431" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:21.431" starttime="20180713 16:46:21.431"></status>
</kw>
<msg timestamp="20180713 16:46:21.431" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:21.431" starttime="20180713 16:46:21.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:21.431" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:21.431" starttime="20180713 16:46:21.431"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:21.431" starttime="20180713 16:46:21.431"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:21.431" starttime="20180713 16:46:16.424"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:21.431" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:21.431" starttime="20180713 16:46:21.431"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:21.449" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:21.449" starttime="20180713 16:46:21.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:26.459" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:21.449"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:26.459" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:26.459"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:26.459" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:26.459" starttime="20180713 16:46:26.459"></status>
</kw>
<msg timestamp="20180713 16:46:26.459" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:26.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:26.459" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:26.459"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:26.459"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:21.431"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:26.459" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:26.459"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:26.459" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:26.459" starttime="20180713 16:46:26.459"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:31.463" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:31.463" starttime="20180713 16:46:26.459"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:31.463" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:31.463" starttime="20180713 16:46:31.463"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:31.463" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:31.463" starttime="20180713 16:46:31.463"></status>
</kw>
<msg timestamp="20180713 16:46:31.463" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:31.463" starttime="20180713 16:46:31.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:31.463" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:31.463" starttime="20180713 16:46:31.463"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:31.463" starttime="20180713 16:46:31.463"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:31.463" starttime="20180713 16:46:26.459"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:31.463" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:31.463" starttime="20180713 16:46:31.463"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:31.479" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:31.479" starttime="20180713 16:46:31.463"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:36.483" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:31.479"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:36.483" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:36.483"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:36.483" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:36.483" starttime="20180713 16:46:36.483"></status>
</kw>
<msg timestamp="20180713 16:46:36.483" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:36.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:36.483" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:36.483"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:36.483"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:31.463"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:36.483" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:36.483"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:36.483" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:36.483" starttime="20180713 16:46:36.483"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:41.486" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:41.486" starttime="20180713 16:46:36.483"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:41.486" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:46:41.486" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:46:41.486" starttime="20180713 16:46:41.486"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:41.486" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:41.486" starttime="20180713 16:46:41.486"></status>
</kw>
<msg timestamp="20180713 16:46:41.486" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:41.486" starttime="20180713 16:46:41.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:41.486" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:41.486" starttime="20180713 16:46:41.486"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:41.486" starttime="20180713 16:46:41.486"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:41.486" starttime="20180713 16:46:36.483"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:41.486" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:41.486" starttime="20180713 16:46:41.486"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:41.502" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:41.502" starttime="20180713 16:46:41.486"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:46.502" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:46.502" starttime="20180713 16:46:41.502"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:46.502" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:46.502" starttime="20180713 16:46:46.502"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:46.502" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:46.502" starttime="20180713 16:46:46.502"></status>
</kw>
<msg timestamp="20180713 16:46:46.502" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:46.502" starttime="20180713 16:46:46.502"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:46.502" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:46.502" starttime="20180713 16:46:46.502"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:46.502" starttime="20180713 16:46:46.502"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:46.502" starttime="20180713 16:46:41.486"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:46.502" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:46.502" starttime="20180713 16:46:46.502"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:46.518" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:46.518" starttime="20180713 16:46:46.502"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:51.523" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:51.523" starttime="20180713 16:46:46.518"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:51.523" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:51.523" starttime="20180713 16:46:51.523"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:51.523" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:51.523" starttime="20180713 16:46:51.523"></status>
</kw>
<msg timestamp="20180713 16:46:51.523" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:51.523" starttime="20180713 16:46:51.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:51.523" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:51.523" starttime="20180713 16:46:51.523"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:51.523" starttime="20180713 16:46:51.523"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:51.523" starttime="20180713 16:46:46.502"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:51.523" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:51.523" starttime="20180713 16:46:51.523"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:51.538" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:51.538" starttime="20180713 16:46:51.523"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:46:56.551" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:46:56.551" starttime="20180713 16:46:51.538"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:46:56.551" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:46:56.551" starttime="20180713 16:46:56.551"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:46:56.551" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:46:56.551" starttime="20180713 16:46:56.551"></status>
</kw>
<msg timestamp="20180713 16:46:56.551" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:46:56.551" starttime="20180713 16:46:56.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:46:56.551" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:46:56.551" starttime="20180713 16:46:56.551"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:56.551" starttime="20180713 16:46:56.551"></status>
</kw>
<status status="PASS" endtime="20180713 16:46:56.551" starttime="20180713 16:46:51.523"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:46:56.551" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:56.551" starttime="20180713 16:46:56.551"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:46:56.567" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:46:56.567" starttime="20180713 16:46:56.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:01.580" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:46:56.567"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:01.580" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:47:01.580" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:47:01.580"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:01.580" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:01.580" starttime="20180713 16:47:01.580"></status>
</kw>
<msg timestamp="20180713 16:47:01.580" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:47:01.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:01.580" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:47:01.580"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:47:01.580"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:46:56.551"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:01.580" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:47:01.580"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:01.580" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:01.580" starttime="20180713 16:47:01.580"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:06.588" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:06.588" starttime="20180713 16:47:01.580"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:06.588" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:06.588" starttime="20180713 16:47:06.588"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:06.588" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:06.588" starttime="20180713 16:47:06.588"></status>
</kw>
<msg timestamp="20180713 16:47:06.588" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:06.588" starttime="20180713 16:47:06.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:06.588" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:06.588" starttime="20180713 16:47:06.588"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:06.588" starttime="20180713 16:47:06.588"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:06.588" starttime="20180713 16:47:01.580"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:06.588" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:06.588" starttime="20180713 16:47:06.588"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:06.604" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:06.604" starttime="20180713 16:47:06.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:11.607" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:11.607" starttime="20180713 16:47:06.604"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:11.607" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:11.607" starttime="20180713 16:47:11.607"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:11.607" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:11.607" starttime="20180713 16:47:11.607"></status>
</kw>
<msg timestamp="20180713 16:47:11.607" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:11.607" starttime="20180713 16:47:11.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:11.607" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:11.607" starttime="20180713 16:47:11.607"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:11.607" starttime="20180713 16:47:11.607"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:11.607" starttime="20180713 16:47:06.588"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:11.607" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:11.607" starttime="20180713 16:47:11.607"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:11.622" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:11.622" starttime="20180713 16:47:11.607"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:16.626" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:16.626" starttime="20180713 16:47:11.622"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:16.628" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:16.628" starttime="20180713 16:47:16.627"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:16.628" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:16.628" starttime="20180713 16:47:16.628"></status>
</kw>
<msg timestamp="20180713 16:47:16.628" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:16.628" starttime="20180713 16:47:16.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:16.628" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:16.628" starttime="20180713 16:47:16.628"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:16.628" starttime="20180713 16:47:16.628"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:16.628" starttime="20180713 16:47:11.607"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:16.628" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:16.628" starttime="20180713 16:47:16.628"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:16.643" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:16.643" starttime="20180713 16:47:16.628"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:21.655" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:21.655" starttime="20180713 16:47:16.643"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:21.655" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:47:21.655" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:47:21.655" starttime="20180713 16:47:21.655"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:21.655" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:21.655" starttime="20180713 16:47:21.655"></status>
</kw>
<msg timestamp="20180713 16:47:21.655" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:21.655" starttime="20180713 16:47:21.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:21.655" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:21.655" starttime="20180713 16:47:21.655"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:21.655" starttime="20180713 16:47:21.655"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:21.655" starttime="20180713 16:47:16.628"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:21.655" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:21.655" starttime="20180713 16:47:21.655"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:21.670" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:21.670" starttime="20180713 16:47:21.670"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:26.679" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:26.679" starttime="20180713 16:47:21.670"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:26.679" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:26.679" starttime="20180713 16:47:26.679"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:26.679" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:26.679" starttime="20180713 16:47:26.679"></status>
</kw>
<msg timestamp="20180713 16:47:26.679" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:26.679" starttime="20180713 16:47:26.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:26.679" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:26.679" starttime="20180713 16:47:26.679"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:26.679" starttime="20180713 16:47:26.679"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:26.679" starttime="20180713 16:47:21.655"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:26.679" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:26.679" starttime="20180713 16:47:26.679"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:26.694" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:26.694" starttime="20180713 16:47:26.679"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:31.705" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:31.705" starttime="20180713 16:47:26.694"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:31.705" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:31.705" starttime="20180713 16:47:31.705"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:31.705" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:31.705" starttime="20180713 16:47:31.705"></status>
</kw>
<msg timestamp="20180713 16:47:31.705" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:31.705" starttime="20180713 16:47:31.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:31.705" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:31.705" starttime="20180713 16:47:31.705"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:31.705" starttime="20180713 16:47:31.705"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:31.705" starttime="20180713 16:47:26.679"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:31.705" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:31.705" starttime="20180713 16:47:31.705"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:31.720" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:31.720" starttime="20180713 16:47:31.705"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:36.721" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:36.721" starttime="20180713 16:47:31.720"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:36.721" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:36.721" starttime="20180713 16:47:36.721"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:36.721" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:36.721" starttime="20180713 16:47:36.721"></status>
</kw>
<msg timestamp="20180713 16:47:36.721" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:36.721" starttime="20180713 16:47:36.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:36.721" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:36.721" starttime="20180713 16:47:36.721"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:36.721" starttime="20180713 16:47:36.721"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:36.721" starttime="20180713 16:47:31.705"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:36.721" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:36.721" starttime="20180713 16:47:36.721"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:36.736" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:36.736" starttime="20180713 16:47:36.721"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:41.746" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:41.746" starttime="20180713 16:47:36.736"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:41.746" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:47:41.746" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:47:41.746" starttime="20180713 16:47:41.746"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:41.746" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:41.746" starttime="20180713 16:47:41.746"></status>
</kw>
<msg timestamp="20180713 16:47:41.746" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:41.746" starttime="20180713 16:47:41.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:41.746" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:41.746" starttime="20180713 16:47:41.746"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:41.746" starttime="20180713 16:47:41.746"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:41.746" starttime="20180713 16:47:36.721"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:41.746" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:41.762" starttime="20180713 16:47:41.746"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:41.762" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:41.762" starttime="20180713 16:47:41.762"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:46.774" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:46.774" starttime="20180713 16:47:41.762"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:46.774" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:46.774" starttime="20180713 16:47:46.774"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:46.774" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:46.774" starttime="20180713 16:47:46.774"></status>
</kw>
<msg timestamp="20180713 16:47:46.774" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:46.774" starttime="20180713 16:47:46.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:46.774" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:46.774" starttime="20180713 16:47:46.774"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:46.774" starttime="20180713 16:47:46.774"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:46.774" starttime="20180713 16:47:41.746"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:46.774" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:46.774" starttime="20180713 16:47:46.774"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:46.789" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:46.789" starttime="20180713 16:47:46.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:51.801" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:51.801" starttime="20180713 16:47:46.789"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:51.801" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:51.801" starttime="20180713 16:47:51.801"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:51.801" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:51.801" starttime="20180713 16:47:51.801"></status>
</kw>
<msg timestamp="20180713 16:47:51.801" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:51.801" starttime="20180713 16:47:51.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:51.801" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:51.801" starttime="20180713 16:47:51.801"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:51.801" starttime="20180713 16:47:51.801"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:51.801" starttime="20180713 16:47:46.774"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:51.801" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:51.801" starttime="20180713 16:47:51.801"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:51.816" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:51.816" starttime="20180713 16:47:51.801"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:47:56.818" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:47:56.818" starttime="20180713 16:47:51.816"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:47:56.818" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:47:56.818" starttime="20180713 16:47:56.818"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:47:56.818" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:47:56.818" starttime="20180713 16:47:56.818"></status>
</kw>
<msg timestamp="20180713 16:47:56.818" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:47:56.818" starttime="20180713 16:47:56.818"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:47:56.818" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:47:56.818" starttime="20180713 16:47:56.818"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:56.818" starttime="20180713 16:47:56.818"></status>
</kw>
<status status="PASS" endtime="20180713 16:47:56.818" starttime="20180713 16:47:51.801"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:47:56.818" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:56.818" starttime="20180713 16:47:56.818"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:47:56.833" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:47:56.833" starttime="20180713 16:47:56.833"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:01.842" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:01.842" starttime="20180713 16:47:56.833"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:01.842" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:48:01.842" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:48:01.842" starttime="20180713 16:48:01.842"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:01.842" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:01.842" starttime="20180713 16:48:01.842"></status>
</kw>
<msg timestamp="20180713 16:48:01.842" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:01.842" starttime="20180713 16:48:01.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:01.842" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:01.842" starttime="20180713 16:48:01.842"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:01.842" starttime="20180713 16:48:01.842"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:01.842" starttime="20180713 16:47:56.818"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:01.842" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:01.842" starttime="20180713 16:48:01.842"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:01.858" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:01.858" starttime="20180713 16:48:01.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:06.862" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:06.862" starttime="20180713 16:48:01.858"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:06.862" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:06.862" starttime="20180713 16:48:06.862"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:06.862" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:06.862" starttime="20180713 16:48:06.862"></status>
</kw>
<msg timestamp="20180713 16:48:06.862" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:06.862" starttime="20180713 16:48:06.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:06.862" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:06.862" starttime="20180713 16:48:06.862"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:06.862" starttime="20180713 16:48:06.862"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:06.862" starttime="20180713 16:48:01.842"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:06.862" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:06.862" starttime="20180713 16:48:06.862"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:06.877" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:06.877" starttime="20180713 16:48:06.877"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:11.882" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:11.882" starttime="20180713 16:48:06.877"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:11.882" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:11.882" starttime="20180713 16:48:11.882"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:11.882" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:11.882" starttime="20180713 16:48:11.882"></status>
</kw>
<msg timestamp="20180713 16:48:11.882" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:11.882" starttime="20180713 16:48:11.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:11.882" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:11.882" starttime="20180713 16:48:11.882"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:11.882" starttime="20180713 16:48:11.882"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:11.882" starttime="20180713 16:48:06.862"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:11.882" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:11.882" starttime="20180713 16:48:11.882"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:11.897" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:11.897" starttime="20180713 16:48:11.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:16.911" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:16.911" starttime="20180713 16:48:11.897"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:16.911" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:16.911" starttime="20180713 16:48:16.911"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:16.911" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:16.911" starttime="20180713 16:48:16.911"></status>
</kw>
<msg timestamp="20180713 16:48:16.911" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:16.911" starttime="20180713 16:48:16.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:16.911" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:16.911" starttime="20180713 16:48:16.911"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:16.911" starttime="20180713 16:48:16.911"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:16.911" starttime="20180713 16:48:11.882"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:16.911" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:16.911" starttime="20180713 16:48:16.911"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:16.926" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:16.926" starttime="20180713 16:48:16.911"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:21.940" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:21.940" starttime="20180713 16:48:16.926"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:21.940" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:48:21.940" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:48:21.940" starttime="20180713 16:48:21.940"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:21.940" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:21.940" starttime="20180713 16:48:21.940"></status>
</kw>
<msg timestamp="20180713 16:48:21.940" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:21.940" starttime="20180713 16:48:21.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:21.940" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:21.940" starttime="20180713 16:48:21.940"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:21.940" starttime="20180713 16:48:21.940"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:21.940" starttime="20180713 16:48:16.911"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:21.940" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:21.940" starttime="20180713 16:48:21.940"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:21.956" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:21.956" starttime="20180713 16:48:21.940"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:26.957" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:26.957" starttime="20180713 16:48:21.956"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:26.957" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:26.957" starttime="20180713 16:48:26.957"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:26.957" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:26.957" starttime="20180713 16:48:26.957"></status>
</kw>
<msg timestamp="20180713 16:48:26.957" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:26.957" starttime="20180713 16:48:26.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:26.957" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:26.957" starttime="20180713 16:48:26.957"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:26.957" starttime="20180713 16:48:26.957"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:26.957" starttime="20180713 16:48:21.940"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:26.973" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:26.973" starttime="20180713 16:48:26.957"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:26.973" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:26.973" starttime="20180713 16:48:26.973"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:31.974" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:31.974" starttime="20180713 16:48:26.973"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:31.974" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:31.974" starttime="20180713 16:48:31.974"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:31.974" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:31.974" starttime="20180713 16:48:31.974"></status>
</kw>
<msg timestamp="20180713 16:48:31.974" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:31.974" starttime="20180713 16:48:31.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:31.974" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:31.974" starttime="20180713 16:48:31.974"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:31.974" starttime="20180713 16:48:31.974"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:31.974" starttime="20180713 16:48:26.957"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:31.974" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:31.974" starttime="20180713 16:48:31.974"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:31.990" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:31.990" starttime="20180713 16:48:31.974"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:37.001" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:37.001" starttime="20180713 16:48:31.990"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:37.001" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:37.001" starttime="20180713 16:48:37.001"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:37.001" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:37.001" starttime="20180713 16:48:37.001"></status>
</kw>
<msg timestamp="20180713 16:48:37.001" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:37.001" starttime="20180713 16:48:37.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:37.001" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:37.001" starttime="20180713 16:48:37.001"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:37.001" starttime="20180713 16:48:37.001"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:37.001" starttime="20180713 16:48:31.974"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:37.001" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:37.001" starttime="20180713 16:48:37.001"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:37.016" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:37.016" starttime="20180713 16:48:37.001"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:42.024" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:42.024" starttime="20180713 16:48:37.016"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:42.024" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:48:42.024" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:48:42.024" starttime="20180713 16:48:42.024"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:42.024" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:42.024" starttime="20180713 16:48:42.024"></status>
</kw>
<msg timestamp="20180713 16:48:42.024" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:42.024" starttime="20180713 16:48:42.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:42.024" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:42.024" starttime="20180713 16:48:42.024"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:42.024" starttime="20180713 16:48:42.024"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:42.024" starttime="20180713 16:48:37.001"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:42.024" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:42.024" starttime="20180713 16:48:42.024"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:42.039" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:42.039" starttime="20180713 16:48:42.024"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:47.042" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:47.042" starttime="20180713 16:48:42.039"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:47.042" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:47.042" starttime="20180713 16:48:47.042"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:47.042" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:47.042" starttime="20180713 16:48:47.042"></status>
</kw>
<msg timestamp="20180713 16:48:47.042" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:47.042" starttime="20180713 16:48:47.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:47.042" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:47.042" starttime="20180713 16:48:47.042"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:47.042" starttime="20180713 16:48:47.042"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:47.042" starttime="20180713 16:48:42.024"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:47.042" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:47.042" starttime="20180713 16:48:47.042"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:47.058" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:47.058" starttime="20180713 16:48:47.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:52.071" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:52.071" starttime="20180713 16:48:47.058"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:52.071" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:52.071" starttime="20180713 16:48:52.071"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:52.071" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:52.071" starttime="20180713 16:48:52.071"></status>
</kw>
<msg timestamp="20180713 16:48:52.071" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:52.071" starttime="20180713 16:48:52.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:52.071" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:52.071" starttime="20180713 16:48:52.071"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:52.071" starttime="20180713 16:48:52.071"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:52.071" starttime="20180713 16:48:47.042"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:52.071" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:52.071" starttime="20180713 16:48:52.071"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:52.087" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:52.087" starttime="20180713 16:48:52.071"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:48:57.089" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:48:57.089" starttime="20180713 16:48:52.087"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:48:57.089" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:48:57.089" starttime="20180713 16:48:57.089"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:48:57.089" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:48:57.089" starttime="20180713 16:48:57.089"></status>
</kw>
<msg timestamp="20180713 16:48:57.089" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:48:57.089" starttime="20180713 16:48:57.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:48:57.089" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:48:57.089" starttime="20180713 16:48:57.089"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:57.089" starttime="20180713 16:48:57.089"></status>
</kw>
<status status="PASS" endtime="20180713 16:48:57.089" starttime="20180713 16:48:52.071"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:48:57.089" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:57.089" starttime="20180713 16:48:57.089"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:48:57.104" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:48:57.104" starttime="20180713 16:48:57.089"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:02.112" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:02.112" starttime="20180713 16:48:57.104"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:02.112" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:49:02.112" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:49:02.112" starttime="20180713 16:49:02.112"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:02.112" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:02.112" starttime="20180713 16:49:02.112"></status>
</kw>
<msg timestamp="20180713 16:49:02.112" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:02.112" starttime="20180713 16:49:02.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:02.112" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:02.112" starttime="20180713 16:49:02.112"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:02.112" starttime="20180713 16:49:02.112"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:02.112" starttime="20180713 16:48:57.089"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:02.112" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:02.112" starttime="20180713 16:49:02.112"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:02.128" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:02.128" starttime="20180713 16:49:02.112"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:07.132" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:07.132" starttime="20180713 16:49:02.128"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:07.132" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:07.132" starttime="20180713 16:49:07.132"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:07.132" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:07.132" starttime="20180713 16:49:07.132"></status>
</kw>
<msg timestamp="20180713 16:49:07.132" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:07.132" starttime="20180713 16:49:07.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:07.132" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:07.132" starttime="20180713 16:49:07.132"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:07.132" starttime="20180713 16:49:07.132"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:07.132" starttime="20180713 16:49:02.112"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:07.132" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:07.132" starttime="20180713 16:49:07.132"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:07.148" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:07.148" starttime="20180713 16:49:07.132"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:12.160" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:12.160" starttime="20180713 16:49:07.148"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:12.160" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:12.160" starttime="20180713 16:49:12.160"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:12.160" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:12.160" starttime="20180713 16:49:12.160"></status>
</kw>
<msg timestamp="20180713 16:49:12.160" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:12.160" starttime="20180713 16:49:12.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:12.160" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:12.160" starttime="20180713 16:49:12.160"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:12.160" starttime="20180713 16:49:12.160"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:12.160" starttime="20180713 16:49:07.132"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:12.160" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:12.160" starttime="20180713 16:49:12.160"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:12.176" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:12.176" starttime="20180713 16:49:12.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:17.179" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:17.179" starttime="20180713 16:49:12.176"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:17.179" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:17.179" starttime="20180713 16:49:17.179"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:17.179" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:17.179" starttime="20180713 16:49:17.179"></status>
</kw>
<msg timestamp="20180713 16:49:17.179" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:17.179" starttime="20180713 16:49:17.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:17.179" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:17.179" starttime="20180713 16:49:17.179"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:17.179" starttime="20180713 16:49:17.179"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:17.179" starttime="20180713 16:49:12.160"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:17.179" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:17.179" starttime="20180713 16:49:17.179"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:17.195" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:17.195" starttime="20180713 16:49:17.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:22.198" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:22.198" starttime="20180713 16:49:17.195"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:22.198" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:49:22.198" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:49:22.198" starttime="20180713 16:49:22.198"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:22.198" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:22.198" starttime="20180713 16:49:22.198"></status>
</kw>
<msg timestamp="20180713 16:49:22.198" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:22.198" starttime="20180713 16:49:22.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:22.198" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:22.198" starttime="20180713 16:49:22.198"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:22.198" starttime="20180713 16:49:22.198"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:22.198" starttime="20180713 16:49:17.179"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:22.198" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:22.198" starttime="20180713 16:49:22.198"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:22.214" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:22.214" starttime="20180713 16:49:22.214"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:27.222" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:27.222" starttime="20180713 16:49:22.214"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:27.222" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:27.222" starttime="20180713 16:49:27.222"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:27.222" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:27.222" starttime="20180713 16:49:27.222"></status>
</kw>
<msg timestamp="20180713 16:49:27.222" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:27.222" starttime="20180713 16:49:27.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:27.222" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:27.222" starttime="20180713 16:49:27.222"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:27.222" starttime="20180713 16:49:27.222"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:27.222" starttime="20180713 16:49:22.198"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:27.222" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:27.222" starttime="20180713 16:49:27.222"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:27.237" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:27.237" starttime="20180713 16:49:27.222"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:32.252" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:32.252" starttime="20180713 16:49:27.237"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:32.252" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:32.252" starttime="20180713 16:49:32.252"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:32.252" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:32.252" starttime="20180713 16:49:32.252"></status>
</kw>
<msg timestamp="20180713 16:49:32.252" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:32.252" starttime="20180713 16:49:32.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:32.252" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:32.252" starttime="20180713 16:49:32.252"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:32.252" starttime="20180713 16:49:32.252"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:32.252" starttime="20180713 16:49:27.222"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:32.252" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:32.252" starttime="20180713 16:49:32.252"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:32.267" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:32.267" starttime="20180713 16:49:32.252"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:37.273" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:37.273" starttime="20180713 16:49:32.267"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:37.273" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:37.273" starttime="20180713 16:49:37.273"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:37.273" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:37.273" starttime="20180713 16:49:37.273"></status>
</kw>
<msg timestamp="20180713 16:49:37.273" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:37.273" starttime="20180713 16:49:37.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:37.273" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:37.273" starttime="20180713 16:49:37.273"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:37.273" starttime="20180713 16:49:37.273"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:37.273" starttime="20180713 16:49:32.252"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:37.273" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:37.273" starttime="20180713 16:49:37.273"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:37.289" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:37.289" starttime="20180713 16:49:37.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:42.301" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:42.301" starttime="20180713 16:49:37.289"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:42.301" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:49:42.301" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:49:42.301" starttime="20180713 16:49:42.301"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:42.301" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:42.301" starttime="20180713 16:49:42.301"></status>
</kw>
<msg timestamp="20180713 16:49:42.301" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:42.301" starttime="20180713 16:49:42.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:42.301" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:42.301" starttime="20180713 16:49:42.301"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:42.301" starttime="20180713 16:49:42.301"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:42.301" starttime="20180713 16:49:37.273"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:42.301" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:42.301" starttime="20180713 16:49:42.301"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:42.316" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:42.316" starttime="20180713 16:49:42.301"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:47.320" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:47.320" starttime="20180713 16:49:42.316"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:47.320" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:47.320" starttime="20180713 16:49:47.320"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:47.320" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:47.320" starttime="20180713 16:49:47.320"></status>
</kw>
<msg timestamp="20180713 16:49:47.320" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:47.320" starttime="20180713 16:49:47.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:47.320" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:47.320" starttime="20180713 16:49:47.320"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:47.320" starttime="20180713 16:49:47.320"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:47.320" starttime="20180713 16:49:42.301"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:47.320" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:47.320" starttime="20180713 16:49:47.320"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:47.336" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:47.336" starttime="20180713 16:49:47.320"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:52.338" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:52.338" starttime="20180713 16:49:47.336"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:52.338" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:52.338" starttime="20180713 16:49:52.338"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:52.338" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:52.338" starttime="20180713 16:49:52.338"></status>
</kw>
<msg timestamp="20180713 16:49:52.338" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:52.338" starttime="20180713 16:49:52.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:52.338" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:52.338" starttime="20180713 16:49:52.338"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:52.338" starttime="20180713 16:49:52.338"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:52.338" starttime="20180713 16:49:47.320"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:52.338" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:52.338" starttime="20180713 16:49:52.338"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:52.354" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:52.354" starttime="20180713 16:49:52.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:49:57.364" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:49:57.364" starttime="20180713 16:49:52.354"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:49:57.364" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:49:57.364" starttime="20180713 16:49:57.364"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:49:57.364" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:49:57.364" starttime="20180713 16:49:57.364"></status>
</kw>
<msg timestamp="20180713 16:49:57.364" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:49:57.364" starttime="20180713 16:49:57.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:49:57.364" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:49:57.364" starttime="20180713 16:49:57.364"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:57.364" starttime="20180713 16:49:57.364"></status>
</kw>
<status status="PASS" endtime="20180713 16:49:57.364" starttime="20180713 16:49:52.338"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:49:57.364" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:57.364" starttime="20180713 16:49:57.364"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:49:57.380" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:49:57.380" starttime="20180713 16:49:57.364"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:02.381" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:02.381" starttime="20180713 16:49:57.380"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:02.381" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:50:02.381" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:50:02.381" starttime="20180713 16:50:02.381"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:02.381" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:02.381" starttime="20180713 16:50:02.381"></status>
</kw>
<msg timestamp="20180713 16:50:02.381" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:02.381" starttime="20180713 16:50:02.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:02.381" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:02.381" starttime="20180713 16:50:02.381"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:02.381" starttime="20180713 16:50:02.381"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:02.381" starttime="20180713 16:49:57.364"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:02.381" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:02.381" starttime="20180713 16:50:02.381"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:02.398" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:02.398" starttime="20180713 16:50:02.397"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:07.399" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:07.400" starttime="20180713 16:50:02.398"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:07.401" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:07.401" starttime="20180713 16:50:07.400"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:07.401" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:07.401" starttime="20180713 16:50:07.401"></status>
</kw>
<msg timestamp="20180713 16:50:07.401" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:07.401" starttime="20180713 16:50:07.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:07.401" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:07.401" starttime="20180713 16:50:07.401"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:07.401" starttime="20180713 16:50:07.401"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:07.401" starttime="20180713 16:50:02.381"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:07.401" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:07.401" starttime="20180713 16:50:07.401"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:07.417" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:07.417" starttime="20180713 16:50:07.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:12.431" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:12.431" starttime="20180713 16:50:07.417"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:12.431" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:12.431" starttime="20180713 16:50:12.431"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:12.431" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:12.431" starttime="20180713 16:50:12.431"></status>
</kw>
<msg timestamp="20180713 16:50:12.431" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:12.431" starttime="20180713 16:50:12.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:12.431" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:12.431" starttime="20180713 16:50:12.431"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:12.431" starttime="20180713 16:50:12.431"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:12.431" starttime="20180713 16:50:07.401"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:12.431" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:12.431" starttime="20180713 16:50:12.431"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:12.447" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:12.447" starttime="20180713 16:50:12.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:17.448" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:17.448" starttime="20180713 16:50:12.447"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:17.448" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:17.448" starttime="20180713 16:50:17.448"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:17.448" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:17.448" starttime="20180713 16:50:17.448"></status>
</kw>
<msg timestamp="20180713 16:50:17.448" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:17.448" starttime="20180713 16:50:17.448"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:17.448" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:17.448" starttime="20180713 16:50:17.448"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:17.448" starttime="20180713 16:50:17.448"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:17.448" starttime="20180713 16:50:12.431"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:17.448" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:17.448" starttime="20180713 16:50:17.448"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:17.463" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:17.463" starttime="20180713 16:50:17.448"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:22.474" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:22.474" starttime="20180713 16:50:17.463"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:22.474" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:50:22.474" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:50:22.474" starttime="20180713 16:50:22.474"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:22.474" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:22.474" starttime="20180713 16:50:22.474"></status>
</kw>
<msg timestamp="20180713 16:50:22.474" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:22.474" starttime="20180713 16:50:22.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:22.474" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:22.474" starttime="20180713 16:50:22.474"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:22.474" starttime="20180713 16:50:22.474"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:22.474" starttime="20180713 16:50:17.448"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:22.474" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:22.474" starttime="20180713 16:50:22.474"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:22.489" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:22.489" starttime="20180713 16:50:22.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:27.494" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:22.489"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:27.494" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:27.494"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:27.494" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:27.494" starttime="20180713 16:50:27.494"></status>
</kw>
<msg timestamp="20180713 16:50:27.494" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:27.494"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:27.494" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:27.494"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:27.494"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:22.474"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:27.494" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:27.494"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:27.494" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:27.494" starttime="20180713 16:50:27.494"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:32.506" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:32.506" starttime="20180713 16:50:27.494"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:32.506" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:32.506" starttime="20180713 16:50:32.506"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:32.506" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:32.506" starttime="20180713 16:50:32.506"></status>
</kw>
<msg timestamp="20180713 16:50:32.506" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:32.506" starttime="20180713 16:50:32.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:32.506" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:32.506" starttime="20180713 16:50:32.506"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:32.506" starttime="20180713 16:50:32.506"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:32.506" starttime="20180713 16:50:27.494"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:32.506" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:32.506" starttime="20180713 16:50:32.506"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:32.521" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:32.521" starttime="20180713 16:50:32.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:37.521" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:32.521"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:37.521" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:37.521"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:37.521" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:37.521" starttime="20180713 16:50:37.521"></status>
</kw>
<msg timestamp="20180713 16:50:37.521" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:37.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:37.521" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:37.521"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:37.521"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:32.506"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:37.521" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:37.521"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:37.521" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:37.521" starttime="20180713 16:50:37.521"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:42.534" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:42.534" starttime="20180713 16:50:37.521"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:42.534" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:50:42.534" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:50:42.534" starttime="20180713 16:50:42.534"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:42.534" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:42.534" starttime="20180713 16:50:42.534"></status>
</kw>
<msg timestamp="20180713 16:50:42.534" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:42.534" starttime="20180713 16:50:42.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:42.534" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:42.534" starttime="20180713 16:50:42.534"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:42.534" starttime="20180713 16:50:42.534"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:42.534" starttime="20180713 16:50:37.521"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:42.534" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:42.534" starttime="20180713 16:50:42.534"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:42.549" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:42.549" starttime="20180713 16:50:42.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:47.552" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:47.552" starttime="20180713 16:50:42.549"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:47.552" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:47.552" starttime="20180713 16:50:47.552"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:47.552" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:47.552" starttime="20180713 16:50:47.552"></status>
</kw>
<msg timestamp="20180713 16:50:47.552" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:47.552" starttime="20180713 16:50:47.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:47.552" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:47.552" starttime="20180713 16:50:47.552"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:47.552" starttime="20180713 16:50:47.552"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:47.552" starttime="20180713 16:50:42.534"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:47.552" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:47.552" starttime="20180713 16:50:47.552"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:47.568" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:47.568" starttime="20180713 16:50:47.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:52.577" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:52.577" starttime="20180713 16:50:47.568"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:52.577" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:52.577" starttime="20180713 16:50:52.577"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:52.577" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:52.577" starttime="20180713 16:50:52.577"></status>
</kw>
<msg timestamp="20180713 16:50:52.577" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:52.577" starttime="20180713 16:50:52.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:52.577" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:52.577" starttime="20180713 16:50:52.577"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:52.577" starttime="20180713 16:50:52.577"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:52.577" starttime="20180713 16:50:47.552"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:52.577" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:52.593" starttime="20180713 16:50:52.577"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:52.593" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:52.593" starttime="20180713 16:50:52.593"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:50:57.594" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:50:57.594" starttime="20180713 16:50:52.593"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:50:57.594" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:50:57.594" starttime="20180713 16:50:57.594"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:50:57.594" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:50:57.594" starttime="20180713 16:50:57.594"></status>
</kw>
<msg timestamp="20180713 16:50:57.594" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:50:57.594" starttime="20180713 16:50:57.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:50:57.594" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:50:57.594" starttime="20180713 16:50:57.594"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:57.594" starttime="20180713 16:50:57.594"></status>
</kw>
<status status="PASS" endtime="20180713 16:50:57.594" starttime="20180713 16:50:52.577"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:50:57.594" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:57.594" starttime="20180713 16:50:57.594"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:50:57.610" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:50:57.610" starttime="20180713 16:50:57.594"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:02.622" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:02.622" starttime="20180713 16:50:57.610"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:02.622" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:51:02.622" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:51:02.622" starttime="20180713 16:51:02.622"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:02.622" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:02.622" starttime="20180713 16:51:02.622"></status>
</kw>
<msg timestamp="20180713 16:51:02.622" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:02.622" starttime="20180713 16:51:02.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:02.622" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:02.622" starttime="20180713 16:51:02.622"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:02.622" starttime="20180713 16:51:02.622"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:02.622" starttime="20180713 16:50:57.594"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:02.622" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:02.622" starttime="20180713 16:51:02.622"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:02.638" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:02.638" starttime="20180713 16:51:02.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:07.640" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:07.640" starttime="20180713 16:51:02.638"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:07.640" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:07.640" starttime="20180713 16:51:07.640"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:07.640" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:07.640" starttime="20180713 16:51:07.640"></status>
</kw>
<msg timestamp="20180713 16:51:07.640" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:07.640" starttime="20180713 16:51:07.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:07.640" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:07.640" starttime="20180713 16:51:07.640"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:07.640" starttime="20180713 16:51:07.640"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:07.640" starttime="20180713 16:51:02.622"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:07.640" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:07.640" starttime="20180713 16:51:07.640"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:07.656" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:07.656" starttime="20180713 16:51:07.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:12.656" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:12.656" starttime="20180713 16:51:07.656"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:12.656" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:12.656" starttime="20180713 16:51:12.656"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:12.656" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:12.656" starttime="20180713 16:51:12.656"></status>
</kw>
<msg timestamp="20180713 16:51:12.656" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:12.656" starttime="20180713 16:51:12.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:12.656" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:12.656" starttime="20180713 16:51:12.656"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:12.656" starttime="20180713 16:51:12.656"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:12.656" starttime="20180713 16:51:07.640"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:12.656" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:12.656" starttime="20180713 16:51:12.656"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:12.671" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:12.671" starttime="20180713 16:51:12.656"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:17.676" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:17.676" starttime="20180713 16:51:12.671"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:17.676" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:17.676" starttime="20180713 16:51:17.676"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:17.676" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:17.676" starttime="20180713 16:51:17.676"></status>
</kw>
<msg timestamp="20180713 16:51:17.676" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:17.676" starttime="20180713 16:51:17.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:17.676" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:17.676" starttime="20180713 16:51:17.676"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:17.676" starttime="20180713 16:51:17.676"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:17.676" starttime="20180713 16:51:12.656"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:17.676" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:17.676" starttime="20180713 16:51:17.676"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:17.692" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:17.692" starttime="20180713 16:51:17.692"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:22.706" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:22.706" starttime="20180713 16:51:17.692"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:22.706" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:51:22.706" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:51:22.706" starttime="20180713 16:51:22.706"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:22.706" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:22.706" starttime="20180713 16:51:22.706"></status>
</kw>
<msg timestamp="20180713 16:51:22.706" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:22.706" starttime="20180713 16:51:22.706"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:22.706" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:22.706" starttime="20180713 16:51:22.706"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:22.706" starttime="20180713 16:51:22.706"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:22.706" starttime="20180713 16:51:17.676"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:22.706" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:22.706" starttime="20180713 16:51:22.706"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:22.721" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:22.721" starttime="20180713 16:51:22.706"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:27.733" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:27.733" starttime="20180713 16:51:22.721"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:27.733" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:27.733" starttime="20180713 16:51:27.733"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:27.733" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:27.733" starttime="20180713 16:51:27.733"></status>
</kw>
<msg timestamp="20180713 16:51:27.733" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:27.733" starttime="20180713 16:51:27.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:27.733" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:27.733" starttime="20180713 16:51:27.733"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:27.733" starttime="20180713 16:51:27.733"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:27.733" starttime="20180713 16:51:22.706"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:27.733" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:27.733" starttime="20180713 16:51:27.733"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:27.749" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:27.749" starttime="20180713 16:51:27.733"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:32.757" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:32.757" starttime="20180713 16:51:27.749"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:32.757" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:32.757" starttime="20180713 16:51:32.757"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:32.757" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:32.757" starttime="20180713 16:51:32.757"></status>
</kw>
<msg timestamp="20180713 16:51:32.757" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:32.757" starttime="20180713 16:51:32.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:32.757" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:32.757" starttime="20180713 16:51:32.757"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:32.757" starttime="20180713 16:51:32.757"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:32.757" starttime="20180713 16:51:27.733"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:32.757" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:32.757" starttime="20180713 16:51:32.757"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:32.772" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:32.772" starttime="20180713 16:51:32.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:37.778" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:37.778" starttime="20180713 16:51:32.772"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:37.778" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:37.778" starttime="20180713 16:51:37.778"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:37.778" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:37.778" starttime="20180713 16:51:37.778"></status>
</kw>
<msg timestamp="20180713 16:51:37.778" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:37.778" starttime="20180713 16:51:37.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:37.778" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:37.778" starttime="20180713 16:51:37.778"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:37.778" starttime="20180713 16:51:37.778"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:37.778" starttime="20180713 16:51:32.757"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:37.778" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:37.778" starttime="20180713 16:51:37.778"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:37.794" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:37.794" starttime="20180713 16:51:37.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:42.796" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:42.796" starttime="20180713 16:51:37.794"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:42.796" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:51:42.796" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:51:42.796" starttime="20180713 16:51:42.796"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:42.796" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:42.796" starttime="20180713 16:51:42.796"></status>
</kw>
<msg timestamp="20180713 16:51:42.796" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:42.796" starttime="20180713 16:51:42.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:42.796" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:42.796" starttime="20180713 16:51:42.796"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:42.796" starttime="20180713 16:51:42.796"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:42.796" starttime="20180713 16:51:37.778"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:42.796" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:42.796" starttime="20180713 16:51:42.796"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:42.812" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:42.812" starttime="20180713 16:51:42.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:47.826" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:42.812"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:47.826" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:47.826"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:47.826" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:47.826" starttime="20180713 16:51:47.826"></status>
</kw>
<msg timestamp="20180713 16:51:47.826" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:47.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:47.826" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:47.826"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:47.826"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:42.796"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:47.826" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:47.826"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:47.826" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:47.826" starttime="20180713 16:51:47.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:52.838" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:52.838" starttime="20180713 16:51:47.826"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:52.839" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:52.839" starttime="20180713 16:51:52.838"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:52.839" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:52.839" starttime="20180713 16:51:52.839"></status>
</kw>
<msg timestamp="20180713 16:51:52.839" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:52.839" starttime="20180713 16:51:52.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:52.839" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:52.839" starttime="20180713 16:51:52.839"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:52.839" starttime="20180713 16:51:52.839"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:52.839" starttime="20180713 16:51:47.826"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:52.839" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:52.839" starttime="20180713 16:51:52.839"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:52.839" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:52.839" starttime="20180713 16:51:52.839"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:51:57.851" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:51:57.851" starttime="20180713 16:51:52.839"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:51:57.851" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:51:57.851" starttime="20180713 16:51:57.851"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:51:57.851" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:51:57.851" starttime="20180713 16:51:57.851"></status>
</kw>
<msg timestamp="20180713 16:51:57.851" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:51:57.851" starttime="20180713 16:51:57.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:51:57.851" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:51:57.851" starttime="20180713 16:51:57.851"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:57.851" starttime="20180713 16:51:57.851"></status>
</kw>
<status status="PASS" endtime="20180713 16:51:57.851" starttime="20180713 16:51:52.839"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:51:57.851" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:57.851" starttime="20180713 16:51:57.851"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:51:57.866" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:51:57.866" starttime="20180713 16:51:57.851"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:02.872" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:02.872" starttime="20180713 16:51:57.866"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:02.872" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:52:02.872" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:52:02.872" starttime="20180713 16:52:02.872"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:02.872" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:02.872" starttime="20180713 16:52:02.872"></status>
</kw>
<msg timestamp="20180713 16:52:02.872" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:02.872" starttime="20180713 16:52:02.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:02.872" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:02.872" starttime="20180713 16:52:02.872"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:02.872" starttime="20180713 16:52:02.872"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:02.872" starttime="20180713 16:51:57.851"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:02.872" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:02.872" starttime="20180713 16:52:02.872"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:02.887" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:02.887" starttime="20180713 16:52:02.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:07.901" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:07.901" starttime="20180713 16:52:02.887"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:07.901" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:07.901" starttime="20180713 16:52:07.901"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:07.901" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:07.901" starttime="20180713 16:52:07.901"></status>
</kw>
<msg timestamp="20180713 16:52:07.901" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:07.901" starttime="20180713 16:52:07.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:07.901" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:07.901" starttime="20180713 16:52:07.901"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:07.901" starttime="20180713 16:52:07.901"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:07.901" starttime="20180713 16:52:02.872"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:07.901" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:07.901" starttime="20180713 16:52:07.901"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:07.917" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:07.917" starttime="20180713 16:52:07.901"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:12.917" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:12.917" starttime="20180713 16:52:07.917"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:12.917" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:12.917" starttime="20180713 16:52:12.917"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:12.917" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:12.917" starttime="20180713 16:52:12.917"></status>
</kw>
<msg timestamp="20180713 16:52:12.917" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:12.917" starttime="20180713 16:52:12.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:12.917" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:12.917" starttime="20180713 16:52:12.917"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:12.917" starttime="20180713 16:52:12.917"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:12.917" starttime="20180713 16:52:07.901"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:12.917" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:12.917" starttime="20180713 16:52:12.917"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:12.932" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:12.932" starttime="20180713 16:52:12.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:17.945" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:17.945" starttime="20180713 16:52:12.932"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:17.945" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:17.945" starttime="20180713 16:52:17.945"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:17.945" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:17.945" starttime="20180713 16:52:17.945"></status>
</kw>
<msg timestamp="20180713 16:52:17.945" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:17.945" starttime="20180713 16:52:17.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:17.945" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:17.945" starttime="20180713 16:52:17.945"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:17.945" starttime="20180713 16:52:17.945"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:17.945" starttime="20180713 16:52:12.917"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:17.945" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:17.945" starttime="20180713 16:52:17.945"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:17.960" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:17.960" starttime="20180713 16:52:17.945"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:22.961" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:22.961" starttime="20180713 16:52:17.960"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:22.961" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:52:22.961" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:52:22.961" starttime="20180713 16:52:22.961"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:22.961" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:22.961" starttime="20180713 16:52:22.961"></status>
</kw>
<msg timestamp="20180713 16:52:22.961" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:22.961" starttime="20180713 16:52:22.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:22.961" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:22.961" starttime="20180713 16:52:22.961"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:22.961" starttime="20180713 16:52:22.961"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:22.961" starttime="20180713 16:52:17.945"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:22.961" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:22.961" starttime="20180713 16:52:22.961"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:22.976" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:22.976" starttime="20180713 16:52:22.976"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:27.988" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:27.988" starttime="20180713 16:52:22.976"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:27.988" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:27.988" starttime="20180713 16:52:27.988"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:27.988" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:27.988" starttime="20180713 16:52:27.988"></status>
</kw>
<msg timestamp="20180713 16:52:27.988" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:27.988" starttime="20180713 16:52:27.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:27.988" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:27.988" starttime="20180713 16:52:27.988"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:27.988" starttime="20180713 16:52:27.988"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:27.988" starttime="20180713 16:52:22.961"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:27.988" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:27.988" starttime="20180713 16:52:27.988"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:28.004" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:28.004" starttime="20180713 16:52:27.988"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:33.019" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:33.019" starttime="20180713 16:52:28.004"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:33.019" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:33.019" starttime="20180713 16:52:33.019"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:33.019" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:33.019" starttime="20180713 16:52:33.019"></status>
</kw>
<msg timestamp="20180713 16:52:33.019" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:33.019" starttime="20180713 16:52:33.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:33.019" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:33.019" starttime="20180713 16:52:33.019"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:33.019" starttime="20180713 16:52:33.019"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:33.019" starttime="20180713 16:52:27.988"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:33.019" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:33.019" starttime="20180713 16:52:33.019"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:33.035" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:33.035" starttime="20180713 16:52:33.019"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:38.035" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:38.035" starttime="20180713 16:52:33.035"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:38.035" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:38.035" starttime="20180713 16:52:38.035"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:38.035" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:38.035" starttime="20180713 16:52:38.035"></status>
</kw>
<msg timestamp="20180713 16:52:38.035" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:38.035" starttime="20180713 16:52:38.035"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:38.035" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:38.035" starttime="20180713 16:52:38.035"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:38.035" starttime="20180713 16:52:38.035"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:38.035" starttime="20180713 16:52:33.019"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:38.035" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:38.035" starttime="20180713 16:52:38.035"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:38.051" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:38.051" starttime="20180713 16:52:38.035"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:43.058" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:43.058" starttime="20180713 16:52:38.051"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:43.058" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:52:43.058" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:52:43.058" starttime="20180713 16:52:43.058"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:43.058" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:43.058" starttime="20180713 16:52:43.058"></status>
</kw>
<msg timestamp="20180713 16:52:43.058" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:43.058" starttime="20180713 16:52:43.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:43.058" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:43.058" starttime="20180713 16:52:43.058"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:43.058" starttime="20180713 16:52:43.058"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:43.058" starttime="20180713 16:52:38.035"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:43.058" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:43.058" starttime="20180713 16:52:43.058"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:43.073" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:43.073" starttime="20180713 16:52:43.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:48.087" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:48.087" starttime="20180713 16:52:43.073"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:48.087" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:48.087" starttime="20180713 16:52:48.087"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:48.087" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:48.087" starttime="20180713 16:52:48.087"></status>
</kw>
<msg timestamp="20180713 16:52:48.087" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:48.087" starttime="20180713 16:52:48.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:48.087" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:48.087" starttime="20180713 16:52:48.087"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:48.087" starttime="20180713 16:52:48.087"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:48.087" starttime="20180713 16:52:43.058"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:48.087" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:48.087" starttime="20180713 16:52:48.087"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:48.102" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:48.102" starttime="20180713 16:52:48.102"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:53.116" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:48.102"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:53.116" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:53.116"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:53.116" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:53.116" starttime="20180713 16:52:53.116"></status>
</kw>
<msg timestamp="20180713 16:52:53.116" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:53.116"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:53.116" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:53.116"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:53.116"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:48.087"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:53.116" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:53.116"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:53.116" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:53.116" starttime="20180713 16:52:53.116"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:52:58.122" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:52:58.122" starttime="20180713 16:52:53.116"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:52:58.122" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:52:58.122" starttime="20180713 16:52:58.122"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:52:58.122" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:52:58.122" starttime="20180713 16:52:58.122"></status>
</kw>
<msg timestamp="20180713 16:52:58.122" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:52:58.122" starttime="20180713 16:52:58.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:52:58.122" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:52:58.122" starttime="20180713 16:52:58.122"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:58.122" starttime="20180713 16:52:58.122"></status>
</kw>
<status status="PASS" endtime="20180713 16:52:58.122" starttime="20180713 16:52:53.116"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:52:58.122" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:58.122" starttime="20180713 16:52:58.122"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:52:58.138" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:52:58.138" starttime="20180713 16:52:58.122"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:03.143" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:03.143" starttime="20180713 16:52:58.138"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:03.143" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:53:03.143" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:53:03.143" starttime="20180713 16:53:03.143"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:03.143" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:03.143" starttime="20180713 16:53:03.143"></status>
</kw>
<msg timestamp="20180713 16:53:03.143" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:03.143" starttime="20180713 16:53:03.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:03.143" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:03.143" starttime="20180713 16:53:03.143"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:03.143" starttime="20180713 16:53:03.143"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:03.143" starttime="20180713 16:52:58.122"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:03.143" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:03.143" starttime="20180713 16:53:03.143"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:03.159" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:03.159" starttime="20180713 16:53:03.159"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:08.171" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:08.171" starttime="20180713 16:53:03.159"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:08.171" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:08.171" starttime="20180713 16:53:08.171"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:08.171" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:08.171" starttime="20180713 16:53:08.171"></status>
</kw>
<msg timestamp="20180713 16:53:08.171" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:08.171" starttime="20180713 16:53:08.171"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:08.171" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:08.171" starttime="20180713 16:53:08.171"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:08.171" starttime="20180713 16:53:08.171"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:08.171" starttime="20180713 16:53:03.143"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:08.171" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:08.171" starttime="20180713 16:53:08.171"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:08.187" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:08.187" starttime="20180713 16:53:08.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:13.197" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:13.197" starttime="20180713 16:53:08.187"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:13.197" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:13.197" starttime="20180713 16:53:13.197"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:13.197" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:13.197" starttime="20180713 16:53:13.197"></status>
</kw>
<msg timestamp="20180713 16:53:13.197" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:13.197" starttime="20180713 16:53:13.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:13.197" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:13.197" starttime="20180713 16:53:13.197"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:13.197" starttime="20180713 16:53:13.197"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:13.197" starttime="20180713 16:53:08.171"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:13.197" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:13.197" starttime="20180713 16:53:13.197"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:13.212" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:13.212" starttime="20180713 16:53:13.212"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:18.214" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:18.214" starttime="20180713 16:53:13.212"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:18.214" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:18.214" starttime="20180713 16:53:18.214"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:18.214" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:18.214" starttime="20180713 16:53:18.214"></status>
</kw>
<msg timestamp="20180713 16:53:18.214" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:18.214" starttime="20180713 16:53:18.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:18.214" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:18.214" starttime="20180713 16:53:18.214"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:18.214" starttime="20180713 16:53:18.214"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:18.214" starttime="20180713 16:53:13.197"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:18.214" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:18.214" starttime="20180713 16:53:18.214"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:18.229" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:18.229" starttime="20180713 16:53:18.214"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:23.233" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:23.233" starttime="20180713 16:53:18.229"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:23.233" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:53:23.233" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:53:23.233" starttime="20180713 16:53:23.233"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:23.233" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:23.233" starttime="20180713 16:53:23.233"></status>
</kw>
<msg timestamp="20180713 16:53:23.233" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:23.233" starttime="20180713 16:53:23.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:23.233" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:23.233" starttime="20180713 16:53:23.233"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:23.233" starttime="20180713 16:53:23.233"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:23.233" starttime="20180713 16:53:18.214"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:23.233" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:23.233" starttime="20180713 16:53:23.233"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:23.248" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:23.248" starttime="20180713 16:53:23.233"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:28.259" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:28.259" starttime="20180713 16:53:23.248"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:28.259" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:28.259" starttime="20180713 16:53:28.259"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:28.259" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:28.259" starttime="20180713 16:53:28.259"></status>
</kw>
<msg timestamp="20180713 16:53:28.259" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:28.259" starttime="20180713 16:53:28.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:28.259" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:28.259" starttime="20180713 16:53:28.259"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:28.259" starttime="20180713 16:53:28.259"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:28.259" starttime="20180713 16:53:23.233"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:28.275" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:28.275" starttime="20180713 16:53:28.259"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:28.275" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:28.275" starttime="20180713 16:53:28.275"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:33.287" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:33.287" starttime="20180713 16:53:28.275"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:33.287" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:33.287" starttime="20180713 16:53:33.287"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:33.287" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:33.287" starttime="20180713 16:53:33.287"></status>
</kw>
<msg timestamp="20180713 16:53:33.287" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:33.287" starttime="20180713 16:53:33.287"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:33.287" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:33.287" starttime="20180713 16:53:33.287"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:33.287" starttime="20180713 16:53:33.287"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:33.287" starttime="20180713 16:53:28.259"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:33.287" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:33.287" starttime="20180713 16:53:33.287"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:33.303" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:33.303" starttime="20180713 16:53:33.287"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:38.310" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:38.310" starttime="20180713 16:53:33.303"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:38.310" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:38.310" starttime="20180713 16:53:38.310"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:38.310" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:38.310" starttime="20180713 16:53:38.310"></status>
</kw>
<msg timestamp="20180713 16:53:38.310" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:38.310" starttime="20180713 16:53:38.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:38.310" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:38.310" starttime="20180713 16:53:38.310"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:38.310" starttime="20180713 16:53:38.310"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:38.310" starttime="20180713 16:53:33.287"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:38.310" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:38.310" starttime="20180713 16:53:38.310"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:38.326" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:38.326" starttime="20180713 16:53:38.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:43.339" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:43.339" starttime="20180713 16:53:38.326"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:43.339" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:53:43.339" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:53:43.339" starttime="20180713 16:53:43.339"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:43.339" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:43.339" starttime="20180713 16:53:43.339"></status>
</kw>
<msg timestamp="20180713 16:53:43.339" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:43.339" starttime="20180713 16:53:43.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:43.339" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:43.339" starttime="20180713 16:53:43.339"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:43.339" starttime="20180713 16:53:43.339"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:43.339" starttime="20180713 16:53:38.310"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:43.339" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:43.339" starttime="20180713 16:53:43.339"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:43.355" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:43.355" starttime="20180713 16:53:43.339"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:48.355" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:48.355" starttime="20180713 16:53:43.355"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:48.355" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:48.355" starttime="20180713 16:53:48.355"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:48.355" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:48.355" starttime="20180713 16:53:48.355"></status>
</kw>
<msg timestamp="20180713 16:53:48.355" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:48.355" starttime="20180713 16:53:48.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:48.355" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:48.355" starttime="20180713 16:53:48.355"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:48.355" starttime="20180713 16:53:48.355"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:48.355" starttime="20180713 16:53:43.339"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:48.355" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:48.355" starttime="20180713 16:53:48.355"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:48.370" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:48.370" starttime="20180713 16:53:48.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:53.370" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:53.370" starttime="20180713 16:53:48.370"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:53.370" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:53.370" starttime="20180713 16:53:53.370"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:53.370" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:53.370" starttime="20180713 16:53:53.370"></status>
</kw>
<msg timestamp="20180713 16:53:53.370" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:53.370" starttime="20180713 16:53:53.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:53.370" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:53.370" starttime="20180713 16:53:53.370"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:53.370" starttime="20180713 16:53:53.370"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:53.370" starttime="20180713 16:53:48.355"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:53.370" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:53.370" starttime="20180713 16:53:53.370"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:53.391" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:53.392" starttime="20180713 16:53:53.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:53:58.396" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:53:58.397" starttime="20180713 16:53:53.392"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:53:58.397" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:53:58.397" starttime="20180713 16:53:58.397"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:53:58.397" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:53:58.397" starttime="20180713 16:53:58.397"></status>
</kw>
<msg timestamp="20180713 16:53:58.397" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:53:58.397" starttime="20180713 16:53:58.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:53:58.397" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:53:58.397" starttime="20180713 16:53:58.397"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:58.397" starttime="20180713 16:53:58.397"></status>
</kw>
<status status="PASS" endtime="20180713 16:53:58.397" starttime="20180713 16:53:53.370"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:53:58.397" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:58.397" starttime="20180713 16:53:58.397"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:53:58.412" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:53:58.412" starttime="20180713 16:53:58.397"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:03.415" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:03.415" starttime="20180713 16:53:58.412"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:03.415" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:54:03.415" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:54:03.415" starttime="20180713 16:54:03.415"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:03.415" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:03.415" starttime="20180713 16:54:03.415"></status>
</kw>
<msg timestamp="20180713 16:54:03.415" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:03.415" starttime="20180713 16:54:03.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:03.415" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:03.415" starttime="20180713 16:54:03.415"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:03.415" starttime="20180713 16:54:03.415"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:03.415" starttime="20180713 16:53:58.397"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:03.415" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:03.415" starttime="20180713 16:54:03.415"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:03.431" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:03.431" starttime="20180713 16:54:03.415"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:08.444" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:08.444" starttime="20180713 16:54:03.431"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:08.444" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:08.444" starttime="20180713 16:54:08.444"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:08.444" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:08.444" starttime="20180713 16:54:08.444"></status>
</kw>
<msg timestamp="20180713 16:54:08.444" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:08.444" starttime="20180713 16:54:08.444"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:08.444" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:08.444" starttime="20180713 16:54:08.444"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:08.444" starttime="20180713 16:54:08.444"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:08.444" starttime="20180713 16:54:03.415"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:08.444" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:08.444" starttime="20180713 16:54:08.444"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:08.460" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:08.460" starttime="20180713 16:54:08.444"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:13.464" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:13.464" starttime="20180713 16:54:08.460"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:13.464" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:13.464" starttime="20180713 16:54:13.464"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:13.464" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:13.464" starttime="20180713 16:54:13.464"></status>
</kw>
<msg timestamp="20180713 16:54:13.464" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:13.464" starttime="20180713 16:54:13.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:13.464" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:13.464" starttime="20180713 16:54:13.464"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:13.464" starttime="20180713 16:54:13.464"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:13.464" starttime="20180713 16:54:08.444"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:13.464" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:13.479" starttime="20180713 16:54:13.464"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:13.481" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:13.481" starttime="20180713 16:54:13.479"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:18.490" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:18.490" starttime="20180713 16:54:13.481"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:18.490" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:18.490" starttime="20180713 16:54:18.490"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:18.490" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:18.490" starttime="20180713 16:54:18.490"></status>
</kw>
<msg timestamp="20180713 16:54:18.490" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:18.490" starttime="20180713 16:54:18.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:18.490" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:18.490" starttime="20180713 16:54:18.490"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:18.490" starttime="20180713 16:54:18.490"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:18.490" starttime="20180713 16:54:13.464"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:18.490" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:18.490" starttime="20180713 16:54:18.490"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:18.506" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:18.506" starttime="20180713 16:54:18.490"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:23.509" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:23.509" starttime="20180713 16:54:18.506"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:23.509" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:54:23.509" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:54:23.509" starttime="20180713 16:54:23.509"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:23.509" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:23.509" starttime="20180713 16:54:23.509"></status>
</kw>
<msg timestamp="20180713 16:54:23.509" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:23.509" starttime="20180713 16:54:23.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:23.509" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:23.509" starttime="20180713 16:54:23.509"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:23.509" starttime="20180713 16:54:23.509"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:23.509" starttime="20180713 16:54:18.490"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:23.509" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:23.509" starttime="20180713 16:54:23.509"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:23.525" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:23.525" starttime="20180713 16:54:23.509"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:28.527" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:28.527" starttime="20180713 16:54:23.525"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:28.527" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:28.527" starttime="20180713 16:54:28.527"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:28.527" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:28.527" starttime="20180713 16:54:28.527"></status>
</kw>
<msg timestamp="20180713 16:54:28.527" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:28.527" starttime="20180713 16:54:28.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:28.527" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:28.527" starttime="20180713 16:54:28.527"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:28.527" starttime="20180713 16:54:28.527"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:28.527" starttime="20180713 16:54:23.509"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:28.527" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:28.527" starttime="20180713 16:54:28.527"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:28.543" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:28.543" starttime="20180713 16:54:28.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:33.549" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:28.543"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:33.549" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:33.549"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:33.549" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:33.549" starttime="20180713 16:54:33.549"></status>
</kw>
<msg timestamp="20180713 16:54:33.549" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:33.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:33.549" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:33.549"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:33.549"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:28.527"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:33.549" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:33.549"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:33.549" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:33.549" starttime="20180713 16:54:33.549"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:38.553" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:38.553" starttime="20180713 16:54:33.549"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:38.553" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:38.553" starttime="20180713 16:54:38.553"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:38.553" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:38.553" starttime="20180713 16:54:38.553"></status>
</kw>
<msg timestamp="20180713 16:54:38.553" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:38.553" starttime="20180713 16:54:38.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:38.553" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:38.553" starttime="20180713 16:54:38.553"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:38.553" starttime="20180713 16:54:38.553"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:38.553" starttime="20180713 16:54:33.549"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:38.553" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:38.553" starttime="20180713 16:54:38.553"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:38.568" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:38.568" starttime="20180713 16:54:38.568"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:43.571" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:43.571" starttime="20180713 16:54:38.568"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:43.571" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:54:43.571" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:54:43.571" starttime="20180713 16:54:43.571"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:43.571" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:43.571" starttime="20180713 16:54:43.571"></status>
</kw>
<msg timestamp="20180713 16:54:43.571" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:43.571" starttime="20180713 16:54:43.571"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:43.571" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:43.571" starttime="20180713 16:54:43.571"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:43.571" starttime="20180713 16:54:43.571"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:43.571" starttime="20180713 16:54:38.553"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:43.571" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:43.571" starttime="20180713 16:54:43.571"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:43.586" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:43.586" starttime="20180713 16:54:43.586"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:48.597" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:48.597" starttime="20180713 16:54:43.586"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:48.597" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:48.597" starttime="20180713 16:54:48.597"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:48.597" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:48.597" starttime="20180713 16:54:48.597"></status>
</kw>
<msg timestamp="20180713 16:54:48.597" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:48.597" starttime="20180713 16:54:48.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:48.597" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:48.597" starttime="20180713 16:54:48.597"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:48.597" starttime="20180713 16:54:48.597"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:48.597" starttime="20180713 16:54:43.571"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:48.597" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:48.597" starttime="20180713 16:54:48.597"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:48.613" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:48.613" starttime="20180713 16:54:48.597"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:53.613" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:53.613" starttime="20180713 16:54:48.613"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:53.613" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:53.613" starttime="20180713 16:54:53.613"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:53.613" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:53.613" starttime="20180713 16:54:53.613"></status>
</kw>
<msg timestamp="20180713 16:54:53.613" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:53.613" starttime="20180713 16:54:53.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:53.613" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:53.613" starttime="20180713 16:54:53.613"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:53.613" starttime="20180713 16:54:53.613"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:53.613" starttime="20180713 16:54:48.597"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:53.613" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:53.613" starttime="20180713 16:54:53.613"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:53.629" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:53.629" starttime="20180713 16:54:53.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:54:58.640" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:53.629"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:54:58.640" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:58.640"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:54:58.640" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:54:58.640" starttime="20180713 16:54:58.640"></status>
</kw>
<msg timestamp="20180713 16:54:58.640" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:58.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:54:58.640" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:58.640"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:58.640"></status>
</kw>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:53.613"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:54:58.640" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:58.640"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:54:58.640" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:54:58.640" starttime="20180713 16:54:58.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:03.651" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:03.651" starttime="20180713 16:54:58.640"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:03.651" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:55:03.651" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:55:03.651" starttime="20180713 16:55:03.651"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:03.651" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:03.651" starttime="20180713 16:55:03.651"></status>
</kw>
<msg timestamp="20180713 16:55:03.651" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:03.651" starttime="20180713 16:55:03.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:03.651" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:03.651" starttime="20180713 16:55:03.651"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:03.651" starttime="20180713 16:55:03.651"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:03.651" starttime="20180713 16:54:58.640"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:03.666" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:03.666" starttime="20180713 16:55:03.651"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:03.666" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:03.666" starttime="20180713 16:55:03.666"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:08.677" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:08.677" starttime="20180713 16:55:03.666"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:08.677" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:08.677" starttime="20180713 16:55:08.677"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:08.677" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:08.677" starttime="20180713 16:55:08.677"></status>
</kw>
<msg timestamp="20180713 16:55:08.677" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:08.677" starttime="20180713 16:55:08.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:08.677" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:08.677" starttime="20180713 16:55:08.677"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:08.677" starttime="20180713 16:55:08.677"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:08.677" starttime="20180713 16:55:03.651"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:08.677" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:08.677" starttime="20180713 16:55:08.677"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:08.692" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:08.692" starttime="20180713 16:55:08.677"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:13.696" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:13.696" starttime="20180713 16:55:08.692"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:13.696" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:13.696" starttime="20180713 16:55:13.696"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:13.696" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:13.696" starttime="20180713 16:55:13.696"></status>
</kw>
<msg timestamp="20180713 16:55:13.696" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:13.696" starttime="20180713 16:55:13.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:13.696" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:13.696" starttime="20180713 16:55:13.696"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:13.696" starttime="20180713 16:55:13.696"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:13.696" starttime="20180713 16:55:08.677"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:13.696" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:13.696" starttime="20180713 16:55:13.696"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:13.712" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:13.712" starttime="20180713 16:55:13.696"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:18.712" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:18.712" starttime="20180713 16:55:13.712"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:18.712" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:18.712" starttime="20180713 16:55:18.712"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:18.712" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:18.712" starttime="20180713 16:55:18.712"></status>
</kw>
<msg timestamp="20180713 16:55:18.712" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:18.712" starttime="20180713 16:55:18.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:18.712" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:18.712" starttime="20180713 16:55:18.712"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:18.712" starttime="20180713 16:55:18.712"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:18.712" starttime="20180713 16:55:13.696"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:18.712" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:18.712" starttime="20180713 16:55:18.712"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:18.728" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:18.728" starttime="20180713 16:55:18.712"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:23.739" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:23.739" starttime="20180713 16:55:18.728"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:23.739" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:55:23.739" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:55:23.739" starttime="20180713 16:55:23.739"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:23.739" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:23.739" starttime="20180713 16:55:23.739"></status>
</kw>
<msg timestamp="20180713 16:55:23.739" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:23.739" starttime="20180713 16:55:23.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:23.739" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:23.739" starttime="20180713 16:55:23.739"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:23.739" starttime="20180713 16:55:23.739"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:23.739" starttime="20180713 16:55:18.712"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:23.739" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:23.739" starttime="20180713 16:55:23.739"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:23.755" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:23.755" starttime="20180713 16:55:23.755"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:28.757" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:28.757" starttime="20180713 16:55:23.755"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:28.757" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:28.757" starttime="20180713 16:55:28.757"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:28.757" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:28.757" starttime="20180713 16:55:28.757"></status>
</kw>
<msg timestamp="20180713 16:55:28.757" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:28.757" starttime="20180713 16:55:28.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:28.757" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:28.757" starttime="20180713 16:55:28.757"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:28.757" starttime="20180713 16:55:28.757"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:28.757" starttime="20180713 16:55:23.739"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:28.757" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:28.757" starttime="20180713 16:55:28.757"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:28.773" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:28.773" starttime="20180713 16:55:28.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:33.774" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:33.774" starttime="20180713 16:55:28.773"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:33.774" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:33.774" starttime="20180713 16:55:33.774"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:33.774" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:33.774" starttime="20180713 16:55:33.774"></status>
</kw>
<msg timestamp="20180713 16:55:33.774" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:33.774" starttime="20180713 16:55:33.774"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:33.774" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:33.774" starttime="20180713 16:55:33.774"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:33.774" starttime="20180713 16:55:33.774"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:33.774" starttime="20180713 16:55:28.757"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:33.774" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:33.774" starttime="20180713 16:55:33.774"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:33.790" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:33.790" starttime="20180713 16:55:33.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:38.792" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:38.792" starttime="20180713 16:55:33.790"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:38.792" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:38.792" starttime="20180713 16:55:38.792"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:38.792" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:38.792" starttime="20180713 16:55:38.792"></status>
</kw>
<msg timestamp="20180713 16:55:38.792" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:38.792" starttime="20180713 16:55:38.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:38.792" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:38.792" starttime="20180713 16:55:38.792"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:38.792" starttime="20180713 16:55:38.792"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:38.792" starttime="20180713 16:55:33.774"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:38.792" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:38.792" starttime="20180713 16:55:38.792"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:38.809" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:38.809" starttime="20180713 16:55:38.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:43.823" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:43.823" starttime="20180713 16:55:38.810"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:43.823" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:55:43.823" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:55:43.823" starttime="20180713 16:55:43.823"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:43.823" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:43.823" starttime="20180713 16:55:43.823"></status>
</kw>
<msg timestamp="20180713 16:55:43.823" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:43.823" starttime="20180713 16:55:43.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:43.823" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:43.823" starttime="20180713 16:55:43.823"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:43.823" starttime="20180713 16:55:43.823"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:43.823" starttime="20180713 16:55:38.792"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:43.839" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:43.839" starttime="20180713 16:55:43.823"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:43.839" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:43.839" starttime="20180713 16:55:43.839"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:48.843" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:48.843" starttime="20180713 16:55:43.839"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:48.843" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:48.843" starttime="20180713 16:55:48.843"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:48.843" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:48.843" starttime="20180713 16:55:48.843"></status>
</kw>
<msg timestamp="20180713 16:55:48.843" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:48.843" starttime="20180713 16:55:48.843"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:48.843" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:48.843" starttime="20180713 16:55:48.843"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:48.843" starttime="20180713 16:55:48.843"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:48.843" starttime="20180713 16:55:43.823"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:48.843" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:48.843" starttime="20180713 16:55:48.843"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:48.858" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:48.858" starttime="20180713 16:55:48.843"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:53.869" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:53.869" starttime="20180713 16:55:48.858"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:53.869" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:53.869" starttime="20180713 16:55:53.869"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:53.869" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:53.869" starttime="20180713 16:55:53.869"></status>
</kw>
<msg timestamp="20180713 16:55:53.869" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:53.869" starttime="20180713 16:55:53.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:53.869" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:53.869" starttime="20180713 16:55:53.869"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:53.869" starttime="20180713 16:55:53.869"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:53.869" starttime="20180713 16:55:48.843"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:53.869" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:53.869" starttime="20180713 16:55:53.869"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:53.885" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:53.885" starttime="20180713 16:55:53.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:55:58.885" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:55:58.885" starttime="20180713 16:55:53.885"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:55:58.885" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:55:58.885" starttime="20180713 16:55:58.885"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:55:58.885" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:55:58.885" starttime="20180713 16:55:58.885"></status>
</kw>
<msg timestamp="20180713 16:55:58.885" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:55:58.885" starttime="20180713 16:55:58.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:55:58.885" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:55:58.885" starttime="20180713 16:55:58.885"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:58.885" starttime="20180713 16:55:58.885"></status>
</kw>
<status status="PASS" endtime="20180713 16:55:58.885" starttime="20180713 16:55:53.869"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:55:58.885" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:58.885" starttime="20180713 16:55:58.885"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:55:58.900" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:55:58.900" starttime="20180713 16:55:58.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:03.915" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:03.915" starttime="20180713 16:55:58.900"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:03.915" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:56:03.915" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:56:03.915" starttime="20180713 16:56:03.915"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:03.915" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:03.915" starttime="20180713 16:56:03.915"></status>
</kw>
<msg timestamp="20180713 16:56:03.915" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:03.915" starttime="20180713 16:56:03.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:03.915" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:03.915" starttime="20180713 16:56:03.915"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:03.915" starttime="20180713 16:56:03.915"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:03.915" starttime="20180713 16:55:58.885"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:03.915" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:03.915" starttime="20180713 16:56:03.915"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:03.930" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:03.930" starttime="20180713 16:56:03.930"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:08.931" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:08.931" starttime="20180713 16:56:03.930"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:08.931" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:08.931" starttime="20180713 16:56:08.931"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:08.931" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:08.931" starttime="20180713 16:56:08.931"></status>
</kw>
<msg timestamp="20180713 16:56:08.931" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:08.931" starttime="20180713 16:56:08.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:08.931" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:08.931" starttime="20180713 16:56:08.931"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:08.931" starttime="20180713 16:56:08.931"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:08.931" starttime="20180713 16:56:03.915"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:08.931" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:08.931" starttime="20180713 16:56:08.931"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:08.947" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:08.947" starttime="20180713 16:56:08.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:13.951" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:08.947"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:13.951" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:13.951"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:13.951" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:13.951" starttime="20180713 16:56:13.951"></status>
</kw>
<msg timestamp="20180713 16:56:13.951" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:13.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:13.951" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:13.951"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:13.951"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:08.931"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:13.951" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:13.951"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:13.951" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:13.951" starttime="20180713 16:56:13.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:18.955" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:18.955" starttime="20180713 16:56:13.951"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:18.955" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:18.955" starttime="20180713 16:56:18.955"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:18.955" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:18.955" starttime="20180713 16:56:18.955"></status>
</kw>
<msg timestamp="20180713 16:56:18.955" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:18.955" starttime="20180713 16:56:18.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:18.955" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:18.955" starttime="20180713 16:56:18.955"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:18.955" starttime="20180713 16:56:18.955"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:18.955" starttime="20180713 16:56:13.951"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:18.955" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:18.955" starttime="20180713 16:56:18.955"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:18.973" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:18.973" starttime="20180713 16:56:18.955"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:23.988" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:23.988" starttime="20180713 16:56:18.973"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:23.988" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:56:23.988" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:56:23.988" starttime="20180713 16:56:23.988"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:23.988" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:23.988" starttime="20180713 16:56:23.988"></status>
</kw>
<msg timestamp="20180713 16:56:23.988" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:23.988" starttime="20180713 16:56:23.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:23.988" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:23.988" starttime="20180713 16:56:23.988"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:23.988" starttime="20180713 16:56:23.988"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:23.988" starttime="20180713 16:56:18.955"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:23.988" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:23.988" starttime="20180713 16:56:23.988"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:24.003" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:24.003" starttime="20180713 16:56:24.003"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:29.011" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:29.011" starttime="20180713 16:56:24.003"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:29.011" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:29.011" starttime="20180713 16:56:29.011"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:29.011" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:29.011" starttime="20180713 16:56:29.011"></status>
</kw>
<msg timestamp="20180713 16:56:29.011" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:29.011" starttime="20180713 16:56:29.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:29.011" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:29.011" starttime="20180713 16:56:29.011"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:29.011" starttime="20180713 16:56:29.011"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:29.011" starttime="20180713 16:56:23.988"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:29.011" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:29.011" starttime="20180713 16:56:29.011"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:29.027" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:29.027" starttime="20180713 16:56:29.011"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:34.041" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:34.041" starttime="20180713 16:56:29.027"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:34.041" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:34.041" starttime="20180713 16:56:34.041"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:34.041" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:34.041" starttime="20180713 16:56:34.041"></status>
</kw>
<msg timestamp="20180713 16:56:34.041" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:34.041" starttime="20180713 16:56:34.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:34.041" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:34.041" starttime="20180713 16:56:34.041"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:34.041" starttime="20180713 16:56:34.041"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:34.041" starttime="20180713 16:56:29.011"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:34.041" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:34.041" starttime="20180713 16:56:34.041"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:34.057" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:34.057" starttime="20180713 16:56:34.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:39.064" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:39.064" starttime="20180713 16:56:34.057"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:39.064" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:39.064" starttime="20180713 16:56:39.064"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:39.064" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:39.064" starttime="20180713 16:56:39.064"></status>
</kw>
<msg timestamp="20180713 16:56:39.064" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:39.064" starttime="20180713 16:56:39.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:39.064" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:39.064" starttime="20180713 16:56:39.064"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:39.064" starttime="20180713 16:56:39.064"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:39.064" starttime="20180713 16:56:34.041"></status>
</kw>
<kw type="foritem" name="${i} = 171">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:39.064" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:39.080" starttime="20180713 16:56:39.064"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:39.080" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:39.080" starttime="20180713 16:56:39.080"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:44.088" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:44.088" starttime="20180713 16:56:39.080"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:44.088" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:56:44.088" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:56:44.088" starttime="20180713 16:56:44.088"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:44.088" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:44.088" starttime="20180713 16:56:44.088"></status>
</kw>
<msg timestamp="20180713 16:56:44.088" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:44.088" starttime="20180713 16:56:44.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:44.088" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:44.088" starttime="20180713 16:56:44.088"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:44.088" starttime="20180713 16:56:44.088"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:44.088" starttime="20180713 16:56:39.064"></status>
</kw>
<kw type="foritem" name="${i} = 172">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:44.088" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:44.088" starttime="20180713 16:56:44.088"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:44.104" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:44.104" starttime="20180713 16:56:44.088"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:49.105" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:49.105" starttime="20180713 16:56:44.104"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:49.105" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:49.105" starttime="20180713 16:56:49.105"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:49.105" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:49.105" starttime="20180713 16:56:49.105"></status>
</kw>
<msg timestamp="20180713 16:56:49.105" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:49.105" starttime="20180713 16:56:49.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:49.105" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:49.105" starttime="20180713 16:56:49.105"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:49.105" starttime="20180713 16:56:49.105"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:49.105" starttime="20180713 16:56:44.088"></status>
</kw>
<kw type="foritem" name="${i} = 173">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:49.105" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:49.105" starttime="20180713 16:56:49.105"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:49.121" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:49.121" starttime="20180713 16:56:49.105"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:54.132" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:54.132" starttime="20180713 16:56:49.121"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:54.132" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:54.132" starttime="20180713 16:56:54.132"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:54.132" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:54.132" starttime="20180713 16:56:54.132"></status>
</kw>
<msg timestamp="20180713 16:56:54.132" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:54.132" starttime="20180713 16:56:54.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:54.132" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:54.132" starttime="20180713 16:56:54.132"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:54.132" starttime="20180713 16:56:54.132"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:54.132" starttime="20180713 16:56:49.105"></status>
</kw>
<kw type="foritem" name="${i} = 174">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:54.132" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:54.132" starttime="20180713 16:56:54.132"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:54.147" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:54.147" starttime="20180713 16:56:54.132"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:56:59.151" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:56:59.151" starttime="20180713 16:56:54.147"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:56:59.151" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:56:59.151" starttime="20180713 16:56:59.151"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:56:59.151" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:56:59.151" starttime="20180713 16:56:59.151"></status>
</kw>
<msg timestamp="20180713 16:56:59.151" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:56:59.151" starttime="20180713 16:56:59.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:56:59.151" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:56:59.151" starttime="20180713 16:56:59.151"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:59.151" starttime="20180713 16:56:59.151"></status>
</kw>
<status status="PASS" endtime="20180713 16:56:59.151" starttime="20180713 16:56:54.132"></status>
</kw>
<kw type="foritem" name="${i} = 175">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:56:59.151" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:59.151" starttime="20180713 16:56:59.151"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:56:59.166" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:56:59.166" starttime="20180713 16:56:59.151"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:04.166" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:04.166" starttime="20180713 16:56:59.166"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:04.166" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:57:04.166" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:57:04.166" starttime="20180713 16:57:04.166"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:04.166" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:04.166" starttime="20180713 16:57:04.166"></status>
</kw>
<msg timestamp="20180713 16:57:04.166" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:04.166" starttime="20180713 16:57:04.166"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:04.166" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:04.166" starttime="20180713 16:57:04.166"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:04.166" starttime="20180713 16:57:04.166"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:04.166" starttime="20180713 16:56:59.151"></status>
</kw>
<kw type="foritem" name="${i} = 176">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:04.166" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:04.166" starttime="20180713 16:57:04.166"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:04.181" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:04.181" starttime="20180713 16:57:04.181"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:09.190" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:09.190" starttime="20180713 16:57:04.181"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:09.190" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:09.190" starttime="20180713 16:57:09.190"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:09.190" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:09.190" starttime="20180713 16:57:09.190"></status>
</kw>
<msg timestamp="20180713 16:57:09.190" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:09.190" starttime="20180713 16:57:09.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:09.190" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:09.190" starttime="20180713 16:57:09.190"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:09.190" starttime="20180713 16:57:09.190"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:09.190" starttime="20180713 16:57:04.166"></status>
</kw>
<kw type="foritem" name="${i} = 177">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:09.206" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:09.206" starttime="20180713 16:57:09.190"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:09.206" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:09.206" starttime="20180713 16:57:09.206"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:14.220" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:14.220" starttime="20180713 16:57:09.206"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:14.220" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:14.220" starttime="20180713 16:57:14.220"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:14.220" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:14.220" starttime="20180713 16:57:14.220"></status>
</kw>
<msg timestamp="20180713 16:57:14.220" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:14.220" starttime="20180713 16:57:14.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:14.220" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:14.220" starttime="20180713 16:57:14.220"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:14.220" starttime="20180713 16:57:14.220"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:14.220" starttime="20180713 16:57:09.190"></status>
</kw>
<kw type="foritem" name="${i} = 178">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:14.220" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:14.236" starttime="20180713 16:57:14.220"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:14.236" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:14.236" starttime="20180713 16:57:14.236"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:19.247" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:19.247" starttime="20180713 16:57:14.236"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:19.247" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:19.247" starttime="20180713 16:57:19.247"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:19.248" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:19.248" starttime="20180713 16:57:19.248"></status>
</kw>
<msg timestamp="20180713 16:57:19.248" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:19.249" starttime="20180713 16:57:19.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:19.249" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:19.249" starttime="20180713 16:57:19.249"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:19.249" starttime="20180713 16:57:19.249"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:19.249" starttime="20180713 16:57:14.220"></status>
</kw>
<kw type="foritem" name="${i} = 179">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:19.250" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:19.250" starttime="20180713 16:57:19.250"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:19.253" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:19.253" starttime="20180713 16:57:19.250"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:24.263" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:24.263" starttime="20180713 16:57:19.253"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:24.263" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:57:24.263" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:57:24.263" starttime="20180713 16:57:24.263"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:24.263" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:24.263" starttime="20180713 16:57:24.263"></status>
</kw>
<msg timestamp="20180713 16:57:24.263" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:24.263" starttime="20180713 16:57:24.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:24.263" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:24.263" starttime="20180713 16:57:24.263"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:24.263" starttime="20180713 16:57:24.263"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:24.263" starttime="20180713 16:57:19.250"></status>
</kw>
<kw type="foritem" name="${i} = 180">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:24.263" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:24.263" starttime="20180713 16:57:24.263"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:24.278" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:24.278" starttime="20180713 16:57:24.278"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:29.281" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:29.281" starttime="20180713 16:57:24.278"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:29.281" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:29.281" starttime="20180713 16:57:29.281"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:29.281" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:29.281" starttime="20180713 16:57:29.281"></status>
</kw>
<msg timestamp="20180713 16:57:29.281" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:29.281" starttime="20180713 16:57:29.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:29.281" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:29.281" starttime="20180713 16:57:29.281"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:29.281" starttime="20180713 16:57:29.281"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:29.281" starttime="20180713 16:57:24.263"></status>
</kw>
<kw type="foritem" name="${i} = 181">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:29.281" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:29.281" starttime="20180713 16:57:29.281"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:29.296" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:29.296" starttime="20180713 16:57:29.281"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:34.306" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:34.306" starttime="20180713 16:57:29.296"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:34.306" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:34.306" starttime="20180713 16:57:34.306"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:34.306" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:34.306" starttime="20180713 16:57:34.306"></status>
</kw>
<msg timestamp="20180713 16:57:34.306" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:34.306" starttime="20180713 16:57:34.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:34.306" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:34.306" starttime="20180713 16:57:34.306"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:34.306" starttime="20180713 16:57:34.306"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:34.306" starttime="20180713 16:57:29.281"></status>
</kw>
<kw type="foritem" name="${i} = 182">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:34.306" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:34.306" starttime="20180713 16:57:34.306"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:34.321" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:34.321" starttime="20180713 16:57:34.306"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:39.330" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:39.330" starttime="20180713 16:57:34.321"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:39.330" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:39.330" starttime="20180713 16:57:39.330"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:39.330" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:39.330" starttime="20180713 16:57:39.330"></status>
</kw>
<msg timestamp="20180713 16:57:39.330" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:39.330" starttime="20180713 16:57:39.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:39.330" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:39.330" starttime="20180713 16:57:39.330"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:39.330" starttime="20180713 16:57:39.330"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:39.330" starttime="20180713 16:57:34.306"></status>
</kw>
<kw type="foritem" name="${i} = 183">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:39.330" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:39.330" starttime="20180713 16:57:39.330"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:39.346" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:39.346" starttime="20180713 16:57:39.330"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:44.350" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:44.350" starttime="20180713 16:57:39.346"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:44.351" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:57:44.351" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:57:44.351" starttime="20180713 16:57:44.350"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:44.352" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:44.352" starttime="20180713 16:57:44.352"></status>
</kw>
<msg timestamp="20180713 16:57:44.352" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:44.352" starttime="20180713 16:57:44.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:44.352" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:44.352" starttime="20180713 16:57:44.352"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:44.352" starttime="20180713 16:57:44.352"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:44.352" starttime="20180713 16:57:39.330"></status>
</kw>
<kw type="foritem" name="${i} = 184">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:44.352" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:44.352" starttime="20180713 16:57:44.352"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:44.352" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:44.352" starttime="20180713 16:57:44.352"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:49.354" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:49.354" starttime="20180713 16:57:44.352"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:49.354" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:49.354" starttime="20180713 16:57:49.354"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:49.354" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:49.354" starttime="20180713 16:57:49.354"></status>
</kw>
<msg timestamp="20180713 16:57:49.354" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:49.354" starttime="20180713 16:57:49.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:49.354" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:49.354" starttime="20180713 16:57:49.354"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:49.354" starttime="20180713 16:57:49.354"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:49.354" starttime="20180713 16:57:44.352"></status>
</kw>
<kw type="foritem" name="${i} = 185">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:49.354" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:49.354" starttime="20180713 16:57:49.354"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:49.369" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:49.369" starttime="20180713 16:57:49.354"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:54.381" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:54.381" starttime="20180713 16:57:49.369"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:54.381" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:54.381" starttime="20180713 16:57:54.381"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:54.381" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:54.381" starttime="20180713 16:57:54.381"></status>
</kw>
<msg timestamp="20180713 16:57:54.381" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:54.381" starttime="20180713 16:57:54.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:54.381" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:54.381" starttime="20180713 16:57:54.381"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:54.381" starttime="20180713 16:57:54.381"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:54.381" starttime="20180713 16:57:49.354"></status>
</kw>
<kw type="foritem" name="${i} = 186">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:54.381" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:54.381" starttime="20180713 16:57:54.381"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:54.403" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:54.404" starttime="20180713 16:57:54.397"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:57:59.418" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:57:59.418" starttime="20180713 16:57:54.404"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:57:59.418" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:57:59.418" starttime="20180713 16:57:59.418"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:57:59.418" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:57:59.418" starttime="20180713 16:57:59.418"></status>
</kw>
<msg timestamp="20180713 16:57:59.418" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:57:59.418" starttime="20180713 16:57:59.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:57:59.418" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:57:59.418" starttime="20180713 16:57:59.418"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:59.418" starttime="20180713 16:57:59.418"></status>
</kw>
<status status="PASS" endtime="20180713 16:57:59.418" starttime="20180713 16:57:54.381"></status>
</kw>
<kw type="foritem" name="${i} = 187">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:57:59.418" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:59.418" starttime="20180713 16:57:59.418"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:57:59.433" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:57:59.433" starttime="20180713 16:57:59.418"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:04.440" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:04.440" starttime="20180713 16:57:59.433"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:04.440" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:58:04.440" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:58:04.440" starttime="20180713 16:58:04.440"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:04.440" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:04.440" starttime="20180713 16:58:04.440"></status>
</kw>
<msg timestamp="20180713 16:58:04.440" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:04.440" starttime="20180713 16:58:04.440"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:04.440" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:04.440" starttime="20180713 16:58:04.440"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:04.440" starttime="20180713 16:58:04.440"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:04.440" starttime="20180713 16:57:59.418"></status>
</kw>
<kw type="foritem" name="${i} = 188">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:04.440" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:04.440" starttime="20180713 16:58:04.440"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:04.455" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:04.455" starttime="20180713 16:58:04.440"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:09.465" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:09.465" starttime="20180713 16:58:04.455"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:09.465" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:09.465" starttime="20180713 16:58:09.465"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:09.465" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:09.465" starttime="20180713 16:58:09.465"></status>
</kw>
<msg timestamp="20180713 16:58:09.465" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:09.465" starttime="20180713 16:58:09.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:09.465" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:09.465" starttime="20180713 16:58:09.465"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:09.465" starttime="20180713 16:58:09.465"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:09.465" starttime="20180713 16:58:04.440"></status>
</kw>
<kw type="foritem" name="${i} = 189">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:09.465" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:09.465" starttime="20180713 16:58:09.465"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:09.480" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:09.480" starttime="20180713 16:58:09.480"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:14.495" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:09.480"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:14.495" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:14.495"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:14.495" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:14.495" starttime="20180713 16:58:14.495"></status>
</kw>
<msg timestamp="20180713 16:58:14.495" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:14.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:14.495" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:14.495"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:14.495"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:09.465"></status>
</kw>
<kw type="foritem" name="${i} = 190">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:14.495" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:14.495"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:14.495" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:14.495" starttime="20180713 16:58:14.495"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:19.499" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:19.499" starttime="20180713 16:58:14.495"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:19.499" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:19.499" starttime="20180713 16:58:19.499"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:19.499" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:19.499" starttime="20180713 16:58:19.499"></status>
</kw>
<msg timestamp="20180713 16:58:19.499" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:19.499" starttime="20180713 16:58:19.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:19.499" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:19.499" starttime="20180713 16:58:19.499"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:19.499" starttime="20180713 16:58:19.499"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:19.499" starttime="20180713 16:58:14.495"></status>
</kw>
<kw type="foritem" name="${i} = 191">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:19.499" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:19.499" starttime="20180713 16:58:19.499"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:19.515" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:19.515" starttime="20180713 16:58:19.499"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:24.516" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:19.515"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:24.516" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:58:24.516" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:24.516"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:24.516" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:24.516" starttime="20180713 16:58:24.516"></status>
</kw>
<msg timestamp="20180713 16:58:24.516" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:24.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:24.516" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:24.516"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:24.516"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:19.499"></status>
</kw>
<kw type="foritem" name="${i} = 192">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:24.516" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:24.516"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:24.516" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:24.516" starttime="20180713 16:58:24.516"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:29.520" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:29.520" starttime="20180713 16:58:24.516"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:29.520" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:29.520" starttime="20180713 16:58:29.520"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:29.520" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:29.520" starttime="20180713 16:58:29.520"></status>
</kw>
<msg timestamp="20180713 16:58:29.520" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:29.520" starttime="20180713 16:58:29.520"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:29.520" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:29.520" starttime="20180713 16:58:29.520"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:29.520" starttime="20180713 16:58:29.520"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:29.520" starttime="20180713 16:58:24.516"></status>
</kw>
<kw type="foritem" name="${i} = 193">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:29.520" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:29.520" starttime="20180713 16:58:29.520"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:29.535" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:29.535" starttime="20180713 16:58:29.520"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:34.536" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:34.536" starttime="20180713 16:58:29.535"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:34.536" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:34.536" starttime="20180713 16:58:34.536"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:34.536" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:34.536" starttime="20180713 16:58:34.536"></status>
</kw>
<msg timestamp="20180713 16:58:34.536" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:34.536" starttime="20180713 16:58:34.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:34.536" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:34.536" starttime="20180713 16:58:34.536"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:34.536" starttime="20180713 16:58:34.536"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:34.536" starttime="20180713 16:58:29.520"></status>
</kw>
<kw type="foritem" name="${i} = 194">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:34.536" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:34.536" starttime="20180713 16:58:34.536"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:34.552" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:34.552" starttime="20180713 16:58:34.536"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:39.554" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:39.554" starttime="20180713 16:58:34.552"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:39.554" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:39.554" starttime="20180713 16:58:39.554"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:39.554" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:39.554" starttime="20180713 16:58:39.554"></status>
</kw>
<msg timestamp="20180713 16:58:39.554" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:39.554" starttime="20180713 16:58:39.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:39.554" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:39.554" starttime="20180713 16:58:39.554"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:39.554" starttime="20180713 16:58:39.554"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:39.554" starttime="20180713 16:58:34.536"></status>
</kw>
<kw type="foritem" name="${i} = 195">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:39.554" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:39.554" starttime="20180713 16:58:39.554"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:39.569" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:39.569" starttime="20180713 16:58:39.554"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:44.573" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:44.573" starttime="20180713 16:58:39.569"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:44.573" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:58:44.573" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:58:44.573" starttime="20180713 16:58:44.573"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:44.573" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:44.573" starttime="20180713 16:58:44.573"></status>
</kw>
<msg timestamp="20180713 16:58:44.573" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:44.573" starttime="20180713 16:58:44.573"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:44.573" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:44.573" starttime="20180713 16:58:44.573"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:44.573" starttime="20180713 16:58:44.573"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:44.573" starttime="20180713 16:58:39.554"></status>
</kw>
<kw type="foritem" name="${i} = 196">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:44.573" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:44.573" starttime="20180713 16:58:44.573"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:44.589" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:44.589" starttime="20180713 16:58:44.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:49.594" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:49.594" starttime="20180713 16:58:44.589"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:49.594" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:49.594" starttime="20180713 16:58:49.594"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:49.594" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:49.594" starttime="20180713 16:58:49.594"></status>
</kw>
<msg timestamp="20180713 16:58:49.594" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:49.594" starttime="20180713 16:58:49.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:49.594" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:49.594" starttime="20180713 16:58:49.594"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:49.594" starttime="20180713 16:58:49.594"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:49.594" starttime="20180713 16:58:44.573"></status>
</kw>
<kw type="foritem" name="${i} = 197">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:49.610" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:49.610" starttime="20180713 16:58:49.594"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:49.610" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:49.610" starttime="20180713 16:58:49.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:54.616" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:54.616" starttime="20180713 16:58:49.610"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:54.616" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:54.616" starttime="20180713 16:58:54.616"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:54.616" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:54.616" starttime="20180713 16:58:54.616"></status>
</kw>
<msg timestamp="20180713 16:58:54.616" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:54.616" starttime="20180713 16:58:54.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:54.616" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:54.616" starttime="20180713 16:58:54.616"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:54.616" starttime="20180713 16:58:54.616"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:54.616" starttime="20180713 16:58:49.594"></status>
</kw>
<kw type="foritem" name="${i} = 198">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:54.616" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:54.616" starttime="20180713 16:58:54.616"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:54.632" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:54.632" starttime="20180713 16:58:54.616"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:58:59.643" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:58:59.643" starttime="20180713 16:58:54.632"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:58:59.643" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:58:59.643" starttime="20180713 16:58:59.643"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:58:59.643" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:58:59.643" starttime="20180713 16:58:59.643"></status>
</kw>
<msg timestamp="20180713 16:58:59.643" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:58:59.643" starttime="20180713 16:58:59.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:58:59.643" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:58:59.643" starttime="20180713 16:58:59.643"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:59.643" starttime="20180713 16:58:59.643"></status>
</kw>
<status status="PASS" endtime="20180713 16:58:59.643" starttime="20180713 16:58:54.616"></status>
</kw>
<kw type="foritem" name="${i} = 199">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:58:59.643" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:59.643" starttime="20180713 16:58:59.643"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:58:59.658" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:58:59.658" starttime="20180713 16:58:59.643"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:59:04.658" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:59:04.658" starttime="20180713 16:58:59.658"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:59:04.658" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180713 16:59:04.658" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180713 16:59:04.658" starttime="20180713 16:59:04.658"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:59:04.658" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:59:04.658" starttime="20180713 16:59:04.658"></status>
</kw>
<msg timestamp="20180713 16:59:04.658" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:59:04.658" starttime="20180713 16:59:04.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:59:04.658" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:59:04.658" starttime="20180713 16:59:04.658"></status>
</kw>
<status status="PASS" endtime="20180713 16:59:04.658" starttime="20180713 16:59:04.658"></status>
</kw>
<status status="PASS" endtime="20180713 16:59:04.658" starttime="20180713 16:58:59.643"></status>
</kw>
<kw type="foritem" name="${i} = 200">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:59:04.658" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:59:04.658" starttime="20180713 16:59:04.658"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:59:04.674" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:59:04.674" starttime="20180713 16:59:04.658"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:59:09.686" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:59:09.686" starttime="20180713 16:59:04.674"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:59:09.686" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:59:09.686" starttime="20180713 16:59:09.686"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:59:09.686" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:59:09.686" starttime="20180713 16:59:09.686"></status>
</kw>
<msg timestamp="20180713 16:59:09.686" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:59:09.686" starttime="20180713 16:59:09.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:59:09.686" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:59:09.686" starttime="20180713 16:59:09.686"></status>
</kw>
<status status="PASS" endtime="20180713 16:59:09.686" starttime="20180713 16:59:09.686"></status>
</kw>
<status status="PASS" endtime="20180713 16:59:09.686" starttime="20180713 16:59:04.658"></status>
</kw>
<kw type="foritem" name="${i} = 201">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:59:09.686" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:59:09.686" starttime="20180713 16:59:09.686"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:59:09.702" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:59:09.702" starttime="20180713 16:59:09.686"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180713 16:59:14.705" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180713 16:59:14.705" starttime="20180713 16:59:09.702"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180713 16:59:14.705" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180713 16:59:14.705" starttime="20180713 16:59:14.705"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180713 16:59:14.705" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180713 16:59:14.705" starttime="20180713 16:59:14.705"></status>
</kw>
<msg timestamp="20180713 16:59:14.705" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180713 16:59:14.705" starttime="20180713 16:59:14.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180713 16:59:14.705" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180713 16:59:14.705" starttime="20180713 16:59:14.705"></status>
</kw>
<status status="PASS" endtime="20180713 16:59:14.705" starttime="20180713 16:59:14.705"></status>
</kw>
<status status="PASS" endtime="20180713 16:59:14.705" starttime="20180713 16:59:09.686"></status>
</kw>
<kw type="foritem" name="${i} = 202">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180713 16:59:14.705" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180713 16:59:14.705" starttime="20180713 16:59:14.705"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180713 16:59:17.717" level="FAIL">No match found for '
' in 3 seconds
Output:
ping -c 1 [root@co.</msg>
<status status="FAIL" endtime="20180713 16:59:17.717" starttime="20180713 16:59:14.705"></status>
</kw>
<status status="FAIL" endtime="20180713 16:59:17.717" starttime="20180713 16:59:14.705"></status>
</kw>
<status status="FAIL" endtime="20180713 16:59:17.717" starttime="20180713 16:42:20.592"></status>
</kw>
<status status="FAIL" endtime="20180713 16:59:17.717" starttime="20180713 16:41:43.366"></status>
</kw>
<status status="FAIL" endtime="20180713 16:59:17.717" starttime="20180713 16:39:58.308"></status>
</kw>
<kw type="teardown" name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180713 16:59:17.888" starttime="20180713 16:59:17.717"></status>
</kw>
<doc>Verify the Cloud environment (RHOSP) before we start Onboarding of VNF VM’s process.</doc>
<tags>
<tag>Onboard</tag>
</tags>
<status status="FAIL" endtime="20180713 16:59:17.888" critical="yes" starttime="20180713 16:38:57.917">No match found for '
' in 3 seconds
Output:
ping -c 1 [root@co.</status>
</test>
<status status="FAIL" endtime="20180713 16:59:17.888" starttime="20180713 16:38:57.326"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Onboard</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="SBC Onboarding TestCases" pass="0">SBC Onboarding TestCases</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
