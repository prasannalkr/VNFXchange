<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180716 10:07:22.385" generator="Robot 3.0.2 (Python 2.7.10 on win32)">
<suite source="C:\xampp\htdocs\VNFXchange\Genric_Script\SBC_Onboarding_TestCases.robot" id="s1" name="SBC Onboarding TestCases">
<test id="s1-t1" name="TC1_Verification of on-boarded vnf on RHOSP">
<kw name="ImportDetails" library="Genric_Keywords">
<arguments>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Server}</var>
</assign>
<kw name="Parseconfdata" library="Library">
<arguments>
<arg>${ConfigPath}</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Param}</var>
</assign>
<msg timestamp="20180716 10:07:23.922" level="INFO">@{Param} = [ "RedHat" | Testit | sdfasdf | qcow2 | /root/auto_heatfiles | bare | C:\xampp\htdocs\VNFXchange | nova:compute1 | default | TCP | Ingress | ipv4 | Oracle_SBC_Flavour_Template.txt | nnSCZ739p1-img-vm_...</msg>
<status status="PASS" endtime="20180716 10:07:23.922" starttime="20180716 10:07:23.921"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${server}</var>
</assign>
<msg timestamp="20180716 10:07:23.923" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180716 10:07:23.923" starttime="20180716 10:07:23.922"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${VNFName}</var>
</assign>
<msg timestamp="20180716 10:07:23.923" level="INFO">${VNFName} = Testit</msg>
<status status="PASS" endtime="20180716 10:07:23.923" starttime="20180716 10:07:23.923"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${ImageName}</var>
</assign>
<msg timestamp="20180716 10:07:23.924" level="INFO">${ImageName} = sdfasdf</msg>
<status status="PASS" endtime="20180716 10:07:23.924" starttime="20180716 10:07:23.923"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${DiskFormat}</var>
</assign>
<msg timestamp="20180716 10:07:23.924" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180716 10:07:23.924" starttime="20180716 10:07:23.924"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${ImageFilePath}</var>
</assign>
<msg timestamp="20180716 10:07:23.925" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180716 10:07:23.925" starttime="20180716 10:07:23.924"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${ConatinerFormat}</var>
</assign>
<msg timestamp="20180716 10:07:23.925" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180716 10:07:23.925" starttime="20180716 10:07:23.925"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${FlavorP}</var>
</assign>
<msg timestamp="20180716 10:07:23.926" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180716 10:07:23.926" starttime="20180716 10:07:23.925"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${AvZone}</var>
</assign>
<msg timestamp="20180716 10:07:23.926" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180716 10:07:23.926" starttime="20180716 10:07:23.926"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${Security}</var>
</assign>
<msg timestamp="20180716 10:07:23.927" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180716 10:07:23.927" starttime="20180716 10:07:23.927"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${Protocol}</var>
</assign>
<msg timestamp="20180716 10:07:23.927" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180716 10:07:23.927" starttime="20180716 10:07:23.927"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>10</arg>
</arguments>
<assign>
<var>${Direction}</var>
</assign>
<msg timestamp="20180716 10:07:23.928" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180716 10:07:23.928" starttime="20180716 10:07:23.928"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>11</arg>
</arguments>
<assign>
<var>${Ethertype}</var>
</assign>
<msg timestamp="20180716 10:07:23.928" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180716 10:07:23.929" starttime="20180716 10:07:23.928"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<assign>
<var>${FN}</var>
</assign>
<msg timestamp="20180716 10:07:23.929" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180716 10:07:23.929" starttime="20180716 10:07:23.929"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<assign>
<var>${ImageFileName}</var>
</assign>
<msg timestamp="20180716 10:07:23.930" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:07:23.930" starttime="20180716 10:07:23.929"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic1}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:23.930" starttime="20180716 10:07:23.930"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic2}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:23.930" starttime="20180716 10:07:23.930"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic3}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>14</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:23.931" starttime="20180716 10:07:23.931"></status>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<doc>Splits the extension from the given path.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<assign>
<var>${FlavourName}</var>
<var>${Ext}</var>
</assign>
<msg timestamp="20180716 10:07:23.931" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<msg timestamp="20180716 10:07:23.932" level="INFO">${Ext} = txt</msg>
<status status="PASS" endtime="20180716 10:07:23.932" starttime="20180716 10:07:23.931"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFileName}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.932" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:07:23.932" starttime="20180716 10:07:23.932"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.933" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180716 10:07:23.933" starttime="20180716 10:07:23.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavourName}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.933" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180716 10:07:23.933" starttime="20180716 10:07:23.933"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.934" level="INFO">${VNFName} = Testit</msg>
<status status="PASS" endtime="20180716 10:07:23.934" starttime="20180716 10:07:23.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${server}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.935" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180716 10:07:23.935" starttime="20180716 10:07:23.934"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageName}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.935" level="INFO">${ImageName} = sdfasdf</msg>
<status status="PASS" endtime="20180716 10:07:23.935" starttime="20180716 10:07:23.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${DiskFormat}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.936" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180716 10:07:23.936" starttime="20180716 10:07:23.935"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFilePath}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.936" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180716 10:07:23.937" starttime="20180716 10:07:23.936"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ConatinerFormat}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.937" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180716 10:07:23.937" starttime="20180716 10:07:23.937"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavorP}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.938" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180716 10:07:23.938" starttime="20180716 10:07:23.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${AvZone}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.939" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180716 10:07:23.939" starttime="20180716 10:07:23.938"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Security}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.939" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180716 10:07:23.939" starttime="20180716 10:07:23.939"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Protocol}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.940" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180716 10:07:23.940" starttime="20180716 10:07:23.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Direction}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.941" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180716 10:07:23.941" starttime="20180716 10:07:23.940"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Ethertype}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.941" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180716 10:07:23.941" starttime="20180716 10:07:23.941"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic1}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:23.941" starttime="20180716 10:07:23.941"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic2}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:23.942" starttime="20180716 10:07:23.942"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.942" level="INFO">${VNFName} = Testit</msg>
<status status="PASS" endtime="20180716 10:07:23.942" starttime="20180716 10:07:23.942"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic3}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:23.943" starttime="20180716 10:07:23.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${server}=="RedHat"</arg>
<arg>Return From Keyword</arg>
<arg>@{RedHat}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>@{RedHat}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20180716 10:07:23.944" starttime="20180716 10:07:23.943"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:23.944" starttime="20180716 10:07:23.943"></status>
</kw>
<msg timestamp="20180716 10:07:23.944" level="INFO">@{Server} = [ 10.53.214.10 | root | techm123 ]</msg>
<status status="PASS" endtime="20180716 10:07:23.944" starttime="20180716 10:07:23.920"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{Server}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.946" level="INFO">@{Server} = [ 10.53.214.10 | root | techm123 ]</msg>
<status status="PASS" endtime="20180716 10:07:23.946" starttime="20180716 10:07:23.945"></status>
</kw>
<kw name="Server_Login" library="Genric_Keywords">
<arguments>
<arg>@{Server}</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${HOST}</var>
</assign>
<msg timestamp="20180716 10:07:23.947" level="INFO">${HOST} = 10.53.214.10</msg>
<status status="PASS" endtime="20180716 10:07:23.947" starttime="20180716 10:07:23.947"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${USERNAME}</var>
</assign>
<msg timestamp="20180716 10:07:23.948" level="INFO">${USERNAME} = root</msg>
<status status="PASS" endtime="20180716 10:07:23.948" starttime="20180716 10:07:23.947"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${PASSWORD}</var>
</assign>
<msg timestamp="20180716 10:07:23.948" level="INFO">${PASSWORD} = techm123</msg>
<status status="PASS" endtime="20180716 10:07:23.948" starttime="20180716 10:07:23.948"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 4 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${HOST}</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20180716 10:07:23.949" level="INFO">${Index} = 1</msg>
<status status="PASS" endtime="20180716 10:07:23.949" starttime="20180716 10:07:23.949"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Login</arg>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180716 10:07:23.951" level="INFO">Logging into '10.53.214.10:22' as 'root'.</msg>
<msg timestamp="20180716 10:07:46.018" level="INFO">Read output: Last login: Fri Jul 13 07:10:57 2018 from 10.53.172.9
ABRT has detected 1 problem(s). For more info run: abrt-cli list --since 1531480257
[root@controller ~]#</msg>
<status status="PASS" endtime="20180716 10:07:46.019" starttime="20180716 10:07:23.950"></status>
</kw>
<msg timestamp="20180716 10:07:46.019" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20180716 10:07:46.019" starttime="20180716 10:07:23.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:46.022" starttime="20180716 10:07:46.020"></status>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20180716 10:07:46.023" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20180716 10:07:46.023" starttime="20180716 10:07:46.022"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:46.023" starttime="20180716 10:07:23.949"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:46.024" starttime="20180716 10:07:23.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation**********************</arg>
</arguments>
<msg timestamp="20180716 10:07:46.025" level="INFO">*****************ServerLogin_Validation**********************</msg>
<status status="PASS" endtime="20180716 10:07:46.025" starttime="20180716 10:07:46.024"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>ifconfig | grep inet</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>ifconfig | grep inet</arg>
</arguments>
<msg timestamp="20180716 10:07:46.032" level="INFO">ifconfig | grep inet</msg>
<status status="PASS" endtime="20180716 10:07:46.034" starttime="20180716 10:07:46.027"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:46.035" starttime="20180716 10:07:46.026"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20180716 10:07:50.038" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20180716 10:07:50.038" starttime="20180716 10:07:46.037"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:07:50.040" level="INFO">[01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 172.18.113.11  netmask 255.255.255.0  broadcast 172.18.113.255
        [01;31m[Kinet[m[K6 fe80::8006:74ff:fe4f:e843  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.80.1.8  netmask 255.255.255.0  broadcast 10.80.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.81.1.8  netmask 255.255.255.0  broadcast 10.81.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3ca  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.53.214.10  netmask 255.255.255.0  broadcast 10.53.214.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cc  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 127.0.0.1  netmask 255.0.0.0
        [01;31m[Kinet[m[K6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
[root@controller ~]#</msg>
<msg timestamp="20180716 10:07:50.041" level="INFO">${output} =         [01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[...</msg>
<status status="PASS" endtime="20180716 10:07:50.042" starttime="20180716 10:07:50.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${HOST}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.044" starttime="20180716 10:07:50.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation Completed**********************</arg>
</arguments>
<msg timestamp="20180716 10:07:50.045" level="INFO">*****************ServerLogin_Validation Completed**********************</msg>
<status status="PASS" endtime="20180716 10:07:50.046" starttime="20180716 10:07:50.044"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>source keystonerc_admin</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>source keystonerc_admin</arg>
</arguments>
<msg timestamp="20180716 10:07:50.055" level="INFO">source keystonerc_admin</msg>
<status status="PASS" endtime="20180716 10:07:50.055" starttime="20180716 10:07:50.048"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:50.055" starttime="20180716 10:07:50.046"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:07:50.057" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:07:50.057" level="INFO">${output} = [root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180716 10:07:50.058" starttime="20180716 10:07:50.056"></status>
</kw>
<msg timestamp="20180716 10:07:50.059" level="INFO">${Index} = 1</msg>
<status status="PASS" endtime="20180716 10:07:50.059" starttime="20180716 10:07:23.946"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Print Logger</arg>
<arg>Server Logged</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.062" starttime="20180716 10:07:50.061"></status>
</kw>
<kw name="SBC_CreateFlavor" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.066" starttime="20180716 10:07:50.065"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.067" starttime="20180716 10:07:50.066"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC Flavor Creation is Started ***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.069" starttime="20180716 10:07:50.067"></status>
</kw>
<kw name="Create Flavor" library="Genric_Keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>********************Create Flavor start*****************************</arg>
</arguments>
<msg timestamp="20180716 10:07:50.072" level="INFO">********************Create Flavor start*****************************</msg>
<status status="PASS" endtime="20180716 10:07:50.072" starttime="20180716 10:07:50.071"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\</arg>
<arg>${FN}</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20180716 10:07:50.074" level="INFO">${path} = C:\xampp\htdocs\VNFXchange\Genric_Script\Config\Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180716 10:07:50.074" starttime="20180716 10:07:50.073"></status>
</kw>
<kw name="ImportFlavor" library="Genric_Keywords">
<arguments>
<arg>${path}</arg>
</arguments>
<kw name="Get File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${Path}</arg>
</arguments>
<assign>
<var>${File}</var>
</assign>
<msg timestamp="20180716 10:07:50.076" html="yes" level="INFO">Getting file '&lt;a href="file://C:\xampp\htdocs\VNFXchange\Genric_Script\Config\Oracle_SBC_Flavour_Template.txt"&gt;C:\xampp\htdocs\VNFXchange\Genric_Script\Config\Oracle_SBC_Flavour_Template.txt&lt;/a&gt;'.</msg>
<msg timestamp="20180716 10:07:50.101" level="INFO">${File} = Ram:8192
disk:80
vcpus:4</msg>
<status status="PASS" endtime="20180716 10:07:50.102" starttime="20180716 10:07:50.075"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${Flavor_list}</var>
</assign>
<msg timestamp="20180716 10:07:50.103" level="INFO">${Flavor_list} = []</msg>
<status status="PASS" endtime="20180716 10:07:50.103" starttime="20180716 10:07:50.102"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${File}</arg>
</arguments>
<assign>
<var>@{list}</var>
</assign>
<msg timestamp="20180716 10:07:50.104" level="INFO">3 lines returned</msg>
<msg timestamp="20180716 10:07:50.104" level="INFO">@{list} = [ Ram:8192 | disk:80 | vcpus:4 ]</msg>
<status status="PASS" endtime="20180716 10:07:50.104" starttime="20180716 10:07:50.103"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${i}</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.105" starttime="20180716 10:07:50.104"></status>
</kw>
<kw type="for" name="${line} IN [ @{list} ]">
<kw type="foritem" name="${line} = Ram:8192">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>${line}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.106" starttime="20180716 10:07:50.106"></status>
</kw>
<kw name="Split String From Right" library="String">
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<arguments>
<arg>${line}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{data}</var>
</assign>
<msg timestamp="20180716 10:07:50.107" level="INFO">@{data} = [ Ram | 8192 ]</msg>
<status status="PASS" endtime="20180716 10:07:50.107" starttime="20180716 10:07:50.107"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180716 10:07:50.109" level="INFO">${Value} = 8192</msg>
<status status="PASS" endtime="20180716 10:07:50.109" starttime="20180716 10:07:50.108"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>${Value}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.110" starttime="20180716 10:07:50.109"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:50.110" starttime="20180716 10:07:50.105"></status>
</kw>
<kw type="foritem" name="${line} = disk:80">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>${line}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.111" starttime="20180716 10:07:50.110"></status>
</kw>
<kw name="Split String From Right" library="String">
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<arguments>
<arg>${line}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{data}</var>
</assign>
<msg timestamp="20180716 10:07:50.112" level="INFO">@{data} = [ disk | 80 ]</msg>
<status status="PASS" endtime="20180716 10:07:50.112" starttime="20180716 10:07:50.111"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180716 10:07:50.114" level="INFO">${Value} = 80</msg>
<status status="PASS" endtime="20180716 10:07:50.114" starttime="20180716 10:07:50.113"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>${Value}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.115" starttime="20180716 10:07:50.114"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:50.115" starttime="20180716 10:07:50.110"></status>
</kw>
<kw type="foritem" name="${line} = vcpus:4">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>${line}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.116" starttime="20180716 10:07:50.116"></status>
</kw>
<kw name="Split String From Right" library="String">
<doc>Splits the ``string`` using ``separator`` starting from right.</doc>
<arguments>
<arg>${line}</arg>
<arg>:</arg>
</arguments>
<assign>
<var>@{data}</var>
</assign>
<msg timestamp="20180716 10:07:50.117" level="INFO">@{data} = [ vcpus | 4 ]</msg>
<status status="PASS" endtime="20180716 10:07:50.117" starttime="20180716 10:07:50.116"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${data}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Value}</var>
</assign>
<msg timestamp="20180716 10:07:50.119" level="INFO">${Value} = 4</msg>
<status status="PASS" endtime="20180716 10:07:50.119" starttime="20180716 10:07:50.118"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>${Value}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:50.120" starttime="20180716 10:07:50.119"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:50.120" starttime="20180716 10:07:50.115"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:50.120" starttime="20180716 10:07:50.105"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Ram}</var>
</assign>
<msg timestamp="20180716 10:07:50.121" level="INFO">${Ram} = 8192</msg>
<status status="PASS" endtime="20180716 10:07:50.121" starttime="20180716 10:07:50.120"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${Disk}</var>
</assign>
<msg timestamp="20180716 10:07:50.122" level="INFO">${Disk} = 80</msg>
<status status="PASS" endtime="20180716 10:07:50.122" starttime="20180716 10:07:50.122"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Flavor_list}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${CPU}</var>
</assign>
<msg timestamp="20180716 10:07:50.124" level="INFO">${CPU} = 4</msg>
<status status="PASS" endtime="20180716 10:07:50.124" starttime="20180716 10:07:50.123"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Ram}</arg>
</arguments>
<msg timestamp="20180716 10:07:50.125" level="INFO">${Ram} = 8192</msg>
<status status="PASS" endtime="20180716 10:07:50.125" starttime="20180716 10:07:50.124"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Disk}</arg>
</arguments>
<msg timestamp="20180716 10:07:50.126" level="INFO">${Disk} = 80</msg>
<status status="PASS" endtime="20180716 10:07:50.127" starttime="20180716 10:07:50.125"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${CPU}</arg>
</arguments>
<msg timestamp="20180716 10:07:50.128" level="INFO">${CPU} = 4</msg>
<status status="PASS" endtime="20180716 10:07:50.128" starttime="20180716 10:07:50.127"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:50.128" starttime="20180716 10:07:50.074"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova flavor-create</arg>
<arg>${FlavourName}</arg>
<arg>auto</arg>
<arg>${Ram}</arg>
<arg>${Disk}</arg>
<arg>${CPU}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180716 10:07:50.130" level="INFO">${str} = nova flavor-create Oracle_SBC_Flavour_Template auto 8192 80 4</msg>
<status status="PASS" endtime="20180716 10:07:50.130" starttime="20180716 10:07:50.129"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180716 10:07:50.136" level="INFO">nova flavor-create Oracle_SBC_Flavour_Templ ate auto 8192 80 4</msg>
<status status="PASS" endtime="20180716 10:07:50.136" starttime="20180716 10:07:50.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:07:55.137" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:07:55.137" starttime="20180716 10:07:50.137"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:07:55.138" level="INFO">ERROR (Conflict): Flavor with name Oracle_SBC_Flavour_Template already exists. (HTTP 409) (Request-ID: req-49f2fe86-fc7a-496d-94d4-b6073e72dff8)
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:07:55.139" level="INFO">${output} = ERROR (Conflict): Flavor with name Oracle_SBC_Flavour_Template already exists. (HTTP 409) (Request-ID: req-49f2fe86-fc7a-496d-94d4-b6073e72dff8)
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180716 10:07:55.139" starttime="20180716 10:07:55.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>********************Create Flavor Complete*****************************</arg>
</arguments>
<msg timestamp="20180716 10:07:55.140" level="INFO">********************Create Flavor Complete*****************************</msg>
<status status="PASS" endtime="20180716 10:07:55.140" starttime="20180716 10:07:55.139"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:55.141" starttime="20180716 10:07:50.070"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC Flavor Creation is Successfully Completed ***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:55.142" starttime="20180716 10:07:55.141"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:55.143" starttime="20180716 10:07:50.063"></status>
</kw>
<kw name="Flavor_Validation" library="Oracle_SBC_Keywords">
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Flavor Validation Started ***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:55.146" starttime="20180716 10:07:55.144"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:55.147" starttime="20180716 10:07:55.146"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:07:55.148" starttime="20180716 10:07:55.147"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova flavor-list |grep \ -i</arg>
<arg>${FlavourName}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180716 10:07:55.149" level="INFO">${str} = nova flavor-list |grep  -i Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180716 10:07:55.149" starttime="20180716 10:07:55.148"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180716 10:07:55.155" level="INFO">nova flavor-list |grep  -i Oracle_SBC_Flavo ur_Template</msg>
<status status="PASS" endtime="20180716 10:07:55.156" starttime="20180716 10:07:55.150"></status>
</kw>
<status status="PASS" endtime="20180716 10:07:55.156" starttime="20180716 10:07:55.149"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20180716 10:08:05.157" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20180716 10:08:05.157" starttime="20180716 10:07:55.156"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:08:05.158" level="INFO">| 9c0a9e9a-647c-4582-8282-a8e91283e5fd | [01;31m[KOracle_SBC_Flavour_Template[m[K | 8192      | 80    | 0         |      | 4     | 1.0         | True      |
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:08:05.158" level="INFO">${output} = | 9c0a9e9a-647c-4582-8282-a8e91283e5fd | [01;31m[KOracle_SBC_Flavour_Template[m[K | 8192      | 80    | 0         |      | 4     | 1.0         | True      |
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180716 10:08:05.158" starttime="20180716 10:08:05.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${FlavourName}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.158" starttime="20180716 10:08:05.158"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Flavor_Validation is Successfully Completed ***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.159" starttime="20180716 10:08:05.159"></status>
</kw>
<status status="PASS" endtime="20180716 10:08:05.159" starttime="20180716 10:07:55.144"></status>
</kw>
<kw name="SBC_CreateImage" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.161" starttime="20180716 10:08:05.161"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.162" starttime="20180716 10:08:05.161"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>**************Push Image started***********</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.163" starttime="20180716 10:08:05.163"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>PushimagefiletoServer</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.164" starttime="20180716 10:08:05.163"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>log</arg>
<arg>**************Push Image Completed***********</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.164" starttime="20180716 10:08:05.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>**************Image Create Started ***********</arg>
</arguments>
<msg timestamp="20180716 10:08:05.164" level="INFO">**************Image Create Started ***********</msg>
<status status="PASS" endtime="20180716 10:08:05.165" starttime="20180716 10:08:05.164"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Image Create Started ***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.165" starttime="20180716 10:08:05.165"></status>
</kw>
<kw name="GlanceImageUpload" library="Genric_Keywords">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>******************Create Image on Glance Started*******************</arg>
</arguments>
<msg timestamp="20180716 10:08:05.167" level="INFO">******************Create Image on Glance Started*******************</msg>
<status status="PASS" endtime="20180716 10:08:05.167" starttime="20180716 10:08:05.166"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Switch Connection</arg>
<arg>${Index}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.167" starttime="20180716 10:08:05.167"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${IN}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.168" starttime="20180716 10:08:05.167"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${DF}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.168" starttime="20180716 10:08:05.168"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${IFP}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.168" starttime="20180716 10:08:05.168"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${CF}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.169" starttime="20180716 10:08:05.169"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${FP}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.169" starttime="20180716 10:08:05.169"></status>
</kw>
<kw name="Getimagename" library="Library">
<arguments>
<arg>${ImageFilePath}</arg>
<arg>${ImageFileName}</arg>
</arguments>
<assign>
<var>${remotepathwithimagename}</var>
</assign>
<msg timestamp="20180716 10:08:05.170" level="INFO">${remotepathwithimagename} = /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:08:05.170" starttime="20180716 10:08:05.169"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${dstImage}</arg>
<arg>Catenate</arg>
<arg>SEPERATOR=/</arg>
<arg>/root/auto_heatfiles</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.171" starttime="20180716 10:08:05.170"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${IN}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:05.171" starttime="20180716 10:08:05.171"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>glance image-create --name</arg>
<arg>${ImageName}</arg>
</arguments>
<assign>
<var>${str1}</var>
</assign>
<msg timestamp="20180716 10:08:05.171" level="INFO">${str1} = glance image-create --name sdfasdf</msg>
<status status="PASS" endtime="20180716 10:08:05.172" starttime="20180716 10:08:05.171"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--disk-format</arg>
<arg>${DiskFormat}</arg>
</arguments>
<assign>
<var>${str2}</var>
</assign>
<msg timestamp="20180716 10:08:05.172" level="INFO">${str2} = --disk-format qcow2</msg>
<status status="PASS" endtime="20180716 10:08:05.172" starttime="20180716 10:08:05.172"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--file</arg>
<arg>${remotepathwithimagename}</arg>
</arguments>
<assign>
<var>${str3}</var>
</assign>
<msg timestamp="20180716 10:08:05.173" level="INFO">${str3} = --file /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:08:05.173" starttime="20180716 10:08:05.172"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--container-format</arg>
<arg>${ConatinerFormat}</arg>
</arguments>
<assign>
<var>${str4}</var>
</assign>
<msg timestamp="20180716 10:08:05.173" level="INFO">${str4} = --container-format bare</msg>
<status status="PASS" endtime="20180716 10:08:05.173" starttime="20180716 10:08:05.173"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>${str1}</arg>
<arg>${str2}</arg>
<arg>${str4}</arg>
<arg>${str3}</arg>
</arguments>
<assign>
<var>${str5}</var>
</assign>
<msg timestamp="20180716 10:08:05.174" level="INFO">${str5} = glance image-create --name sdfasdf --disk-format qcow2 --container-format bare --file /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:08:05.174" starttime="20180716 10:08:05.174"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str5}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str5}</arg>
</arguments>
<msg timestamp="20180716 10:08:05.180" level="INFO">glance image-create --name sdfasdf --disk-f ormat qcow2 --container-format bare --file /root/auto_heatfiles/nnSCZ739p1-img-v m_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:08:05.180" starttime="20180716 10:08:05.175"></status>
</kw>
<status status="PASS" endtime="20180716 10:08:05.180" starttime="20180716 10:08:05.174"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15</arg>
</arguments>
<msg timestamp="20180716 10:08:20.181" level="INFO">Slept 15 seconds</msg>
<status status="PASS" endtime="20180716 10:08:20.181" starttime="20180716 10:08:05.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>******************Create Image on Glance completed*******************</arg>
</arguments>
<msg timestamp="20180716 10:08:20.181" level="INFO">******************Create Image on Glance completed*******************</msg>
<status status="PASS" endtime="20180716 10:08:20.182" starttime="20180716 10:08:20.181"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:08:20.182" level="INFO">+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | 9c12c518d6358b2826b30d82597d4feb     |
| container_format | bare                                 |
| created_at       | 2018-07-16T04:37:00Z                 |
| disk_format      | qcow2                                |
| id               | 69ea7d34-f9e4-428c-a2a1-6b38d3cc5ce8 |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | sdfasdf                              |
| owner            | 8f6857039a224ab1b596bfd42147dc88     |
| protected        | False                                |
| size             | 93847552                             |
| status           | active                               |
| tags             | []                                   |
| updated_at       | 2018-07-16T04:37:00Z                 |
| virtual_size     | None                                 |
| visibility       | private                              |
+------------------+--------------------------------------+
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:08:20.182" level="INFO">${output} = +------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum       ...</msg>
<status status="PASS" endtime="20180716 10:08:20.182" starttime="20180716 10:08:20.182"></status>
</kw>
<status status="PASS" endtime="20180716 10:08:20.182" starttime="20180716 10:08:05.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>**************Image Create Completed ***********</arg>
</arguments>
<msg timestamp="20180716 10:08:20.183" level="INFO">**************Image Create Completed ***********</msg>
<status status="PASS" endtime="20180716 10:08:20.183" starttime="20180716 10:08:20.183"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC_CreateImage Done***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:20.184" starttime="20180716 10:08:20.183"></status>
</kw>
<status status="PASS" endtime="20180716 10:08:20.184" starttime="20180716 10:08:05.160"></status>
</kw>
<kw name="Image_Validation" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:20.185" starttime="20180716 10:08:20.185"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:20.185" starttime="20180716 10:08:20.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************************Image Validation Started**********************</arg>
</arguments>
<msg timestamp="20180716 10:08:20.186" level="INFO">*****************************Image Validation Started**********************</msg>
<status status="PASS" endtime="20180716 10:08:20.186" starttime="20180716 10:08:20.186"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Print Logger</arg>
<arg>*****************************Uploading of qcow2 Image to Glance**********************</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:20.186" starttime="20180716 10:08:20.186"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Image Validation Started***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:20.187" starttime="20180716 10:08:20.187"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova image-list |grep \ -i</arg>
<arg>${ImageName}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180716 10:08:20.188" level="INFO">${str} = nova image-list |grep  -i sdfasdf</msg>
<status status="PASS" endtime="20180716 10:08:20.188" starttime="20180716 10:08:20.187"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180716 10:08:20.191" level="INFO">nova image-list |grep  -i sdfasdf</msg>
<status status="PASS" endtime="20180716 10:08:20.191" starttime="20180716 10:08:20.188"></status>
</kw>
<status status="PASS" endtime="20180716 10:08:20.192" starttime="20180716 10:08:20.188"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:08:25.192" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:08:25.192" starttime="20180716 10:08:20.192"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:08:25.192" level="INFO">| 69ea7d34-f9e4-428c-a2a1-6b38d3cc5ce8 | [01;31m[Ksdfasdf[m[K                                         | ACTIVE |                                      |
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:08:25.193" level="INFO">${output} = | 69ea7d34-f9e4-428c-a2a1-6b38d3cc5ce8 | [01;31m[Ksdfasdf[m[K                                         | ACTIVE |                                      |
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180716 10:08:25.193" starttime="20180716 10:08:25.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${ImageName}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.193" starttime="20180716 10:08:25.193"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Print Logger</arg>
<arg>*******SBC VNF image Qcow2 is uploaded &amp; validated for checksum*******</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.194" starttime="20180716 10:08:25.193"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***Image_Validation Done***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.216" starttime="20180716 10:08:25.194"></status>
</kw>
<status status="PASS" endtime="20180716 10:08:25.216" starttime="20180716 10:08:20.184"></status>
</kw>
<kw name="SBC_OnboardVM" library="Oracle_SBC_Keywords">
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{Server}</arg>
<arg>ImportDetails</arg>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.217" starttime="20180716 10:08:25.217"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Server_Login</arg>
<arg>@{Server}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.218" starttime="20180716 10:08:25.218"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>***SBC VM creation is in progress ***</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.219" starttime="20180716 10:08:25.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*************VM Create Started ***********</arg>
</arguments>
<msg timestamp="20180716 10:08:25.219" level="INFO">*************VM Create Started ***********</msg>
<status status="PASS" endtime="20180716 10:08:25.219" starttime="20180716 10:08:25.219"></status>
</kw>
<kw name="VMCreation" library="Genric_Keywords">
<arguments>
<arg>${Label}</arg>
<arg>${NicSBC}</arg>
</arguments>
<kw name="Getimagename" library="Library">
<arguments>
<arg>${ImageFilePath}</arg>
<arg>${ImageFileName}</arg>
</arguments>
<assign>
<var>${remotepathwithimagename}</var>
</assign>
<msg timestamp="20180716 10:08:25.221" level="INFO">${remotepathwithimagename} = /root/auto_heatfiles/nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:08:25.221" starttime="20180716 10:08:25.220"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>write</arg>
<arg>neutron net-list | head -6 | tail -3 | awk -F "|" '{print $2}' &gt;&gt; nicID.txt</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.221" starttime="20180716 10:08:25.221"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Get File</arg>
<arg>/root/nicID.txt</arg>
<arg>C://Users//Admin//Desktop//Sukesh-Automation//RobotFramework//Genric_Script//Python_Script//</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.222" starttime="20180716 10:08:25.221"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Switch Connection</arg>
<arg>${Index}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.222" starttime="20180716 10:08:25.222"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{FlvrParam}</arg>
<arg>Parseconfdata</arg>
<arg>${FlavorP}</arg>
<arg>${Label}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.222" starttime="20180716 10:08:25.222"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${FlavourName}</arg>
<arg>Get From List</arg>
<arg>${FlvrParam}</arg>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.223" starttime="20180716 10:08:25.223"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--flavor</arg>
<arg>${FlavourName}</arg>
</arguments>
<assign>
<var>${flavor}</var>
</assign>
<msg timestamp="20180716 10:08:25.223" level="INFO">${flavor} = --flavor Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180716 10:08:25.224" starttime="20180716 10:08:25.223"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--availability_zone</arg>
<arg>${AvZone}</arg>
</arguments>
<assign>
<var>${AvailZone}</var>
</assign>
<msg timestamp="20180716 10:08:25.224" level="INFO">${AvailZone} = --availability_zone nova:compute1</msg>
<status status="PASS" endtime="20180716 10:08:25.224" starttime="20180716 10:08:25.224"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>--security-groups</arg>
<arg>${Security}</arg>
</arguments>
<assign>
<var>${SecurityPol}</var>
</assign>
<msg timestamp="20180716 10:08:25.225" level="INFO">${SecurityPol} = --security-groups default</msg>
<status status="PASS" endtime="20180716 10:08:25.225" starttime="20180716 10:08:25.224"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${image}</arg>
<arg>Catenate</arg>
<arg>--image</arg>
<arg>${IN}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:08:25.225" starttime="20180716 10:08:25.225"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>nova boot</arg>
<arg>${flavor}</arg>
<arg>--image</arg>
<arg>${ImageName}</arg>
<arg>${AvailZone}</arg>
<arg>${SecurityPol}</arg>
<arg>${Nic}</arg>
<arg>--config-drive=true</arg>
<arg>${VNFName}</arg>
</arguments>
<assign>
<var>${str}</var>
</assign>
<msg timestamp="20180716 10:08:25.227" level="INFO">${str} = nova boot --flavor Oracle_SBC_Flavour_Template --image sdfasdf --availability_zone nova:compute1 --security-groups default --nic net-id=3f4a053f-3b05-4388-8e4a-8e47bcd757fb  --nic net-id=78d1ec17-397d...</msg>
<status status="PASS" endtime="20180716 10:08:25.227" starttime="20180716 10:08:25.226"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:08:30.227" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:08:30.227" starttime="20180716 10:08:25.227"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>${str}</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${str}</arg>
</arguments>
<msg timestamp="20180716 10:08:30.251" level="INFO">nova boot --flavor Oracle_SBC_Flavour_Templ ate --image sdfasdf --availability_zone nova:compute1 --security-groups default  --nic net-id=3f4a053f-3b05-4388-8e4a-8e47bcd757fb  --nic net-id=78d1ec17-397d-45 5c-9d4d-3e79116d6337  --nic net-id=78d1ec17-397d-455c-9d4d-3e79116d6337 --config -drive=true Testit</msg>
<status status="PASS" endtime="20180716 10:08:30.251" starttime="20180716 10:08:30.231"></status>
</kw>
<status status="PASS" endtime="20180716 10:08:30.251" starttime="20180716 10:08:30.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40</arg>
</arguments>
<msg timestamp="20180716 10:09:10.252" level="INFO">Slept 40 seconds</msg>
<status status="PASS" endtime="20180716 10:09:10.252" starttime="20180716 10:08:30.252"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:09:10.252" level="INFO">+--------------------------------------+--------------------------------------------------------------------+
| Property                             | Value                                                              |
+--------------------------------------+--------------------------------------------------------------------+
| OS-DCF:diskConfig                    | MANUAL                                                             |
| OS-EXT-AZ:availability_zone          | nova                                                               |
| OS-EXT-SRV-ATTR:host                 | -                                                                  |
| OS-EXT-SRV-ATTR:hypervisor_hostname  | -                                                                  |
| OS-EXT-SRV-ATTR:instance_name        | instance-00001421                                                  |
| OS-EXT-STS:power_state               | 0                                                                  |
| OS-EXT-STS:task_state                | scheduling                                                         |
| OS-EXT-STS:vm_state                  | building                                                           |
| OS-SRV-USG:launched_at               | -                                                                  |
| OS-SRV-USG:terminated_at             | -                                                                  |
| accessIPv4                           |                                                                    |
| accessIPv6                           |                                                                    |
| adminPass                            | 7kNCqPzfTE9h                                                       |
| config_drive                         | True                                                               |
| created                              | 2018-07-16T04:37:27Z                                               |
| flavor                               | Oracle_SBC_Flavour_Template (9c0a9e9a-647c-4582-8282-a8e91283e5fd) |
| hostId                               |                                                                    |
| id                                   | 94aa9c17-b923-4100-a3f0-4decbbb0d2cb                               |
| image                                | sdfasdf (69ea7d34-f9e4-428c-a2a1-6b38d3cc5ce8)                     |
| key_name                             | -                                                                  |
| metadata                             | {}                                                                 |
| name                                 | Testit                                                             |
| os-extended-volumes:volumes_attached | []                                                                 |
| progress                             | 0                                                                  |
| security_groups                      | default                                                            |
| status                               | BUILD                                                              |
| tenant_id                            | 8f6857039a224ab1b596bfd42147dc88                                   |
| updated                              | 2018-07-16T04:37:27Z                                               |
| user_id                              | 26917d95d4584829a3db1f86c252a709                                   |
+--------------------------------------+--------------------------------------------------------------------+
[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:09:10.253" level="INFO">${output} = +--------------------------------------+--------------------------------------------------------------------+
| Property                             | Value                                           ...</msg>
<status status="PASS" endtime="20180716 10:09:10.253" starttime="20180716 10:09:10.252"></status>
</kw>
<status status="PASS" endtime="20180716 10:09:10.253" starttime="20180716 10:08:25.220"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20180716 10:10:10.261" level="INFO">Slept 1 minute</msg>
<status status="PASS" endtime="20180716 10:10:10.261" starttime="20180716 10:09:10.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>********Reboot Process In Progress Bringing up the VM *************</arg>
</arguments>
<msg timestamp="20180716 10:10:10.261" level="INFO">********Reboot Process In Progress Bringing up the VM *************</msg>
<status status="PASS" endtime="20180716 10:10:10.261" starttime="20180716 10:10:10.261"></status>
</kw>
<kw name="Reboot_loop" library="Oracle_SBC_Keywords">
<kw name="Get_SBC-IP" library="Oracle_SBC_Keywords">
<kw name="ImportDetails" library="Genric_Keywords">
<arguments>
<arg>C:\\xampp\\htdocs\\VNFXchange\\Genric_Script\\Config\\Enterprise_Config.txt</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Server}</var>
</assign>
<kw name="Parseconfdata" library="Library">
<arguments>
<arg>${ConfigPath}</arg>
<arg>${Label}</arg>
</arguments>
<assign>
<var>@{Param}</var>
</assign>
<msg timestamp="20180716 10:10:10.261" level="INFO">@{Param} = [ "RedHat" | Testit | sdfasdf | qcow2 | /root/auto_heatfiles | bare | C:\xampp\htdocs\VNFXchange | nova:compute1 | default | TCP | Ingress | ipv4 | Oracle_SBC_Flavour_Template.txt | nnSCZ739p1-img-vm_...</msg>
<status status="PASS" endtime="20180716 10:10:10.261" starttime="20180716 10:10:10.261"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${server}</var>
</assign>
<msg timestamp="20180716 10:10:10.261" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180716 10:10:10.261" starttime="20180716 10:10:10.261"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${VNFName}</var>
</assign>
<msg timestamp="20180716 10:10:10.276" level="INFO">${VNFName} = Testit</msg>
<status status="PASS" endtime="20180716 10:10:10.276" starttime="20180716 10:10:10.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${ImageName}</var>
</assign>
<msg timestamp="20180716 10:10:10.276" level="INFO">${ImageName} = sdfasdf</msg>
<status status="PASS" endtime="20180716 10:10:10.276" starttime="20180716 10:10:10.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${DiskFormat}</var>
</assign>
<msg timestamp="20180716 10:10:10.276" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180716 10:10:10.276" starttime="20180716 10:10:10.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>4</arg>
</arguments>
<assign>
<var>${ImageFilePath}</var>
</assign>
<msg timestamp="20180716 10:10:10.276" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180716 10:10:10.276" starttime="20180716 10:10:10.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>5</arg>
</arguments>
<assign>
<var>${ConatinerFormat}</var>
</assign>
<msg timestamp="20180716 10:10:10.276" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180716 10:10:10.276" starttime="20180716 10:10:10.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>6</arg>
</arguments>
<assign>
<var>${FlavorP}</var>
</assign>
<msg timestamp="20180716 10:10:10.276" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180716 10:10:10.276" starttime="20180716 10:10:10.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${AvZone}</var>
</assign>
<msg timestamp="20180716 10:10:10.292" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180716 10:10:10.292" starttime="20180716 10:10:10.276"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${Security}</var>
</assign>
<msg timestamp="20180716 10:10:10.292" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180716 10:10:10.292" starttime="20180716 10:10:10.292"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>9</arg>
</arguments>
<assign>
<var>${Protocol}</var>
</assign>
<msg timestamp="20180716 10:10:10.292" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180716 10:10:10.292" starttime="20180716 10:10:10.292"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>10</arg>
</arguments>
<assign>
<var>${Direction}</var>
</assign>
<msg timestamp="20180716 10:10:10.292" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180716 10:10:10.292" starttime="20180716 10:10:10.292"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>11</arg>
</arguments>
<assign>
<var>${Ethertype}</var>
</assign>
<msg timestamp="20180716 10:10:10.292" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180716 10:10:10.292" starttime="20180716 10:10:10.292"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<assign>
<var>${FN}</var>
</assign>
<msg timestamp="20180716 10:10:10.292" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180716 10:10:10.292" starttime="20180716 10:10:10.292"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<assign>
<var>${ImageFileName}</var>
</assign>
<msg timestamp="20180716 10:10:10.292" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:10:10.292" starttime="20180716 10:10:10.292"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic1}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:10.308" starttime="20180716 10:10:10.308"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic2}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:10.308" starttime="20180716 10:10:10.308"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${Nic3}</arg>
<arg>Get From List</arg>
<arg>${Param}</arg>
<arg>14</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:10.308" starttime="20180716 10:10:10.308"></status>
</kw>
<kw name="Split Extension" library="OperatingSystem">
<doc>Splits the extension from the given path.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<assign>
<var>${FlavourName}</var>
<var>${Ext}</var>
</assign>
<msg timestamp="20180716 10:10:10.308" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<msg timestamp="20180716 10:10:10.308" level="INFO">${Ext} = txt</msg>
<status status="PASS" endtime="20180716 10:10:10.308" starttime="20180716 10:10:10.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFileName}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.308" level="INFO">${ImageFileName} = nnSCZ739p1-img-vm_kvm.qcow2</msg>
<status status="PASS" endtime="20180716 10:10:10.308" starttime="20180716 10:10:10.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FN}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.308" level="INFO">${FN} = Oracle_SBC_Flavour_Template.txt</msg>
<status status="PASS" endtime="20180716 10:10:10.308" starttime="20180716 10:10:10.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavourName}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.308" level="INFO">${FlavourName} = Oracle_SBC_Flavour_Template</msg>
<status status="PASS" endtime="20180716 10:10:10.308" starttime="20180716 10:10:10.308"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${VNFName} = Testit</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${server}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${server} = "RedHat"</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageName}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${ImageName} = sdfasdf</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${DiskFormat}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${DiskFormat} = qcow2</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ImageFilePath}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${ImageFilePath} = /root/auto_heatfiles</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${ConatinerFormat}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${ConatinerFormat} = bare</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${FlavorP}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${FlavorP} = C:\xampp\htdocs\VNFXchange</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${AvZone}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${AvZone} = nova:compute1</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Security}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${Security} = default</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Protocol}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${Protocol} = TCP</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Direction}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${Direction} = Ingress</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Ethertype}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${Ethertype} = ipv4</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic1}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic2}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${VNFName}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.323" level="INFO">${VNFName} = Testit</msg>
<status status="PASS" endtime="20180716 10:10:10.323" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Set Global Variable</arg>
<arg>${Nic3}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${server}=="RedHat"</arg>
<arg>Return From Keyword</arg>
<arg>@{RedHat}</arg>
</arguments>
<kw name="Return From Keyword" library="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<arguments>
<arg>@{RedHat}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.339"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.339"></status>
</kw>
<msg timestamp="20180716 10:10:10.339" level="INFO">@{Server} = [ 10.53.214.10 | root | techm123 ]</msg>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.261"></status>
</kw>
<kw name="Server_Login" library="Genric_Keywords">
<arguments>
<arg>@{Server}</arg>
</arguments>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${HOST}</var>
</assign>
<msg timestamp="20180716 10:10:10.339" level="INFO">${HOST} = 10.53.214.10</msg>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.339"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${USERNAME}</var>
</assign>
<msg timestamp="20180716 10:10:10.339" level="INFO">${USERNAME} = root</msg>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.339"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${Server}</arg>
<arg>2</arg>
</arguments>
<assign>
<var>${PASSWORD}</var>
</assign>
<msg timestamp="20180716 10:10:10.339" level="INFO">${PASSWORD} = techm123</msg>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.339"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 4 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${HOST}</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20180716 10:10:10.339" level="INFO">${Index} = 2</msg>
<status status="PASS" endtime="20180716 10:10:10.339" starttime="20180716 10:10:10.339"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Login</arg>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180716 10:10:10.339" level="INFO">Logging into '10.53.214.10:22' as 'root'.</msg>
<msg timestamp="20180716 10:10:31.461" level="INFO">Read output: Last login: Mon Jul 16 00:36:39 2018 from 10.53.172.9
[root@controller ~]#</msg>
<status status="PASS" endtime="20180716 10:10:31.462" starttime="20180716 10:10:10.339"></status>
</kw>
<msg timestamp="20180716 10:10:31.462" level="INFO">${status} = True</msg>
<status status="PASS" endtime="20180716 10:10:31.463" starttime="20180716 10:10:10.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:31.465" starttime="20180716 10:10:31.464"></status>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20180716 10:10:31.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" endtime="20180716 10:10:31.467" starttime="20180716 10:10:31.466"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:31.467" starttime="20180716 10:10:10.339"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:31.467" starttime="20180716 10:10:10.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation**********************</arg>
</arguments>
<msg timestamp="20180716 10:10:31.469" level="INFO">*****************ServerLogin_Validation**********************</msg>
<status status="PASS" endtime="20180716 10:10:31.469" starttime="20180716 10:10:31.468"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>ifconfig | grep inet</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>ifconfig | grep inet</arg>
</arguments>
<msg timestamp="20180716 10:10:31.474" level="INFO">ifconfig | grep inet</msg>
<status status="PASS" endtime="20180716 10:10:31.474" starttime="20180716 10:10:31.472"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:31.474" starttime="20180716 10:10:31.470"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20180716 10:10:35.474" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20180716 10:10:35.474" starttime="20180716 10:10:31.474"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:10:35.474" level="INFO">[01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 172.18.113.11  netmask 255.255.255.0  broadcast 172.18.113.255
        [01;31m[Kinet[m[K6 fe80::8006:74ff:fe4f:e843  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.80.1.8  netmask 255.255.255.0  broadcast 10.80.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.81.1.8  netmask 255.255.255.0  broadcast 10.81.1.255
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3ca  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 10.53.214.10  netmask 255.255.255.0  broadcast 10.53.214.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cc  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 127.0.0.1  netmask 255.0.0.0
        [01;31m[Kinet[m[K6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b14  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K6 fe80::a236:9fff:fe78:4b16  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[Kinet[m[K 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
[root@controller ~]#</msg>
<msg timestamp="20180716 10:10:35.474" level="INFO">${output} =         [01;31m[Kinet[m[K 172.18.0.60  netmask 255.255.255.0  broadcast 172.18.0.255
        [01;31m[Kinet[m[K6 fe80::eef4:bbff:fedb:a3cd  prefixlen 64  scopeid 0x20&lt;link&gt;
        [01;31m[...</msg>
<status status="PASS" endtime="20180716 10:10:35.475" starttime="20180716 10:10:35.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>${HOST}</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:35.475" starttime="20180716 10:10:35.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>*****************ServerLogin_Validation Completed**********************</arg>
</arguments>
<msg timestamp="20180716 10:10:35.475" level="INFO">*****************ServerLogin_Validation Completed**********************</msg>
<status status="PASS" endtime="20180716 10:10:35.476" starttime="20180716 10:10:35.475"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>20s</arg>
<arg>2</arg>
<arg>write</arg>
<arg>source keystonerc_admin</arg>
</arguments>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>source keystonerc_admin</arg>
</arguments>
<msg timestamp="20180716 10:10:35.478" level="INFO">source keystonerc_admin</msg>
<status status="PASS" endtime="20180716 10:10:35.478" starttime="20180716 10:10:35.476"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:35.478" starttime="20180716 10:10:35.476"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:10:35.479" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:10:35.479" level="INFO">${output} = [root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180716 10:10:35.479" starttime="20180716 10:10:35.479"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:35.479" starttime="20180716 10:10:10.339"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>rm -rf value.txt</arg>
</arguments>
<msg timestamp="20180716 10:10:35.481" level="INFO">rm -rf value.txt</msg>
<status status="PASS" endtime="20180716 10:10:35.481" starttime="20180716 10:10:35.479"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>nova list | grep -i ${VNFName}|awk -F "=" '{print $2}'|awk -F "," '{print $2}'|awk -F ";" '{print $1}'</arg>
</arguments>
<msg timestamp="20180716 10:10:35.485" level="INFO">[root@controller ~(keystone_admin)]# nova list | grep -i Testit|awk -F "=" '{pri nt $2}'|awk -F "," '{print $2}'|awk -F ";" '{print $1}'</msg>
<status status="PASS" endtime="20180716 10:10:35.485" starttime="20180716 10:10:35.481"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>4</arg>
</arguments>
<msg timestamp="20180716 10:10:39.489" level="INFO">Slept 4 seconds</msg>
<status status="PASS" endtime="20180716 10:10:39.489" starttime="20180716 10:10:35.485"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:10:39.489" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:10:39.489" level="INFO">${output} = 
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180716 10:10:39.489" starttime="20180716 10:10:39.489"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:10:39.489" level="INFO">${output} = [u'[root@controller', u'~(keystone_admin)]#']</msg>
<status status="PASS" endtime="20180716 10:10:39.489" starttime="20180716 10:10:39.489"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${output}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${Proxy_IP}</var>
</assign>
<msg timestamp="20180716 10:10:39.489" level="INFO">${Proxy_IP} = [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:39.489" starttime="20180716 10:10:39.489"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Proxy_IP}</arg>
</arguments>
<msg timestamp="20180716 10:10:39.489" level="INFO">${Proxy_IP} = [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:39.489" starttime="20180716 10:10:39.489"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>nova list | grep -i ${VNFName}| awk -F ";" '{print $2}' | awk -F "=" '{print $2}'| awk -F " \ " '{print $1}'</arg>
</arguments>
<msg timestamp="20180716 10:10:39.505" level="INFO">nova list | grep -i Testit| awk -F ";" '{pr int $2}' | awk -F "=" '{print $2}'| awk -F "  " '{print $1}'</msg>
<status status="PASS" endtime="20180716 10:10:39.505" starttime="20180716 10:10:39.489"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:10:44.520" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:10:44.520" starttime="20180716 10:10:39.505"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:10:44.520" level="INFO">[root@controller ~(keystone_admin)]#</msg>
<msg timestamp="20180716 10:10:44.520" level="INFO">${output} = 
[root@controller ~(keystone_admin)]# </msg>
<status status="PASS" endtime="20180716 10:10:44.520" starttime="20180716 10:10:44.520"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180716 10:10:44.520" level="INFO">${output} = [u'[root@controller', u'~(keystone_admin)]#']</msg>
<status status="PASS" endtime="20180716 10:10:44.520" starttime="20180716 10:10:44.520"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${output}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${MGmt_IP}</var>
</assign>
<msg timestamp="20180716 10:10:44.520" level="INFO">${MGmt_IP} = [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:44.520" starttime="20180716 10:10:44.520"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${MGmt_IP}</arg>
</arguments>
<msg timestamp="20180716 10:10:44.520" level="INFO">${MGmt_IP} = [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:44.520" starttime="20180716 10:10:44.520"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:44.520" starttime="20180716 10:10:10.261"></status>
</kw>
<kw name="Print Logger" library="Library">
<arguments>
<arg>Rebooting Server...............!</arg>
</arguments>
<status status="PASS" endtime="20180716 10:10:44.520" starttime="20180716 10:10:44.520"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3</arg>
</arguments>
<msg timestamp="20180716 10:10:47.536" level="INFO">Slept 3 seconds</msg>
<status status="PASS" endtime="20180716 10:10:47.536" starttime="20180716 10:10:44.520"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>clear</arg>
</arguments>
<msg timestamp="20180716 10:10:47.536" level="INFO">clear</msg>
<status status="PASS" endtime="20180716 10:10:47.536" starttime="20180716 10:10:47.536"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${i}</var>
</assign>
<msg timestamp="20180716 10:10:47.536" level="INFO">${i} = 0</msg>
<status status="PASS" endtime="20180716 10:10:47.536" starttime="20180716 10:10:47.536"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ 0 | 250 ]">
<kw type="foritem" name="${i} = 0">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:10:47.551" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:47.551" starttime="20180716 10:10:47.551"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:10:47.551" level="INFO">[H[J[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:47.551" starttime="20180716 10:10:47.551"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:10:52.552" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:10:52.552" starttime="20180716 10:10:47.551"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:10:52.552" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:10:52.552" starttime="20180716 10:10:52.552"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:10:52.552" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:10:52.552" starttime="20180716 10:10:52.552"></status>
</kw>
<msg timestamp="20180716 10:10:52.552" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:10:52.552" starttime="20180716 10:10:52.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:10:52.552" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:10:52.552" starttime="20180716 10:10:52.552"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:52.552" starttime="20180716 10:10:52.552"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:52.552" starttime="20180716 10:10:47.536"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:10:52.552" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:52.552" starttime="20180716 10:10:52.552"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:10:52.567" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:52.567" starttime="20180716 10:10:52.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:10:57.570" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:10:57.570" starttime="20180716 10:10:52.567"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:10:57.570" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:10:57.570" starttime="20180716 10:10:57.570"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:10:57.570" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:10:57.570" starttime="20180716 10:10:57.570"></status>
</kw>
<msg timestamp="20180716 10:10:57.570" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:10:57.570" starttime="20180716 10:10:57.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:10:57.570" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:10:57.570" starttime="20180716 10:10:57.570"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:57.570" starttime="20180716 10:10:57.570"></status>
</kw>
<status status="PASS" endtime="20180716 10:10:57.570" starttime="20180716 10:10:52.552"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:10:57.570" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:57.570" starttime="20180716 10:10:57.570"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:10:57.585" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:10:57.585" starttime="20180716 10:10:57.585"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:02.600" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:02.601" starttime="20180716 10:10:57.585"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:02.602" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:02.602" starttime="20180716 10:11:02.602"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:02.602" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:02.602" starttime="20180716 10:11:02.602"></status>
</kw>
<msg timestamp="20180716 10:11:02.602" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:02.602" starttime="20180716 10:11:02.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:02.602" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:02.602" starttime="20180716 10:11:02.602"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:02.602" starttime="20180716 10:11:02.602"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:02.602" starttime="20180716 10:10:57.570"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:02.602" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:02.602" starttime="20180716 10:11:02.602"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:02.617" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:02.617" starttime="20180716 10:11:02.602"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:07.629" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:07.629" starttime="20180716 10:11:02.617"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:07.629" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:11:07.629" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:11:07.629" starttime="20180716 10:11:07.629"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:07.629" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:07.629" starttime="20180716 10:11:07.629"></status>
</kw>
<msg timestamp="20180716 10:11:07.629" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:07.629" starttime="20180716 10:11:07.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:07.629" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:07.629" starttime="20180716 10:11:07.629"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:07.629" starttime="20180716 10:11:07.629"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:07.629" starttime="20180716 10:11:02.602"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:07.645" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:07.645" starttime="20180716 10:11:07.629"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:07.645" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:07.645" starttime="20180716 10:11:07.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:12.654" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:12.654" starttime="20180716 10:11:07.645"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:12.654" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:12.654" starttime="20180716 10:11:12.654"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:12.654" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:12.654" starttime="20180716 10:11:12.654"></status>
</kw>
<msg timestamp="20180716 10:11:12.654" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:12.654" starttime="20180716 10:11:12.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:12.654" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:12.654" starttime="20180716 10:11:12.654"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:12.654" starttime="20180716 10:11:12.654"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:12.654" starttime="20180716 10:11:07.629"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:12.654" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:12.669" starttime="20180716 10:11:12.654"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:12.669" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:12.669" starttime="20180716 10:11:12.669"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:17.678" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:17.678" starttime="20180716 10:11:12.669"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:17.678" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:17.678" starttime="20180716 10:11:17.678"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:17.678" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:17.678" starttime="20180716 10:11:17.678"></status>
</kw>
<msg timestamp="20180716 10:11:17.678" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:17.678" starttime="20180716 10:11:17.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:17.678" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:17.678" starttime="20180716 10:11:17.678"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:17.678" starttime="20180716 10:11:17.678"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:17.678" starttime="20180716 10:11:12.654"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:17.678" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:17.678" starttime="20180716 10:11:17.678"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:17.695" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:17.695" starttime="20180716 10:11:17.678"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:22.696" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:22.696" starttime="20180716 10:11:17.696"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:22.696" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:22.696" starttime="20180716 10:11:22.696"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:22.696" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:22.696" starttime="20180716 10:11:22.696"></status>
</kw>
<msg timestamp="20180716 10:11:22.696" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:22.696" starttime="20180716 10:11:22.696"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:22.696" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:22.696" starttime="20180716 10:11:22.696"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:22.696" starttime="20180716 10:11:22.696"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:22.696" starttime="20180716 10:11:17.678"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:22.696" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:22.696" starttime="20180716 10:11:22.696"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:22.711" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:22.711" starttime="20180716 10:11:22.696"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:27.713" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:27.713" starttime="20180716 10:11:22.711"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:27.713" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:11:27.713" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:11:27.713" starttime="20180716 10:11:27.713"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:27.713" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:27.713" starttime="20180716 10:11:27.713"></status>
</kw>
<msg timestamp="20180716 10:11:27.713" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:27.713" starttime="20180716 10:11:27.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:27.713" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:27.713" starttime="20180716 10:11:27.713"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:27.713" starttime="20180716 10:11:27.713"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:27.713" starttime="20180716 10:11:22.696"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:27.728" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:27.728" starttime="20180716 10:11:27.713"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:27.728" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:27.728" starttime="20180716 10:11:27.728"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:32.741" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:32.741" starttime="20180716 10:11:27.728"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:32.741" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:32.741" starttime="20180716 10:11:32.741"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:32.741" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:32.741" starttime="20180716 10:11:32.741"></status>
</kw>
<msg timestamp="20180716 10:11:32.741" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:32.741" starttime="20180716 10:11:32.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:32.741" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:32.741" starttime="20180716 10:11:32.741"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:32.741" starttime="20180716 10:11:32.741"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:32.741" starttime="20180716 10:11:27.713"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:32.741" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:32.741" starttime="20180716 10:11:32.741"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:32.757" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:32.757" starttime="20180716 10:11:32.741"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:37.757" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:37.757" starttime="20180716 10:11:32.757"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:37.759" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:37.759" starttime="20180716 10:11:37.758"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:37.763" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:37.764" starttime="20180716 10:11:37.762"></status>
</kw>
<msg timestamp="20180716 10:11:37.764" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:37.764" starttime="20180716 10:11:37.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:37.767" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:37.768" starttime="20180716 10:11:37.767"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:37.768" starttime="20180716 10:11:37.765"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:37.768" starttime="20180716 10:11:32.741"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:37.771" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:37.771" starttime="20180716 10:11:37.769"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:37.777" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:37.777" starttime="20180716 10:11:37.772"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:42.783" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:42.783" starttime="20180716 10:11:37.777"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:42.783" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:42.783" starttime="20180716 10:11:42.783"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:42.783" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:42.783" starttime="20180716 10:11:42.783"></status>
</kw>
<msg timestamp="20180716 10:11:42.783" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:42.783" starttime="20180716 10:11:42.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:42.783" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:42.783" starttime="20180716 10:11:42.783"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:42.783" starttime="20180716 10:11:42.783"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:42.783" starttime="20180716 10:11:37.768"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:42.783" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:42.783" starttime="20180716 10:11:42.783"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:42.799" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:42.799" starttime="20180716 10:11:42.783"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:47.800" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:47.800" starttime="20180716 10:11:42.799"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:47.800" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:11:47.800" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:11:47.800" starttime="20180716 10:11:47.800"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:47.800" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:47.800" starttime="20180716 10:11:47.800"></status>
</kw>
<msg timestamp="20180716 10:11:47.800" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:47.800" starttime="20180716 10:11:47.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:47.800" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:47.800" starttime="20180716 10:11:47.800"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:47.800" starttime="20180716 10:11:47.800"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:47.800" starttime="20180716 10:11:42.783"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:47.800" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:47.800" starttime="20180716 10:11:47.800"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:47.816" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:47.816" starttime="20180716 10:11:47.800"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:52.830" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:47.816"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:52.830" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:52.830"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:52.830" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:52.830" starttime="20180716 10:11:52.830"></status>
</kw>
<msg timestamp="20180716 10:11:52.830" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:52.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:52.830" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:52.830"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:52.830"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:47.800"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:52.830" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:52.830"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:52.830" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:52.830" starttime="20180716 10:11:52.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:11:57.830" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:52.830"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:11:57.830" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:57.830"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:11:57.830" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:11:57.830" starttime="20180716 10:11:57.830"></status>
</kw>
<msg timestamp="20180716 10:11:57.830" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:57.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:11:57.830" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:57.830"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:57.830"></status>
</kw>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:52.830"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:11:57.830" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:57.830"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:11:57.830" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:11:57.830" starttime="20180716 10:11:57.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:02.841" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:11:57.830"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:02.841" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:12:02.841"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:02.841" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:02.841" starttime="20180716 10:12:02.841"></status>
</kw>
<msg timestamp="20180716 10:12:02.841" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:12:02.841"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:02.841" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:12:02.841"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:12:02.841"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:11:57.830"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:02.841" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:12:02.841"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:02.841" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:02.841" starttime="20180716 10:12:02.841"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:07.856" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:07.856" starttime="20180716 10:12:02.841"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:07.856" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:12:07.856" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:12:07.856" starttime="20180716 10:12:07.856"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:07.856" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:07.856" starttime="20180716 10:12:07.856"></status>
</kw>
<msg timestamp="20180716 10:12:07.856" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:07.856" starttime="20180716 10:12:07.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:07.856" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:07.856" starttime="20180716 10:12:07.856"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:07.856" starttime="20180716 10:12:07.856"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:07.856" starttime="20180716 10:12:02.841"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:07.856" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:07.856" starttime="20180716 10:12:07.856"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:07.871" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:07.871" starttime="20180716 10:12:07.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:12.872" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:07.871"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:12.872" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:12.872"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:12.872" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:12.872" starttime="20180716 10:12:12.872"></status>
</kw>
<msg timestamp="20180716 10:12:12.872" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:12.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:12.872" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:12.872"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:12.872"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:07.856"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:12.872" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:12.872"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:12.872" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:12.872" starttime="20180716 10:12:12.872"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:17.872" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:17.872" starttime="20180716 10:12:12.872"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:17.872" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:17.872" starttime="20180716 10:12:17.872"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:17.873" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:17.873" starttime="20180716 10:12:17.873"></status>
</kw>
<msg timestamp="20180716 10:12:17.873" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:17.874" starttime="20180716 10:12:17.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:17.874" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:17.874" starttime="20180716 10:12:17.874"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:17.875" starttime="20180716 10:12:17.874"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:17.875" starttime="20180716 10:12:12.872"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:17.875" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:17.875" starttime="20180716 10:12:17.875"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:17.878" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:17.878" starttime="20180716 10:12:17.876"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:22.878" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:22.878" starttime="20180716 10:12:17.878"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:22.878" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:22.878" starttime="20180716 10:12:22.878"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:22.879" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:22.879" starttime="20180716 10:12:22.879"></status>
</kw>
<msg timestamp="20180716 10:12:22.879" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:22.879" starttime="20180716 10:12:22.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:22.880" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:22.880" starttime="20180716 10:12:22.880"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:22.880" starttime="20180716 10:12:22.880"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:22.880" starttime="20180716 10:12:17.875"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:22.881" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:22.881" starttime="20180716 10:12:22.881"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:22.883" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:22.883" starttime="20180716 10:12:22.881"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:27.884" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:27.884" starttime="20180716 10:12:22.884"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:27.884" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:12:27.884" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:12:27.884" starttime="20180716 10:12:27.884"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:27.885" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:27.885" starttime="20180716 10:12:27.885"></status>
</kw>
<msg timestamp="20180716 10:12:27.886" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:27.886" starttime="20180716 10:12:27.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:27.886" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:27.887" starttime="20180716 10:12:27.886"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:27.887" starttime="20180716 10:12:27.886"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:27.887" starttime="20180716 10:12:22.880"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:27.887" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:27.887" starttime="20180716 10:12:27.887"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:27.889" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:27.889" starttime="20180716 10:12:27.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:32.890" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:32.890" starttime="20180716 10:12:27.890"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:32.890" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:32.890" starttime="20180716 10:12:32.890"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:32.891" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:32.891" starttime="20180716 10:12:32.891"></status>
</kw>
<msg timestamp="20180716 10:12:32.891" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:32.891" starttime="20180716 10:12:32.890"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:32.892" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:32.892" starttime="20180716 10:12:32.892"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:32.893" starttime="20180716 10:12:32.892"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:32.893" starttime="20180716 10:12:27.887"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:32.893" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:32.893" starttime="20180716 10:12:32.893"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:32.895" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:32.895" starttime="20180716 10:12:32.893"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:37.896" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:37.896" starttime="20180716 10:12:32.895"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:37.896" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:37.896" starttime="20180716 10:12:37.896"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:37.897" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:37.897" starttime="20180716 10:12:37.897"></status>
</kw>
<msg timestamp="20180716 10:12:37.897" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:37.897" starttime="20180716 10:12:37.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:37.898" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:37.898" starttime="20180716 10:12:37.898"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:37.898" starttime="20180716 10:12:37.898"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:37.898" starttime="20180716 10:12:32.893"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:37.899" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:37.899" starttime="20180716 10:12:37.899"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:37.901" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:37.901" starttime="20180716 10:12:37.899"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:42.902" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:42.902" starttime="20180716 10:12:37.902"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:42.902" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:42.902" starttime="20180716 10:12:42.902"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:42.903" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:42.903" starttime="20180716 10:12:42.903"></status>
</kw>
<msg timestamp="20180716 10:12:42.903" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:42.903" starttime="20180716 10:12:42.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:42.904" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:42.904" starttime="20180716 10:12:42.904"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:42.904" starttime="20180716 10:12:42.904"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:42.904" starttime="20180716 10:12:37.899"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:42.905" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:42.905" starttime="20180716 10:12:42.905"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:42.907" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:42.907" starttime="20180716 10:12:42.905"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:47.908" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:47.908" starttime="20180716 10:12:42.908"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:47.908" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:12:47.908" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:12:47.908" starttime="20180716 10:12:47.908"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:47.909" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:47.909" starttime="20180716 10:12:47.909"></status>
</kw>
<msg timestamp="20180716 10:12:47.910" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:47.910" starttime="20180716 10:12:47.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:47.910" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:47.910" starttime="20180716 10:12:47.910"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:47.910" starttime="20180716 10:12:47.910"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:47.911" starttime="20180716 10:12:42.905"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:47.911" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:47.911" starttime="20180716 10:12:47.911"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:47.914" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:47.914" starttime="20180716 10:12:47.911"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:52.914" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:52.914" starttime="20180716 10:12:47.914"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:52.914" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:52.914" starttime="20180716 10:12:52.914"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:52.915" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:52.915" starttime="20180716 10:12:52.915"></status>
</kw>
<msg timestamp="20180716 10:12:52.915" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:52.915" starttime="20180716 10:12:52.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:52.916" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:52.916" starttime="20180716 10:12:52.916"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:52.916" starttime="20180716 10:12:52.916"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:52.916" starttime="20180716 10:12:47.911"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:52.917" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:52.917" starttime="20180716 10:12:52.917"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:52.920" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:52.920" starttime="20180716 10:12:52.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:12:57.920" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:12:57.920" starttime="20180716 10:12:52.920"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:12:57.920" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:12:57.920" starttime="20180716 10:12:57.920"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:12:57.921" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:12:57.921" starttime="20180716 10:12:57.921"></status>
</kw>
<msg timestamp="20180716 10:12:57.921" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:12:57.922" starttime="20180716 10:12:57.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:12:57.922" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:12:57.922" starttime="20180716 10:12:57.922"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:57.922" starttime="20180716 10:12:57.922"></status>
</kw>
<status status="PASS" endtime="20180716 10:12:57.922" starttime="20180716 10:12:52.916"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:12:57.923" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:57.923" starttime="20180716 10:12:57.923"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:12:57.925" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:12:57.925" starttime="20180716 10:12:57.923"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:02.926" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:02.926" starttime="20180716 10:12:57.925"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:02.926" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:02.926" starttime="20180716 10:13:02.926"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:02.927" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:02.927" starttime="20180716 10:13:02.927"></status>
</kw>
<msg timestamp="20180716 10:13:02.927" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:02.927" starttime="20180716 10:13:02.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:02.928" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:02.928" starttime="20180716 10:13:02.928"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:02.928" starttime="20180716 10:13:02.928"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:02.928" starttime="20180716 10:12:57.923"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:02.929" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:02.929" starttime="20180716 10:13:02.929"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:02.931" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:02.932" starttime="20180716 10:13:02.929"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:07.932" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:07.932" starttime="20180716 10:13:02.932"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:07.932" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:13:07.932" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:13:07.932" starttime="20180716 10:13:07.932"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:07.934" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:07.934" starttime="20180716 10:13:07.933"></status>
</kw>
<msg timestamp="20180716 10:13:07.934" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:07.934" starttime="20180716 10:13:07.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:07.935" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:07.935" starttime="20180716 10:13:07.935"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:07.935" starttime="20180716 10:13:07.934"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:07.935" starttime="20180716 10:13:02.929"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:07.936" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:07.936" starttime="20180716 10:13:07.936"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:07.938" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:07.938" starttime="20180716 10:13:07.936"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:12.939" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:12.939" starttime="20180716 10:13:07.938"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:12.939" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:12.939" starttime="20180716 10:13:12.939"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:12.940" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:12.940" starttime="20180716 10:13:12.940"></status>
</kw>
<msg timestamp="20180716 10:13:12.940" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:12.940" starttime="20180716 10:13:12.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:12.941" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:12.941" starttime="20180716 10:13:12.941"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:12.941" starttime="20180716 10:13:12.941"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:12.941" starttime="20180716 10:13:07.935"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:12.942" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:12.942" starttime="20180716 10:13:12.942"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:12.944" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:12.945" starttime="20180716 10:13:12.942"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:17.945" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:17.945" starttime="20180716 10:13:12.945"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:17.945" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:17.945" starttime="20180716 10:13:17.945"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:17.946" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:17.946" starttime="20180716 10:13:17.946"></status>
</kw>
<msg timestamp="20180716 10:13:17.947" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:17.947" starttime="20180716 10:13:17.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:17.947" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:17.947" starttime="20180716 10:13:17.947"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:17.947" starttime="20180716 10:13:17.947"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:17.947" starttime="20180716 10:13:12.941"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:17.948" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:17.948" starttime="20180716 10:13:17.948"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:17.951" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:17.951" starttime="20180716 10:13:17.948"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:22.951" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:22.951" starttime="20180716 10:13:17.951"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:22.951" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:22.951" starttime="20180716 10:13:22.951"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:22.952" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:22.952" starttime="20180716 10:13:22.952"></status>
</kw>
<msg timestamp="20180716 10:13:22.953" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:22.953" starttime="20180716 10:13:22.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:22.954" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:22.954" starttime="20180716 10:13:22.953"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:22.954" starttime="20180716 10:13:22.953"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:22.954" starttime="20180716 10:13:17.948"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:22.954" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:22.954" starttime="20180716 10:13:22.954"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:22.957" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:22.957" starttime="20180716 10:13:22.955"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:27.957" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:27.957" starttime="20180716 10:13:22.957"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:27.957" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:13:27.957" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:13:27.957" starttime="20180716 10:13:27.957"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:27.958" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:27.958" starttime="20180716 10:13:27.958"></status>
</kw>
<msg timestamp="20180716 10:13:27.959" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:27.959" starttime="20180716 10:13:27.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:27.959" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:27.959" starttime="20180716 10:13:27.959"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:27.960" starttime="20180716 10:13:27.959"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:27.960" starttime="20180716 10:13:22.954"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:27.960" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:27.960" starttime="20180716 10:13:27.960"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:27.962" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:27.962" starttime="20180716 10:13:27.960"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:32.963" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:32.963" starttime="20180716 10:13:27.962"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:32.963" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:32.963" starttime="20180716 10:13:32.963"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:32.964" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:32.964" starttime="20180716 10:13:32.964"></status>
</kw>
<msg timestamp="20180716 10:13:32.964" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:32.964" starttime="20180716 10:13:32.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:32.965" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:32.965" starttime="20180716 10:13:32.965"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:32.965" starttime="20180716 10:13:32.965"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:32.965" starttime="20180716 10:13:27.960"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:32.966" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:32.966" starttime="20180716 10:13:32.966"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:32.968" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:32.968" starttime="20180716 10:13:32.966"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:37.968" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:37.968" starttime="20180716 10:13:32.968"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:37.968" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:37.968" starttime="20180716 10:13:37.968"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:37.969" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:37.969" starttime="20180716 10:13:37.969"></status>
</kw>
<msg timestamp="20180716 10:13:37.970" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:37.970" starttime="20180716 10:13:37.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:37.970" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:37.971" starttime="20180716 10:13:37.970"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:37.971" starttime="20180716 10:13:37.970"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:37.971" starttime="20180716 10:13:32.966"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:37.971" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:37.971" starttime="20180716 10:13:37.971"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:37.973" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:37.973" starttime="20180716 10:13:37.971"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:42.974" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:42.974" starttime="20180716 10:13:37.973"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:42.974" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:42.974" starttime="20180716 10:13:42.974"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:42.975" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:42.975" starttime="20180716 10:13:42.975"></status>
</kw>
<msg timestamp="20180716 10:13:42.975" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:42.976" starttime="20180716 10:13:42.974"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:42.976" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:42.976" starttime="20180716 10:13:42.976"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:42.976" starttime="20180716 10:13:42.976"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:42.976" starttime="20180716 10:13:37.971"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:42.977" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:42.977" starttime="20180716 10:13:42.977"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:42.980" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:42.980" starttime="20180716 10:13:42.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:47.980" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:47.980" starttime="20180716 10:13:42.980"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:47.982" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:13:47.982" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:13:47.982" starttime="20180716 10:13:47.981"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:47.985" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:47.986" starttime="20180716 10:13:47.984"></status>
</kw>
<msg timestamp="20180716 10:13:47.986" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:47.986" starttime="20180716 10:13:47.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:47.989" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:47.989" starttime="20180716 10:13:47.988"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:47.989" starttime="20180716 10:13:47.987"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:47.989" starttime="20180716 10:13:42.977"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:47.991" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:47.992" starttime="20180716 10:13:47.990"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:47.998" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:47.998" starttime="20180716 10:13:47.992"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:52.999" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:52.999" starttime="20180716 10:13:47.999"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:53.000" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:53.000" starttime="20180716 10:13:53.000"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:53.002" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:53.002" starttime="20180716 10:13:53.001"></status>
</kw>
<msg timestamp="20180716 10:13:53.003" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:53.003" starttime="20180716 10:13:53.001"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:53.005" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:53.005" starttime="20180716 10:13:53.004"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:53.005" starttime="20180716 10:13:53.003"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:53.005" starttime="20180716 10:13:47.990"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:53.006" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:53.007" starttime="20180716 10:13:53.006"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:53.011" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:53.011" starttime="20180716 10:13:53.007"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:13:58.012" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:13:58.012" starttime="20180716 10:13:53.012"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:13:58.014" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:13:58.014" starttime="20180716 10:13:58.013"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:13:58.018" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:13:58.018" starttime="20180716 10:13:58.017"></status>
</kw>
<msg timestamp="20180716 10:13:58.019" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:13:58.019" starttime="20180716 10:13:58.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:13:58.022" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:13:58.022" starttime="20180716 10:13:58.021"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:58.023" starttime="20180716 10:13:58.020"></status>
</kw>
<status status="PASS" endtime="20180716 10:13:58.023" starttime="20180716 10:13:53.005"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:13:58.025" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:58.025" starttime="20180716 10:13:58.024"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:13:58.033" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:13:58.033" starttime="20180716 10:13:58.026"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:03.034" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:03.034" starttime="20180716 10:13:58.034"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:03.036" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:03.036" starttime="20180716 10:14:03.035"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:03.040" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:03.040" starttime="20180716 10:14:03.039"></status>
</kw>
<msg timestamp="20180716 10:14:03.041" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:03.041" starttime="20180716 10:14:03.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:03.044" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:03.044" starttime="20180716 10:14:03.043"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:03.045" starttime="20180716 10:14:03.042"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:03.045" starttime="20180716 10:13:58.023"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:03.047" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:03.048" starttime="20180716 10:14:03.046"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:03.055" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:03.055" starttime="20180716 10:14:03.048"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:08.057" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:08.057" starttime="20180716 10:14:03.056"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:08.059" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:14:08.060" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:14:08.060" starttime="20180716 10:14:08.058"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:08.064" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:08.064" starttime="20180716 10:14:08.062"></status>
</kw>
<msg timestamp="20180716 10:14:08.065" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:08.065" starttime="20180716 10:14:08.060"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:08.068" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:08.068" starttime="20180716 10:14:08.067"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:08.069" starttime="20180716 10:14:08.066"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:08.069" starttime="20180716 10:14:03.045"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:08.071" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:08.071" starttime="20180716 10:14:08.070"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:08.079" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:08.079" starttime="20180716 10:14:08.072"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:13.080" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:13.080" starttime="20180716 10:14:08.079"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:13.082" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:13.083" starttime="20180716 10:14:13.081"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:13.087" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:13.087" starttime="20180716 10:14:13.085"></status>
</kw>
<msg timestamp="20180716 10:14:13.088" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:13.088" starttime="20180716 10:14:13.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:13.091" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:13.092" starttime="20180716 10:14:13.090"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:13.092" starttime="20180716 10:14:13.089"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:13.092" starttime="20180716 10:14:08.069"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:13.095" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:13.095" starttime="20180716 10:14:13.093"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:13.102" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:13.102" starttime="20180716 10:14:13.095"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:18.104" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:18.105" starttime="20180716 10:14:13.103"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:18.106" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:18.107" starttime="20180716 10:14:18.105"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:18.111" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:18.111" starttime="20180716 10:14:18.109"></status>
</kw>
<msg timestamp="20180716 10:14:18.111" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:18.112" starttime="20180716 10:14:18.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:18.115" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:18.115" starttime="20180716 10:14:18.114"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:18.115" starttime="20180716 10:14:18.112"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:18.115" starttime="20180716 10:14:13.092"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:18.118" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:18.118" starttime="20180716 10:14:18.117"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:18.125" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:18.125" starttime="20180716 10:14:18.119"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:23.127" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:23.127" starttime="20180716 10:14:18.126"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:23.128" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:23.128" starttime="20180716 10:14:23.127"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:23.130" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:23.130" starttime="20180716 10:14:23.129"></status>
</kw>
<msg timestamp="20180716 10:14:23.130" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:23.131" starttime="20180716 10:14:23.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:23.132" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:23.132" starttime="20180716 10:14:23.132"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:23.132" starttime="20180716 10:14:23.131"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:23.132" starttime="20180716 10:14:18.116"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:23.134" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:23.134" starttime="20180716 10:14:23.133"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:23.138" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:23.138" starttime="20180716 10:14:23.134"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:28.139" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:28.139" starttime="20180716 10:14:23.139"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:28.139" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:14:28.139" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:14:28.139" starttime="20180716 10:14:28.139"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:28.140" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:28.140" starttime="20180716 10:14:28.140"></status>
</kw>
<msg timestamp="20180716 10:14:28.140" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:28.141" starttime="20180716 10:14:28.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:28.141" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:28.141" starttime="20180716 10:14:28.141"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:28.141" starttime="20180716 10:14:28.141"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:28.142" starttime="20180716 10:14:23.133"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:28.142" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:28.142" starttime="20180716 10:14:28.142"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:28.144" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:28.144" starttime="20180716 10:14:28.142"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:33.145" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:33.145" starttime="20180716 10:14:28.145"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:33.145" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:33.145" starttime="20180716 10:14:33.145"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:33.146" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:33.146" starttime="20180716 10:14:33.146"></status>
</kw>
<msg timestamp="20180716 10:14:33.146" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:33.146" starttime="20180716 10:14:33.146"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:33.147" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:33.147" starttime="20180716 10:14:33.147"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:33.147" starttime="20180716 10:14:33.147"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:33.147" starttime="20180716 10:14:28.142"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:33.148" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:33.148" starttime="20180716 10:14:33.148"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:33.150" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:33.150" starttime="20180716 10:14:33.148"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:38.150" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:38.150" starttime="20180716 10:14:33.150"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:38.150" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:38.150" starttime="20180716 10:14:38.150"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:38.152" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:38.152" starttime="20180716 10:14:38.151"></status>
</kw>
<msg timestamp="20180716 10:14:38.152" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:38.152" starttime="20180716 10:14:38.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:38.153" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:38.153" starttime="20180716 10:14:38.152"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:38.153" starttime="20180716 10:14:38.152"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:38.153" starttime="20180716 10:14:33.147"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:38.153" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:38.153" starttime="20180716 10:14:38.153"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:38.156" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:38.156" starttime="20180716 10:14:38.154"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:43.156" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:43.156" starttime="20180716 10:14:38.156"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:43.156" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:43.156" starttime="20180716 10:14:43.156"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:43.157" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:43.157" starttime="20180716 10:14:43.157"></status>
</kw>
<msg timestamp="20180716 10:14:43.157" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:43.157" starttime="20180716 10:14:43.156"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:43.159" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:43.159" starttime="20180716 10:14:43.158"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:43.159" starttime="20180716 10:14:43.158"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:43.159" starttime="20180716 10:14:38.153"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:43.159" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:43.159" starttime="20180716 10:14:43.159"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:43.161" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:43.161" starttime="20180716 10:14:43.160"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:48.162" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:48.162" starttime="20180716 10:14:43.162"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:48.162" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:14:48.162" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:14:48.162" starttime="20180716 10:14:48.162"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:48.163" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:48.163" starttime="20180716 10:14:48.163"></status>
</kw>
<msg timestamp="20180716 10:14:48.163" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:48.164" starttime="20180716 10:14:48.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:48.164" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:48.164" starttime="20180716 10:14:48.164"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:48.164" starttime="20180716 10:14:48.164"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:48.164" starttime="20180716 10:14:43.159"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:48.165" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:48.165" starttime="20180716 10:14:48.165"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:48.167" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:48.168" starttime="20180716 10:14:48.165"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:53.168" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:53.168" starttime="20180716 10:14:48.168"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:53.168" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:53.168" starttime="20180716 10:14:53.168"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:53.169" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:53.169" starttime="20180716 10:14:53.169"></status>
</kw>
<msg timestamp="20180716 10:14:53.169" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:53.169" starttime="20180716 10:14:53.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:53.170" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:53.170" starttime="20180716 10:14:53.170"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:53.170" starttime="20180716 10:14:53.170"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:53.170" starttime="20180716 10:14:48.164"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:53.171" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:53.171" starttime="20180716 10:14:53.171"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:53.173" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:53.173" starttime="20180716 10:14:53.171"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:14:58.174" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:14:58.174" starttime="20180716 10:14:53.173"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:14:58.174" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:14:58.174" starttime="20180716 10:14:58.174"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:14:58.175" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:14:58.175" starttime="20180716 10:14:58.175"></status>
</kw>
<msg timestamp="20180716 10:14:58.175" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:14:58.175" starttime="20180716 10:14:58.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:14:58.176" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:14:58.176" starttime="20180716 10:14:58.176"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:58.176" starttime="20180716 10:14:58.176"></status>
</kw>
<status status="PASS" endtime="20180716 10:14:58.176" starttime="20180716 10:14:53.170"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:14:58.177" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:58.177" starttime="20180716 10:14:58.177"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:14:58.179" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:14:58.179" starttime="20180716 10:14:58.177"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:03.180" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:03.180" starttime="20180716 10:14:58.180"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:03.181" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:03.181" starttime="20180716 10:15:03.181"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:03.184" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:03.184" starttime="20180716 10:15:03.182"></status>
</kw>
<msg timestamp="20180716 10:15:03.185" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:03.185" starttime="20180716 10:15:03.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:03.188" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:03.188" starttime="20180716 10:15:03.187"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:03.189" starttime="20180716 10:15:03.185"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:03.189" starttime="20180716 10:14:58.176"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:03.191" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:03.192" starttime="20180716 10:15:03.190"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:03.199" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:03.200" starttime="20180716 10:15:03.192"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:08.201" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:08.201" starttime="20180716 10:15:03.200"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:08.203" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:15:08.204" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:15:08.204" starttime="20180716 10:15:08.202"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:08.208" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:08.208" starttime="20180716 10:15:08.206"></status>
</kw>
<msg timestamp="20180716 10:15:08.208" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:08.209" starttime="20180716 10:15:08.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:08.212" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:08.212" starttime="20180716 10:15:08.211"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:08.212" starttime="20180716 10:15:08.209"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:08.213" starttime="20180716 10:15:03.189"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:08.215" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:08.215" starttime="20180716 10:15:08.214"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:08.222" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:08.223" starttime="20180716 10:15:08.216"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:13.224" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:13.224" starttime="20180716 10:15:08.223"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:13.226" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:13.226" starttime="20180716 10:15:13.225"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:13.229" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:13.230" starttime="20180716 10:15:13.228"></status>
</kw>
<msg timestamp="20180716 10:15:13.230" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:13.230" starttime="20180716 10:15:13.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:13.233" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:13.233" starttime="20180716 10:15:13.232"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:13.233" starttime="20180716 10:15:13.231"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:13.233" starttime="20180716 10:15:08.213"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:13.236" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:13.236" starttime="20180716 10:15:13.234"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:13.242" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:13.243" starttime="20180716 10:15:13.236"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:18.244" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:18.245" starttime="20180716 10:15:13.243"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:18.247" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:18.247" starttime="20180716 10:15:18.246"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:18.251" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:18.252" starttime="20180716 10:15:18.250"></status>
</kw>
<msg timestamp="20180716 10:15:18.252" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:18.252" starttime="20180716 10:15:18.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:18.255" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:18.256" starttime="20180716 10:15:18.255"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:18.256" starttime="20180716 10:15:18.253"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:18.256" starttime="20180716 10:15:13.234"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:18.259" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:18.259" starttime="20180716 10:15:18.257"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:18.265" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:18.266" starttime="20180716 10:15:18.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:23.267" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:23.267" starttime="20180716 10:15:18.267"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:23.269" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:23.269" starttime="20180716 10:15:23.268"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:23.273" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:23.273" starttime="20180716 10:15:23.272"></status>
</kw>
<msg timestamp="20180716 10:15:23.274" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:23.274" starttime="20180716 10:15:23.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:23.277" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:23.278" starttime="20180716 10:15:23.277"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:23.278" starttime="20180716 10:15:23.275"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:23.278" starttime="20180716 10:15:18.257"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:23.280" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:23.281" starttime="20180716 10:15:23.279"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:23.285" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:23.286" starttime="20180716 10:15:23.281"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:28.287" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:28.287" starttime="20180716 10:15:23.286"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:28.289" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:15:28.289" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:15:28.289" starttime="20180716 10:15:28.288"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:28.293" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:28.294" starttime="20180716 10:15:28.292"></status>
</kw>
<msg timestamp="20180716 10:15:28.294" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:28.295" starttime="20180716 10:15:28.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:28.298" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:28.298" starttime="20180716 10:15:28.297"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:28.298" starttime="20180716 10:15:28.295"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:28.298" starttime="20180716 10:15:23.278"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:28.300" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:28.300" starttime="20180716 10:15:28.299"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:28.307" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:28.307" starttime="20180716 10:15:28.301"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:33.308" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:33.308" starttime="20180716 10:15:28.308"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:33.310" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:33.310" starttime="20180716 10:15:33.309"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:33.314" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:33.314" starttime="20180716 10:15:33.313"></status>
</kw>
<msg timestamp="20180716 10:15:33.315" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:33.315" starttime="20180716 10:15:33.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:33.318" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:33.319" starttime="20180716 10:15:33.318"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:33.319" starttime="20180716 10:15:33.316"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:33.319" starttime="20180716 10:15:28.299"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:33.322" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:33.322" starttime="20180716 10:15:33.320"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:33.329" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:33.329" starttime="20180716 10:15:33.322"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:38.330" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:38.330" starttime="20180716 10:15:33.330"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:38.332" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:38.332" starttime="20180716 10:15:38.331"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:38.336" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:38.336" starttime="20180716 10:15:38.335"></status>
</kw>
<msg timestamp="20180716 10:15:38.337" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:38.337" starttime="20180716 10:15:38.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:38.340" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:38.340" starttime="20180716 10:15:38.339"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:38.341" starttime="20180716 10:15:38.338"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:38.341" starttime="20180716 10:15:33.319"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:38.343" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:38.343" starttime="20180716 10:15:38.342"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:38.350" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:38.351" starttime="20180716 10:15:38.344"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:43.352" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:43.352" starttime="20180716 10:15:38.351"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:43.354" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:43.354" starttime="20180716 10:15:43.353"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:43.358" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:43.359" starttime="20180716 10:15:43.357"></status>
</kw>
<msg timestamp="20180716 10:15:43.359" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:43.359" starttime="20180716 10:15:43.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:43.363" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:43.363" starttime="20180716 10:15:43.362"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:43.363" starttime="20180716 10:15:43.360"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:43.364" starttime="20180716 10:15:38.341"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:43.366" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:43.366" starttime="20180716 10:15:43.365"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:43.373" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:43.374" starttime="20180716 10:15:43.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:48.375" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:48.376" starttime="20180716 10:15:43.374"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:48.377" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:15:48.378" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:15:48.378" starttime="20180716 10:15:48.376"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:48.382" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:48.382" starttime="20180716 10:15:48.380"></status>
</kw>
<msg timestamp="20180716 10:15:48.383" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:48.383" starttime="20180716 10:15:48.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:48.387" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:48.387" starttime="20180716 10:15:48.385"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:48.387" starttime="20180716 10:15:48.383"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:48.387" starttime="20180716 10:15:43.364"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:48.390" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:48.390" starttime="20180716 10:15:48.389"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:48.397" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:48.398" starttime="20180716 10:15:48.391"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:53.399" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:53.399" starttime="20180716 10:15:48.398"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:53.401" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:53.401" starttime="20180716 10:15:53.400"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:53.403" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:53.404" starttime="20180716 10:15:53.403"></status>
</kw>
<msg timestamp="20180716 10:15:53.404" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:53.404" starttime="20180716 10:15:53.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:53.405" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:53.405" starttime="20180716 10:15:53.405"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:53.405" starttime="20180716 10:15:53.404"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:53.405" starttime="20180716 10:15:48.388"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:53.406" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:53.406" starttime="20180716 10:15:53.405"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:53.408" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:53.409" starttime="20180716 10:15:53.406"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:15:58.409" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:15:58.409" starttime="20180716 10:15:53.409"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:15:58.411" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:15:58.411" starttime="20180716 10:15:58.410"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:15:58.415" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:15:58.415" starttime="20180716 10:15:58.413"></status>
</kw>
<msg timestamp="20180716 10:15:58.415" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:15:58.415" starttime="20180716 10:15:58.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:15:58.418" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:15:58.418" starttime="20180716 10:15:58.417"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:58.418" starttime="20180716 10:15:58.416"></status>
</kw>
<status status="PASS" endtime="20180716 10:15:58.418" starttime="20180716 10:15:53.405"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:15:58.421" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:58.421" starttime="20180716 10:15:58.419"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:15:58.427" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:15:58.428" starttime="20180716 10:15:58.421"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:03.429" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:03.429" starttime="20180716 10:15:58.428"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:03.431" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:03.431" starttime="20180716 10:16:03.430"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:03.435" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:03.435" starttime="20180716 10:16:03.434"></status>
</kw>
<msg timestamp="20180716 10:16:03.436" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:03.436" starttime="20180716 10:16:03.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:03.439" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:03.440" starttime="20180716 10:16:03.439"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:03.440" starttime="20180716 10:16:03.437"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:03.440" starttime="20180716 10:15:58.419"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:03.443" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:03.443" starttime="20180716 10:16:03.441"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:03.448" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:03.449" starttime="20180716 10:16:03.443"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:08.451" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:08.451" starttime="20180716 10:16:03.450"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:08.453" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:16:08.454" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:16:08.454" starttime="20180716 10:16:08.452"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:08.458" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:08.458" starttime="20180716 10:16:08.456"></status>
</kw>
<msg timestamp="20180716 10:16:08.459" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:08.459" starttime="20180716 10:16:08.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:08.462" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:08.462" starttime="20180716 10:16:08.461"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:08.462" starttime="20180716 10:16:08.459"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:08.463" starttime="20180716 10:16:03.440"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:08.464" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:08.465" starttime="20180716 10:16:08.463"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:08.469" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:08.469" starttime="20180716 10:16:08.465"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:13.470" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:13.470" starttime="20180716 10:16:08.469"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:13.471" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:13.471" starttime="20180716 10:16:13.470"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:13.472" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:13.472" starttime="20180716 10:16:13.471"></status>
</kw>
<msg timestamp="20180716 10:16:13.472" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:13.472" starttime="20180716 10:16:13.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:13.473" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:13.473" starttime="20180716 10:16:13.472"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:13.473" starttime="20180716 10:16:13.472"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:13.473" starttime="20180716 10:16:08.463"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:13.475" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:13.475" starttime="20180716 10:16:13.474"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:13.480" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:13.480" starttime="20180716 10:16:13.475"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:18.481" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:18.481" starttime="20180716 10:16:13.481"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:18.483" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:18.483" starttime="20180716 10:16:18.482"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:18.488" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:18.489" starttime="20180716 10:16:18.486"></status>
</kw>
<msg timestamp="20180716 10:16:18.489" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:18.489" starttime="20180716 10:16:18.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:18.493" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:18.493" starttime="20180716 10:16:18.492"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:18.493" starttime="20180716 10:16:18.490"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:18.494" starttime="20180716 10:16:13.474"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:18.496" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:18.497" starttime="20180716 10:16:18.495"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:18.503" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:18.504" starttime="20180716 10:16:18.497"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:23.505" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:23.505" starttime="20180716 10:16:18.505"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:23.507" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:23.508" starttime="20180716 10:16:23.506"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:23.511" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:23.512" starttime="20180716 10:16:23.510"></status>
</kw>
<msg timestamp="20180716 10:16:23.512" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:23.512" starttime="20180716 10:16:23.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:23.515" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:23.516" starttime="20180716 10:16:23.515"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:23.516" starttime="20180716 10:16:23.513"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:23.516" starttime="20180716 10:16:18.494"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:23.519" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:23.519" starttime="20180716 10:16:23.517"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:23.526" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:23.526" starttime="20180716 10:16:23.519"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:28.528" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:28.528" starttime="20180716 10:16:23.527"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:28.529" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:16:28.529" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:16:28.529" starttime="20180716 10:16:28.528"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:28.531" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:28.531" starttime="20180716 10:16:28.530"></status>
</kw>
<msg timestamp="20180716 10:16:28.531" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:28.531" starttime="20180716 10:16:28.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:28.533" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:28.533" starttime="20180716 10:16:28.532"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:28.533" starttime="20180716 10:16:28.532"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:28.533" starttime="20180716 10:16:23.516"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:28.534" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:28.534" starttime="20180716 10:16:28.534"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:28.538" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:28.538" starttime="20180716 10:16:28.535"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:33.539" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:33.539" starttime="20180716 10:16:28.538"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:33.541" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:33.541" starttime="20180716 10:16:33.540"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:33.546" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:33.546" starttime="20180716 10:16:33.544"></status>
</kw>
<msg timestamp="20180716 10:16:33.546" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:33.546" starttime="20180716 10:16:33.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:33.549" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:33.549" starttime="20180716 10:16:33.548"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:33.549" starttime="20180716 10:16:33.547"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:33.549" starttime="20180716 10:16:28.533"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:33.551" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:33.552" starttime="20180716 10:16:33.550"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:33.558" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:33.559" starttime="20180716 10:16:33.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:38.560" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:38.560" starttime="20180716 10:16:33.559"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:38.562" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:38.562" starttime="20180716 10:16:38.561"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:38.566" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:38.567" starttime="20180716 10:16:38.565"></status>
</kw>
<msg timestamp="20180716 10:16:38.567" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:38.567" starttime="20180716 10:16:38.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:38.570" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:38.571" starttime="20180716 10:16:38.570"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:38.571" starttime="20180716 10:16:38.568"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:38.571" starttime="20180716 10:16:33.550"></status>
</kw>
<kw type="foritem" name="${i} = 70">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:38.574" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:38.574" starttime="20180716 10:16:38.572"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:38.581" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:38.581" starttime="20180716 10:16:38.575"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:43.582" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:43.582" starttime="20180716 10:16:38.582"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:43.584" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:43.585" starttime="20180716 10:16:43.583"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:43.589" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:43.590" starttime="20180716 10:16:43.588"></status>
</kw>
<msg timestamp="20180716 10:16:43.590" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:43.590" starttime="20180716 10:16:43.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:43.593" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:43.594" starttime="20180716 10:16:43.593"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:43.594" starttime="20180716 10:16:43.591"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:43.594" starttime="20180716 10:16:38.572"></status>
</kw>
<kw type="foritem" name="${i} = 71">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:43.596" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:43.596" starttime="20180716 10:16:43.595"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:43.603" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:43.604" starttime="20180716 10:16:43.597"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:48.605" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:48.605" starttime="20180716 10:16:43.605"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:48.606" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:16:48.606" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:16:48.607" starttime="20180716 10:16:48.606"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:48.609" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:48.609" starttime="20180716 10:16:48.608"></status>
</kw>
<msg timestamp="20180716 10:16:48.609" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:48.609" starttime="20180716 10:16:48.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:48.611" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:48.612" starttime="20180716 10:16:48.611"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:48.612" starttime="20180716 10:16:48.610"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:48.612" starttime="20180716 10:16:43.594"></status>
</kw>
<kw type="foritem" name="${i} = 72">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:48.614" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:48.614" starttime="20180716 10:16:48.613"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:48.619" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:48.619" starttime="20180716 10:16:48.614"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:53.620" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:53.620" starttime="20180716 10:16:48.620"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:53.622" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:53.623" starttime="20180716 10:16:53.621"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:53.627" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:53.627" starttime="20180716 10:16:53.625"></status>
</kw>
<msg timestamp="20180716 10:16:53.628" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:53.628" starttime="20180716 10:16:53.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:53.631" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:53.632" starttime="20180716 10:16:53.630"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:53.632" starttime="20180716 10:16:53.629"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:53.632" starttime="20180716 10:16:48.612"></status>
</kw>
<kw type="foritem" name="${i} = 73">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:53.635" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:53.635" starttime="20180716 10:16:53.633"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:53.643" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:53.643" starttime="20180716 10:16:53.636"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:16:58.645" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:16:58.645" starttime="20180716 10:16:53.644"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:16:58.648" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:16:58.648" starttime="20180716 10:16:58.646"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:16:58.652" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:16:58.652" starttime="20180716 10:16:58.650"></status>
</kw>
<msg timestamp="20180716 10:16:58.652" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:16:58.653" starttime="20180716 10:16:58.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:16:58.656" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:16:58.656" starttime="20180716 10:16:58.655"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:58.656" starttime="20180716 10:16:58.653"></status>
</kw>
<status status="PASS" endtime="20180716 10:16:58.656" starttime="20180716 10:16:53.633"></status>
</kw>
<kw type="foritem" name="${i} = 74">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:16:58.658" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:58.659" starttime="20180716 10:16:58.657"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:16:58.663" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:16:58.663" starttime="20180716 10:16:58.659"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:03.664" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:03.664" starttime="20180716 10:16:58.664"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:03.666" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:03.666" starttime="20180716 10:17:03.665"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:03.669" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:03.669" starttime="20180716 10:17:03.668"></status>
</kw>
<msg timestamp="20180716 10:17:03.670" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:03.670" starttime="20180716 10:17:03.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:03.672" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:03.673" starttime="20180716 10:17:03.672"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:03.673" starttime="20180716 10:17:03.670"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:03.673" starttime="20180716 10:16:58.657"></status>
</kw>
<kw type="foritem" name="${i} = 75">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:03.675" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:03.675" starttime="20180716 10:17:03.674"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:03.682" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:03.682" starttime="20180716 10:17:03.676"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:08.683" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:08.683" starttime="20180716 10:17:03.683"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:08.684" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:17:08.684" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:17:08.684" starttime="20180716 10:17:08.683"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:08.685" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:08.686" starttime="20180716 10:17:08.685"></status>
</kw>
<msg timestamp="20180716 10:17:08.686" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:08.686" starttime="20180716 10:17:08.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:08.687" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:08.687" starttime="20180716 10:17:08.687"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:08.687" starttime="20180716 10:17:08.686"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:08.687" starttime="20180716 10:17:03.673"></status>
</kw>
<kw type="foritem" name="${i} = 76">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:08.688" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:08.688" starttime="20180716 10:17:08.688"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:08.692" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:08.692" starttime="20180716 10:17:08.689"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:13.693" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:13.693" starttime="20180716 10:17:08.692"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:13.693" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:13.693" starttime="20180716 10:17:13.693"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:13.694" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:13.694" starttime="20180716 10:17:13.694"></status>
</kw>
<msg timestamp="20180716 10:17:13.694" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:13.694" starttime="20180716 10:17:13.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:13.695" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:13.695" starttime="20180716 10:17:13.695"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:13.695" starttime="20180716 10:17:13.695"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:13.695" starttime="20180716 10:17:08.688"></status>
</kw>
<kw type="foritem" name="${i} = 77">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:13.696" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:13.696" starttime="20180716 10:17:13.696"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:13.698" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:13.699" starttime="20180716 10:17:13.696"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:18.699" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:18.699" starttime="20180716 10:17:13.699"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:18.699" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:18.699" starttime="20180716 10:17:18.699"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:18.700" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:18.700" starttime="20180716 10:17:18.700"></status>
</kw>
<msg timestamp="20180716 10:17:18.700" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:18.700" starttime="20180716 10:17:18.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:18.701" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:18.701" starttime="20180716 10:17:18.701"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:18.701" starttime="20180716 10:17:18.701"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:18.701" starttime="20180716 10:17:13.695"></status>
</kw>
<kw type="foritem" name="${i} = 78">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:18.702" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:18.702" starttime="20180716 10:17:18.702"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:18.705" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:18.705" starttime="20180716 10:17:18.702"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:23.705" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:23.705" starttime="20180716 10:17:18.705"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:23.707" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:23.707" starttime="20180716 10:17:23.706"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:23.711" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:23.711" starttime="20180716 10:17:23.710"></status>
</kw>
<msg timestamp="20180716 10:17:23.712" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:23.712" starttime="20180716 10:17:23.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:23.715" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:23.716" starttime="20180716 10:17:23.714"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:23.716" starttime="20180716 10:17:23.713"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:23.716" starttime="20180716 10:17:18.701"></status>
</kw>
<kw type="foritem" name="${i} = 79">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:23.719" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:23.719" starttime="20180716 10:17:23.717"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:23.726" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:23.726" starttime="20180716 10:17:23.720"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:28.728" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:28.728" starttime="20180716 10:17:23.727"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:28.730" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:17:28.731" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:17:28.731" starttime="20180716 10:17:28.729"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:28.735" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:28.736" starttime="20180716 10:17:28.733"></status>
</kw>
<msg timestamp="20180716 10:17:28.736" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:28.736" starttime="20180716 10:17:28.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:28.739" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:28.740" starttime="20180716 10:17:28.739"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:28.740" starttime="20180716 10:17:28.737"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:28.740" starttime="20180716 10:17:23.717"></status>
</kw>
<kw type="foritem" name="${i} = 80">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:28.743" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:28.743" starttime="20180716 10:17:28.742"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:28.748" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:28.748" starttime="20180716 10:17:28.743"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:33.749" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:33.749" starttime="20180716 10:17:28.748"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:33.751" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:33.752" starttime="20180716 10:17:33.750"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:33.755" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:33.756" starttime="20180716 10:17:33.754"></status>
</kw>
<msg timestamp="20180716 10:17:33.756" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:33.756" starttime="20180716 10:17:33.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:33.759" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:33.760" starttime="20180716 10:17:33.759"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:33.760" starttime="20180716 10:17:33.757"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:33.760" starttime="20180716 10:17:28.741"></status>
</kw>
<kw type="foritem" name="${i} = 81">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:33.763" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:33.763" starttime="20180716 10:17:33.761"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:33.770" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:33.771" starttime="20180716 10:17:33.764"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:38.772" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:38.773" starttime="20180716 10:17:33.771"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:38.775" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:38.775" starttime="20180716 10:17:38.773"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:38.779" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:38.779" starttime="20180716 10:17:38.777"></status>
</kw>
<msg timestamp="20180716 10:17:38.780" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:38.780" starttime="20180716 10:17:38.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:38.783" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:38.783" starttime="20180716 10:17:38.782"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:38.784" starttime="20180716 10:17:38.781"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:38.784" starttime="20180716 10:17:33.760"></status>
</kw>
<kw type="foritem" name="${i} = 82">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:38.787" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:38.787" starttime="20180716 10:17:38.785"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:38.793" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:38.794" starttime="20180716 10:17:38.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:43.795" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:43.795" starttime="20180716 10:17:38.794"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:43.797" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:43.798" starttime="20180716 10:17:43.796"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:43.801" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:43.802" starttime="20180716 10:17:43.800"></status>
</kw>
<msg timestamp="20180716 10:17:43.802" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:43.802" starttime="20180716 10:17:43.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:43.805" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:43.805" starttime="20180716 10:17:43.804"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:43.805" starttime="20180716 10:17:43.803"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:43.805" starttime="20180716 10:17:38.784"></status>
</kw>
<kw type="foritem" name="${i} = 83">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:43.807" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:43.808" starttime="20180716 10:17:43.806"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:43.814" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:43.815" starttime="20180716 10:17:43.808"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:48.816" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:48.816" starttime="20180716 10:17:43.815"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:48.818" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:17:48.819" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:17:48.819" starttime="20180716 10:17:48.817"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:48.823" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:48.823" starttime="20180716 10:17:48.821"></status>
</kw>
<msg timestamp="20180716 10:17:48.823" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:48.824" starttime="20180716 10:17:48.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:48.827" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:48.827" starttime="20180716 10:17:48.826"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:48.827" starttime="20180716 10:17:48.824"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:48.828" starttime="20180716 10:17:43.806"></status>
</kw>
<kw type="foritem" name="${i} = 84">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:48.830" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:48.830" starttime="20180716 10:17:48.829"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:48.837" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:48.837" starttime="20180716 10:17:48.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:53.839" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:53.839" starttime="20180716 10:17:48.838"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:53.841" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:53.841" starttime="20180716 10:17:53.840"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:53.845" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:53.845" starttime="20180716 10:17:53.844"></status>
</kw>
<msg timestamp="20180716 10:17:53.846" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:53.846" starttime="20180716 10:17:53.842"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:53.849" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:53.850" starttime="20180716 10:17:53.849"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:53.850" starttime="20180716 10:17:53.847"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:53.850" starttime="20180716 10:17:48.828"></status>
</kw>
<kw type="foritem" name="${i} = 85">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:53.853" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:53.853" starttime="20180716 10:17:53.851"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:53.860" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:53.861" starttime="20180716 10:17:53.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:17:58.862" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:17:58.862" starttime="20180716 10:17:53.861"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:17:58.864" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:17:58.864" starttime="20180716 10:17:58.863"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:17:58.867" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:17:58.867" starttime="20180716 10:17:58.866"></status>
</kw>
<msg timestamp="20180716 10:17:58.868" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:17:58.868" starttime="20180716 10:17:58.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:17:58.871" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:17:58.871" starttime="20180716 10:17:58.870"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:58.871" starttime="20180716 10:17:58.868"></status>
</kw>
<status status="PASS" endtime="20180716 10:17:58.872" starttime="20180716 10:17:53.850"></status>
</kw>
<kw type="foritem" name="${i} = 86">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:17:58.874" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:58.874" starttime="20180716 10:17:58.872"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:17:58.880" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:17:58.880" starttime="20180716 10:17:58.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:03.882" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:03.882" starttime="20180716 10:17:58.881"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:03.884" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:03.885" starttime="20180716 10:18:03.883"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:03.889" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:03.889" starttime="20180716 10:18:03.887"></status>
</kw>
<msg timestamp="20180716 10:18:03.889" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:03.890" starttime="20180716 10:18:03.886"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:03.893" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:03.893" starttime="20180716 10:18:03.892"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:03.893" starttime="20180716 10:18:03.890"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:03.893" starttime="20180716 10:17:58.872"></status>
</kw>
<kw type="foritem" name="${i} = 87">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:03.896" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:03.896" starttime="20180716 10:18:03.895"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:03.903" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:03.903" starttime="20180716 10:18:03.897"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:08.904" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:08.904" starttime="20180716 10:18:03.903"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:08.906" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:18:08.907" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:18:08.907" starttime="20180716 10:18:08.905"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:08.911" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:08.911" starttime="20180716 10:18:08.909"></status>
</kw>
<msg timestamp="20180716 10:18:08.911" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:08.912" starttime="20180716 10:18:08.908"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:08.914" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:08.915" starttime="20180716 10:18:08.914"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:08.915" starttime="20180716 10:18:08.912"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:08.915" starttime="20180716 10:18:03.894"></status>
</kw>
<kw type="foritem" name="${i} = 88">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:08.917" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:08.917" starttime="20180716 10:18:08.916"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:08.923" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:08.923" starttime="20180716 10:18:08.918"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:13.924" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:13.924" starttime="20180716 10:18:08.924"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:13.926" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:13.926" starttime="20180716 10:18:13.925"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:13.930" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:13.930" starttime="20180716 10:18:13.929"></status>
</kw>
<msg timestamp="20180716 10:18:13.931" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:13.931" starttime="20180716 10:18:13.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:13.933" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:13.934" starttime="20180716 10:18:13.933"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:13.934" starttime="20180716 10:18:13.931"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:13.934" starttime="20180716 10:18:08.915"></status>
</kw>
<kw type="foritem" name="${i} = 89">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:13.936" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:13.936" starttime="20180716 10:18:13.935"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:13.942" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:13.942" starttime="20180716 10:18:13.937"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:18.944" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:18.944" starttime="20180716 10:18:13.943"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:18.945" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:18.945" starttime="20180716 10:18:18.944"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:18.947" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:18.947" starttime="20180716 10:18:18.946"></status>
</kw>
<msg timestamp="20180716 10:18:18.947" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:18.947" starttime="20180716 10:18:18.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:18.949" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:18.949" starttime="20180716 10:18:18.948"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:18.949" starttime="20180716 10:18:18.947"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:18.949" starttime="20180716 10:18:13.934"></status>
</kw>
<kw type="foritem" name="${i} = 90">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:18.950" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:18.950" starttime="20180716 10:18:18.949"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:18.954" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:18.955" starttime="20180716 10:18:18.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:23.955" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:23.956" starttime="20180716 10:18:18.955"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:23.957" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:23.958" starttime="20180716 10:18:23.956"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:23.961" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:23.962" starttime="20180716 10:18:23.960"></status>
</kw>
<msg timestamp="20180716 10:18:23.962" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:23.962" starttime="20180716 10:18:23.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:23.965" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:23.966" starttime="20180716 10:18:23.965"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:23.966" starttime="20180716 10:18:23.963"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:23.966" starttime="20180716 10:18:18.949"></status>
</kw>
<kw type="foritem" name="${i} = 91">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:23.969" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:23.969" starttime="20180716 10:18:23.967"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:23.976" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:23.976" starttime="20180716 10:18:23.970"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:28.977" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:28.978" starttime="20180716 10:18:23.977"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:28.979" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:18:28.980" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:18:28.980" starttime="20180716 10:18:28.978"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:28.984" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:28.984" starttime="20180716 10:18:28.982"></status>
</kw>
<msg timestamp="20180716 10:18:28.984" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:28.985" starttime="20180716 10:18:28.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:28.987" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:28.987" starttime="20180716 10:18:28.986"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:28.987" starttime="20180716 10:18:28.985"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:28.988" starttime="20180716 10:18:23.967"></status>
</kw>
<kw type="foritem" name="${i} = 92">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:28.990" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:28.990" starttime="20180716 10:18:28.988"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:28.994" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:28.994" starttime="20180716 10:18:28.990"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:33.996" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:33.996" starttime="20180716 10:18:28.995"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:33.998" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:33.999" starttime="20180716 10:18:33.997"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:34.003" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:34.003" starttime="20180716 10:18:34.001"></status>
</kw>
<msg timestamp="20180716 10:18:34.003" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:34.004" starttime="20180716 10:18:33.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:34.007" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:34.007" starttime="20180716 10:18:34.006"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:34.008" starttime="20180716 10:18:34.004"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:34.008" starttime="20180716 10:18:28.988"></status>
</kw>
<kw type="foritem" name="${i} = 93">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:34.011" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:34.011" starttime="20180716 10:18:34.009"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:34.018" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:34.019" starttime="20180716 10:18:34.012"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:39.021" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:39.021" starttime="20180716 10:18:34.020"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:39.023" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:39.023" starttime="20180716 10:18:39.022"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:39.027" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:39.027" starttime="20180716 10:18:39.026"></status>
</kw>
<msg timestamp="20180716 10:18:39.028" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:39.028" starttime="20180716 10:18:39.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:39.031" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:39.032" starttime="20180716 10:18:39.031"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:39.032" starttime="20180716 10:18:39.029"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:39.032" starttime="20180716 10:18:34.008"></status>
</kw>
<kw type="foritem" name="${i} = 94">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:39.034" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:39.035" starttime="20180716 10:18:39.033"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:39.042" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:39.042" starttime="20180716 10:18:39.035"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:44.043" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:44.043" starttime="20180716 10:18:39.043"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:44.045" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:44.045" starttime="20180716 10:18:44.044"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:44.048" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:44.049" starttime="20180716 10:18:44.047"></status>
</kw>
<msg timestamp="20180716 10:18:44.049" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:44.049" starttime="20180716 10:18:44.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:44.052" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:44.052" starttime="20180716 10:18:44.051"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:44.052" starttime="20180716 10:18:44.050"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:44.052" starttime="20180716 10:18:39.032"></status>
</kw>
<kw type="foritem" name="${i} = 95">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:44.054" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:44.054" starttime="20180716 10:18:44.053"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:44.061" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:44.061" starttime="20180716 10:18:44.055"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:49.062" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:49.062" starttime="20180716 10:18:44.062"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:49.064" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:18:49.064" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:18:49.064" starttime="20180716 10:18:49.063"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:49.067" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:49.067" starttime="20180716 10:18:49.066"></status>
</kw>
<msg timestamp="20180716 10:18:49.068" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:49.068" starttime="20180716 10:18:49.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:49.071" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:49.071" starttime="20180716 10:18:49.070"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:49.071" starttime="20180716 10:18:49.069"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:49.071" starttime="20180716 10:18:44.052"></status>
</kw>
<kw type="foritem" name="${i} = 96">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:49.074" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:49.074" starttime="20180716 10:18:49.072"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:49.079" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:49.079" starttime="20180716 10:18:49.074"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:54.080" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:54.080" starttime="20180716 10:18:49.080"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:54.082" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:54.082" starttime="20180716 10:18:54.081"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:54.086" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:54.086" starttime="20180716 10:18:54.084"></status>
</kw>
<msg timestamp="20180716 10:18:54.086" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:54.086" starttime="20180716 10:18:54.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:54.089" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:54.089" starttime="20180716 10:18:54.088"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:54.089" starttime="20180716 10:18:54.087"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:54.090" starttime="20180716 10:18:49.072"></status>
</kw>
<kw type="foritem" name="${i} = 97">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:54.092" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:54.092" starttime="20180716 10:18:54.090"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:54.096" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:54.096" starttime="20180716 10:18:54.092"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:18:59.097" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:18:59.097" starttime="20180716 10:18:54.097"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:18:59.099" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:18:59.099" starttime="20180716 10:18:59.098"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:18:59.103" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:18:59.103" starttime="20180716 10:18:59.102"></status>
</kw>
<msg timestamp="20180716 10:18:59.104" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:18:59.104" starttime="20180716 10:18:59.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:18:59.107" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:18:59.107" starttime="20180716 10:18:59.106"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:59.107" starttime="20180716 10:18:59.105"></status>
</kw>
<status status="PASS" endtime="20180716 10:18:59.107" starttime="20180716 10:18:54.090"></status>
</kw>
<kw type="foritem" name="${i} = 98">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:18:59.110" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:59.110" starttime="20180716 10:18:59.108"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:18:59.115" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:18:59.115" starttime="20180716 10:18:59.110"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:04.117" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:04.117" starttime="20180716 10:18:59.116"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:04.118" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:04.118" starttime="20180716 10:19:04.118"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:04.120" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:04.120" starttime="20180716 10:19:04.119"></status>
</kw>
<msg timestamp="20180716 10:19:04.121" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:04.121" starttime="20180716 10:19:04.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:04.123" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:04.123" starttime="20180716 10:19:04.122"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:04.123" starttime="20180716 10:19:04.121"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:04.123" starttime="20180716 10:18:59.108"></status>
</kw>
<kw type="foritem" name="${i} = 99">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:04.125" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:04.125" starttime="20180716 10:19:04.124"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:04.130" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:04.130" starttime="20180716 10:19:04.125"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:09.131" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:09.131" starttime="20180716 10:19:04.130"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:09.131" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:19:09.131" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:19:09.132" starttime="20180716 10:19:09.131"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:09.133" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:09.133" starttime="20180716 10:19:09.132"></status>
</kw>
<msg timestamp="20180716 10:19:09.133" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:09.133" starttime="20180716 10:19:09.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:09.134" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:09.134" starttime="20180716 10:19:09.133"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:09.134" starttime="20180716 10:19:09.133"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:09.134" starttime="20180716 10:19:04.124"></status>
</kw>
<kw type="foritem" name="${i} = 100">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:09.135" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:09.135" starttime="20180716 10:19:09.134"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:09.137" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:09.137" starttime="20180716 10:19:09.135"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:14.138" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:14.138" starttime="20180716 10:19:09.137"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:14.138" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:14.138" starttime="20180716 10:19:14.138"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:14.139" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:14.139" starttime="20180716 10:19:14.139"></status>
</kw>
<msg timestamp="20180716 10:19:14.140" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:14.140" starttime="20180716 10:19:14.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:14.140" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:14.141" starttime="20180716 10:19:14.140"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:14.141" starttime="20180716 10:19:14.140"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:14.141" starttime="20180716 10:19:09.134"></status>
</kw>
<kw type="foritem" name="${i} = 101">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:14.141" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:14.141" starttime="20180716 10:19:14.141"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:14.143" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:14.143" starttime="20180716 10:19:14.141"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:19.144" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:19.144" starttime="20180716 10:19:14.143"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:19.144" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:19.144" starttime="20180716 10:19:19.144"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:19.145" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:19.146" starttime="20180716 10:19:19.145"></status>
</kw>
<msg timestamp="20180716 10:19:19.146" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:19.146" starttime="20180716 10:19:19.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:19.147" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:19.147" starttime="20180716 10:19:19.146"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:19.147" starttime="20180716 10:19:19.146"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:19.147" starttime="20180716 10:19:14.141"></status>
</kw>
<kw type="foritem" name="${i} = 102">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:19.147" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:19.148" starttime="20180716 10:19:19.147"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:19.150" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:19.150" starttime="20180716 10:19:19.148"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:24.151" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:24.151" starttime="20180716 10:19:19.150"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:24.151" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:24.151" starttime="20180716 10:19:24.151"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:24.152" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:24.153" starttime="20180716 10:19:24.152"></status>
</kw>
<msg timestamp="20180716 10:19:24.153" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:24.153" starttime="20180716 10:19:24.152"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:24.153" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:24.154" starttime="20180716 10:19:24.153"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:24.154" starttime="20180716 10:19:24.153"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:24.154" starttime="20180716 10:19:19.147"></status>
</kw>
<kw type="foritem" name="${i} = 103">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:24.154" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:24.154" starttime="20180716 10:19:24.154"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:24.157" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:24.157" starttime="20180716 10:19:24.155"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:29.157" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:29.157" starttime="20180716 10:19:24.157"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:29.157" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:19:29.157" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:19:29.158" starttime="20180716 10:19:29.157"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:29.159" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:29.159" starttime="20180716 10:19:29.158"></status>
</kw>
<msg timestamp="20180716 10:19:29.159" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:29.159" starttime="20180716 10:19:29.158"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:29.160" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:29.160" starttime="20180716 10:19:29.159"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:29.160" starttime="20180716 10:19:29.159"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:29.160" starttime="20180716 10:19:24.154"></status>
</kw>
<kw type="foritem" name="${i} = 104">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:29.160" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:29.160" starttime="20180716 10:19:29.160"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:29.162" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:29.162" starttime="20180716 10:19:29.161"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:34.163" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:34.163" starttime="20180716 10:19:29.163"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:34.163" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:34.163" starttime="20180716 10:19:34.163"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:34.164" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:34.164" starttime="20180716 10:19:34.164"></status>
</kw>
<msg timestamp="20180716 10:19:34.165" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:34.165" starttime="20180716 10:19:34.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:34.165" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:34.165" starttime="20180716 10:19:34.165"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:34.166" starttime="20180716 10:19:34.165"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:34.166" starttime="20180716 10:19:29.160"></status>
</kw>
<kw type="foritem" name="${i} = 105">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:34.166" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:34.166" starttime="20180716 10:19:34.166"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:34.168" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:34.169" starttime="20180716 10:19:34.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:39.169" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:39.169" starttime="20180716 10:19:34.169"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:39.169" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:39.169" starttime="20180716 10:19:39.169"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:39.170" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:39.171" starttime="20180716 10:19:39.170"></status>
</kw>
<msg timestamp="20180716 10:19:39.171" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:39.171" starttime="20180716 10:19:39.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:39.171" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:39.172" starttime="20180716 10:19:39.171"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:39.172" starttime="20180716 10:19:39.171"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:39.172" starttime="20180716 10:19:34.166"></status>
</kw>
<kw type="foritem" name="${i} = 106">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:39.172" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:39.172" starttime="20180716 10:19:39.172"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:39.174" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:39.174" starttime="20180716 10:19:39.172"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:44.175" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:44.175" starttime="20180716 10:19:39.175"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:44.175" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:44.175" starttime="20180716 10:19:44.175"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:44.176" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:44.176" starttime="20180716 10:19:44.176"></status>
</kw>
<msg timestamp="20180716 10:19:44.177" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:44.177" starttime="20180716 10:19:44.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:44.177" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:44.178" starttime="20180716 10:19:44.177"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:44.178" starttime="20180716 10:19:44.177"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:44.178" starttime="20180716 10:19:39.172"></status>
</kw>
<kw type="foritem" name="${i} = 107">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:44.178" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:44.178" starttime="20180716 10:19:44.178"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:44.180" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:44.180" starttime="20180716 10:19:44.178"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:49.181" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:49.181" starttime="20180716 10:19:44.181"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:49.181" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:19:49.181" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:19:49.181" starttime="20180716 10:19:49.181"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:49.183" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:49.183" starttime="20180716 10:19:49.182"></status>
</kw>
<msg timestamp="20180716 10:19:49.183" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:49.183" starttime="20180716 10:19:49.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:49.184" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:49.184" starttime="20180716 10:19:49.184"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:49.184" starttime="20180716 10:19:49.183"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:49.184" starttime="20180716 10:19:44.178"></status>
</kw>
<kw type="foritem" name="${i} = 108">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:49.185" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:49.185" starttime="20180716 10:19:49.184"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:49.187" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:49.187" starttime="20180716 10:19:49.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:54.187" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:54.187" starttime="20180716 10:19:49.187"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:54.187" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:54.187" starttime="20180716 10:19:54.187"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:54.188" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:54.188" starttime="20180716 10:19:54.188"></status>
</kw>
<msg timestamp="20180716 10:19:54.188" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:54.189" starttime="20180716 10:19:54.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:54.189" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:54.189" starttime="20180716 10:19:54.189"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:54.189" starttime="20180716 10:19:54.189"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:54.190" starttime="20180716 10:19:49.184"></status>
</kw>
<kw type="foritem" name="${i} = 109">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:54.190" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:54.190" starttime="20180716 10:19:54.190"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:54.192" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:54.193" starttime="20180716 10:19:54.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:19:59.193" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:19:59.193" starttime="20180716 10:19:54.193"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:19:59.193" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:19:59.193" starttime="20180716 10:19:59.193"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:19:59.194" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:19:59.194" starttime="20180716 10:19:59.194"></status>
</kw>
<msg timestamp="20180716 10:19:59.195" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:19:59.195" starttime="20180716 10:19:59.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:19:59.195" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:19:59.195" starttime="20180716 10:19:59.195"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:59.195" starttime="20180716 10:19:59.195"></status>
</kw>
<status status="PASS" endtime="20180716 10:19:59.196" starttime="20180716 10:19:54.190"></status>
</kw>
<kw type="foritem" name="${i} = 110">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:19:59.196" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:59.196" starttime="20180716 10:19:59.196"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:19:59.198" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:19:59.198" starttime="20180716 10:19:59.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:04.198" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:04.198" starttime="20180716 10:19:59.198"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:04.198" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:04.198" starttime="20180716 10:20:04.198"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:04.199" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:04.199" starttime="20180716 10:20:04.199"></status>
</kw>
<msg timestamp="20180716 10:20:04.199" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:04.200" starttime="20180716 10:20:04.199"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:04.200" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:04.200" starttime="20180716 10:20:04.200"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:04.200" starttime="20180716 10:20:04.200"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:04.200" starttime="20180716 10:19:59.196"></status>
</kw>
<kw type="foritem" name="${i} = 111">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:04.201" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:04.201" starttime="20180716 10:20:04.201"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:04.203" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:04.203" starttime="20180716 10:20:04.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:09.203" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:09.203" starttime="20180716 10:20:04.203"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:09.203" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:20:09.203" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:20:09.203" starttime="20180716 10:20:09.203"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:09.204" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:09.204" starttime="20180716 10:20:09.204"></status>
</kw>
<msg timestamp="20180716 10:20:09.204" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:09.205" starttime="20180716 10:20:09.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:09.206" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:09.206" starttime="20180716 10:20:09.205"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:09.206" starttime="20180716 10:20:09.205"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:09.206" starttime="20180716 10:20:04.201"></status>
</kw>
<kw type="foritem" name="${i} = 112">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:09.206" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:09.206" starttime="20180716 10:20:09.206"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:09.209" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:09.209" starttime="20180716 10:20:09.207"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:14.209" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:14.209" starttime="20180716 10:20:09.209"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:14.209" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:14.209" starttime="20180716 10:20:14.209"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:14.210" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:14.210" starttime="20180716 10:20:14.210"></status>
</kw>
<msg timestamp="20180716 10:20:14.210" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:14.210" starttime="20180716 10:20:14.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:14.211" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:14.211" starttime="20180716 10:20:14.211"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:14.211" starttime="20180716 10:20:14.211"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:14.211" starttime="20180716 10:20:09.206"></status>
</kw>
<kw type="foritem" name="${i} = 113">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:14.212" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:14.212" starttime="20180716 10:20:14.212"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:14.214" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:14.214" starttime="20180716 10:20:14.212"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:19.214" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:19.214" starttime="20180716 10:20:14.214"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:19.214" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:19.214" starttime="20180716 10:20:19.214"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:19.215" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:19.215" starttime="20180716 10:20:19.215"></status>
</kw>
<msg timestamp="20180716 10:20:19.216" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:19.216" starttime="20180716 10:20:19.215"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:19.216" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:19.216" starttime="20180716 10:20:19.216"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:19.216" starttime="20180716 10:20:19.216"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:19.216" starttime="20180716 10:20:14.212"></status>
</kw>
<kw type="foritem" name="${i} = 114">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:19.218" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:19.218" starttime="20180716 10:20:19.217"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:19.220" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:19.220" starttime="20180716 10:20:19.218"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:24.220" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:24.220" starttime="20180716 10:20:19.220"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:24.220" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:24.220" starttime="20180716 10:20:24.220"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:24.221" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:24.221" starttime="20180716 10:20:24.221"></status>
</kw>
<msg timestamp="20180716 10:20:24.221" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:24.222" starttime="20180716 10:20:24.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:24.222" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:24.222" starttime="20180716 10:20:24.222"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:24.222" starttime="20180716 10:20:24.222"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:24.222" starttime="20180716 10:20:19.217"></status>
</kw>
<kw type="foritem" name="${i} = 115">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:24.223" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:24.223" starttime="20180716 10:20:24.223"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:24.225" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:24.225" starttime="20180716 10:20:24.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:29.225" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:29.225" starttime="20180716 10:20:24.225"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:29.225" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:20:29.225" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:20:29.225" starttime="20180716 10:20:29.225"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:29.226" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:29.226" starttime="20180716 10:20:29.226"></status>
</kw>
<msg timestamp="20180716 10:20:29.226" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:29.227" starttime="20180716 10:20:29.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:29.227" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:29.227" starttime="20180716 10:20:29.227"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:29.227" starttime="20180716 10:20:29.227"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:29.227" starttime="20180716 10:20:24.223"></status>
</kw>
<kw type="foritem" name="${i} = 116">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:29.228" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:29.228" starttime="20180716 10:20:29.228"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:29.230" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:29.231" starttime="20180716 10:20:29.228"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:34.231" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:34.231" starttime="20180716 10:20:29.231"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:34.231" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:34.231" starttime="20180716 10:20:34.231"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:34.232" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:34.232" starttime="20180716 10:20:34.232"></status>
</kw>
<msg timestamp="20180716 10:20:34.232" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:34.232" starttime="20180716 10:20:34.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:34.233" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:34.233" starttime="20180716 10:20:34.233"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:34.233" starttime="20180716 10:20:34.233"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:34.233" starttime="20180716 10:20:29.228"></status>
</kw>
<kw type="foritem" name="${i} = 117">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:34.234" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:34.234" starttime="20180716 10:20:34.234"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:34.236" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:34.236" starttime="20180716 10:20:34.234"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:39.237" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:39.237" starttime="20180716 10:20:34.236"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:39.237" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:39.237" starttime="20180716 10:20:39.237"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:39.238" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:39.238" starttime="20180716 10:20:39.238"></status>
</kw>
<msg timestamp="20180716 10:20:39.239" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:39.239" starttime="20180716 10:20:39.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:39.239" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:39.239" starttime="20180716 10:20:39.239"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:39.239" starttime="20180716 10:20:39.239"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:39.239" starttime="20180716 10:20:34.234"></status>
</kw>
<kw type="foritem" name="${i} = 118">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:39.240" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:39.240" starttime="20180716 10:20:39.240"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:39.242" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:39.242" starttime="20180716 10:20:39.240"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:44.243" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:44.243" starttime="20180716 10:20:39.243"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:44.243" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:44.243" starttime="20180716 10:20:44.243"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:44.244" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:44.244" starttime="20180716 10:20:44.244"></status>
</kw>
<msg timestamp="20180716 10:20:44.244" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:44.244" starttime="20180716 10:20:44.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:44.245" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:44.245" starttime="20180716 10:20:44.245"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:44.245" starttime="20180716 10:20:44.245"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:44.245" starttime="20180716 10:20:39.240"></status>
</kw>
<kw type="foritem" name="${i} = 119">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:44.246" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:44.246" starttime="20180716 10:20:44.246"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:44.248" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:44.248" starttime="20180716 10:20:44.246"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:49.249" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:49.249" starttime="20180716 10:20:44.249"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:49.249" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:20:49.249" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:20:49.249" starttime="20180716 10:20:49.249"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:49.250" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:49.251" starttime="20180716 10:20:49.250"></status>
</kw>
<msg timestamp="20180716 10:20:49.251" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:49.251" starttime="20180716 10:20:49.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:49.251" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:49.252" starttime="20180716 10:20:49.251"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:49.252" starttime="20180716 10:20:49.251"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:49.252" starttime="20180716 10:20:44.245"></status>
</kw>
<kw type="foritem" name="${i} = 120">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:49.252" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:49.252" starttime="20180716 10:20:49.252"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:49.254" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:49.254" starttime="20180716 10:20:49.253"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:54.255" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:54.255" starttime="20180716 10:20:49.255"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:54.255" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:54.255" starttime="20180716 10:20:54.255"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:54.256" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:54.256" starttime="20180716 10:20:54.256"></status>
</kw>
<msg timestamp="20180716 10:20:54.257" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:54.257" starttime="20180716 10:20:54.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:54.257" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:54.257" starttime="20180716 10:20:54.257"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:54.257" starttime="20180716 10:20:54.257"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:54.258" starttime="20180716 10:20:49.252"></status>
</kw>
<kw type="foritem" name="${i} = 121">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:54.258" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:54.258" starttime="20180716 10:20:54.258"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:54.260" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:54.260" starttime="20180716 10:20:54.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:20:59.261" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:20:59.261" starttime="20180716 10:20:54.261"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:20:59.261" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:20:59.261" starttime="20180716 10:20:59.261"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:20:59.262" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:20:59.262" starttime="20180716 10:20:59.262"></status>
</kw>
<msg timestamp="20180716 10:20:59.262" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:20:59.262" starttime="20180716 10:20:59.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:20:59.263" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:20:59.263" starttime="20180716 10:20:59.263"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:59.263" starttime="20180716 10:20:59.263"></status>
</kw>
<status status="PASS" endtime="20180716 10:20:59.263" starttime="20180716 10:20:54.258"></status>
</kw>
<kw type="foritem" name="${i} = 122">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:20:59.264" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:59.264" starttime="20180716 10:20:59.264"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:20:59.266" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:20:59.266" starttime="20180716 10:20:59.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:04.266" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:04.266" starttime="20180716 10:20:59.266"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:04.266" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:04.266" starttime="20180716 10:21:04.266"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:04.268" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:04.268" starttime="20180716 10:21:04.267"></status>
</kw>
<msg timestamp="20180716 10:21:04.268" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:04.268" starttime="20180716 10:21:04.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:04.269" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:04.269" starttime="20180716 10:21:04.269"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:04.269" starttime="20180716 10:21:04.268"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:04.269" starttime="20180716 10:20:59.263"></status>
</kw>
<kw type="foritem" name="${i} = 123">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:04.270" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:04.270" starttime="20180716 10:21:04.269"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:04.271" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:04.272" starttime="20180716 10:21:04.270"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:09.272" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:09.272" starttime="20180716 10:21:04.272"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:09.272" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:21:09.272" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:21:09.272" starttime="20180716 10:21:09.272"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:09.274" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:09.274" starttime="20180716 10:21:09.273"></status>
</kw>
<msg timestamp="20180716 10:21:09.274" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:09.274" starttime="20180716 10:21:09.273"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:09.275" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:09.275" starttime="20180716 10:21:09.275"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:09.275" starttime="20180716 10:21:09.274"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:09.275" starttime="20180716 10:21:04.269"></status>
</kw>
<kw type="foritem" name="${i} = 124">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:09.276" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:09.276" starttime="20180716 10:21:09.275"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:09.277" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:09.277" starttime="20180716 10:21:09.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:14.278" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:14.278" starttime="20180716 10:21:09.277"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:14.278" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:14.278" starttime="20180716 10:21:14.278"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:14.279" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:14.280" starttime="20180716 10:21:14.279"></status>
</kw>
<msg timestamp="20180716 10:21:14.280" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:14.280" starttime="20180716 10:21:14.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:14.281" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:14.281" starttime="20180716 10:21:14.280"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:14.281" starttime="20180716 10:21:14.280"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:14.281" starttime="20180716 10:21:09.275"></status>
</kw>
<kw type="foritem" name="${i} = 125">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:14.282" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:14.282" starttime="20180716 10:21:14.281"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:14.284" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:14.284" starttime="20180716 10:21:14.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:19.284" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:19.284" starttime="20180716 10:21:14.284"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:19.284" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:19.284" starttime="20180716 10:21:19.284"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:19.285" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:19.285" starttime="20180716 10:21:19.285"></status>
</kw>
<msg timestamp="20180716 10:21:19.285" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:19.285" starttime="20180716 10:21:19.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:19.286" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:19.286" starttime="20180716 10:21:19.286"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:19.286" starttime="20180716 10:21:19.286"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:19.286" starttime="20180716 10:21:14.281"></status>
</kw>
<kw type="foritem" name="${i} = 126">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:19.287" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:19.287" starttime="20180716 10:21:19.287"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:19.289" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:19.289" starttime="20180716 10:21:19.287"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:24.289" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:24.289" starttime="20180716 10:21:19.289"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:24.289" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:24.289" starttime="20180716 10:21:24.289"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:24.290" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:24.290" starttime="20180716 10:21:24.290"></status>
</kw>
<msg timestamp="20180716 10:21:24.290" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:24.290" starttime="20180716 10:21:24.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:24.291" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:24.291" starttime="20180716 10:21:24.291"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:24.291" starttime="20180716 10:21:24.291"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:24.291" starttime="20180716 10:21:19.287"></status>
</kw>
<kw type="foritem" name="${i} = 127">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:24.292" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:24.292" starttime="20180716 10:21:24.292"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:24.294" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:24.294" starttime="20180716 10:21:24.292"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:29.295" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:29.295" starttime="20180716 10:21:24.295"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:29.295" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:21:29.295" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:21:29.295" starttime="20180716 10:21:29.295"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:29.296" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:29.296" starttime="20180716 10:21:29.296"></status>
</kw>
<msg timestamp="20180716 10:21:29.297" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:29.297" starttime="20180716 10:21:29.296"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:29.297" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:29.297" starttime="20180716 10:21:29.297"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:29.298" starttime="20180716 10:21:29.297"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:29.298" starttime="20180716 10:21:24.291"></status>
</kw>
<kw type="foritem" name="${i} = 128">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:29.298" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:29.298" starttime="20180716 10:21:29.298"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:29.301" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:29.301" starttime="20180716 10:21:29.298"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:34.301" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:34.301" starttime="20180716 10:21:29.301"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:34.301" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:34.301" starttime="20180716 10:21:34.301"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:34.302" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:34.302" starttime="20180716 10:21:34.302"></status>
</kw>
<msg timestamp="20180716 10:21:34.302" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:34.302" starttime="20180716 10:21:34.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:34.303" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:34.303" starttime="20180716 10:21:34.303"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:34.303" starttime="20180716 10:21:34.303"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:34.303" starttime="20180716 10:21:29.298"></status>
</kw>
<kw type="foritem" name="${i} = 129">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:34.304" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:34.304" starttime="20180716 10:21:34.304"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:34.306" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:34.306" starttime="20180716 10:21:34.304"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:39.307" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:39.307" starttime="20180716 10:21:34.306"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:39.307" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:39.307" starttime="20180716 10:21:39.307"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:39.308" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:39.308" starttime="20180716 10:21:39.308"></status>
</kw>
<msg timestamp="20180716 10:21:39.308" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:39.309" starttime="20180716 10:21:39.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:39.309" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:39.309" starttime="20180716 10:21:39.309"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:39.309" starttime="20180716 10:21:39.309"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:39.310" starttime="20180716 10:21:34.303"></status>
</kw>
<kw type="foritem" name="${i} = 130">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:39.310" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:39.310" starttime="20180716 10:21:39.310"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:39.312" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:39.313" starttime="20180716 10:21:39.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:44.313" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:44.313" starttime="20180716 10:21:39.313"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:44.313" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:44.313" starttime="20180716 10:21:44.313"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:44.314" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:44.314" starttime="20180716 10:21:44.314"></status>
</kw>
<msg timestamp="20180716 10:21:44.315" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:44.315" starttime="20180716 10:21:44.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:44.315" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:44.316" starttime="20180716 10:21:44.315"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:44.316" starttime="20180716 10:21:44.315"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:44.316" starttime="20180716 10:21:39.310"></status>
</kw>
<kw type="foritem" name="${i} = 131">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:44.316" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:44.316" starttime="20180716 10:21:44.316"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:44.318" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:44.318" starttime="20180716 10:21:44.317"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:49.318" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:49.318" starttime="20180716 10:21:44.318"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:49.318" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:21:49.318" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:21:49.318" starttime="20180716 10:21:49.318"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:49.319" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:49.320" starttime="20180716 10:21:49.319"></status>
</kw>
<msg timestamp="20180716 10:21:49.320" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:49.320" starttime="20180716 10:21:49.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:49.320" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:49.321" starttime="20180716 10:21:49.320"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:49.321" starttime="20180716 10:21:49.320"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:49.321" starttime="20180716 10:21:44.316"></status>
</kw>
<kw type="foritem" name="${i} = 132">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:49.321" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:49.321" starttime="20180716 10:21:49.321"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:49.323" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:49.324" starttime="20180716 10:21:49.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:54.324" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:54.324" starttime="20180716 10:21:49.324"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:54.324" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:54.324" starttime="20180716 10:21:54.324"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:54.325" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:54.325" starttime="20180716 10:21:54.325"></status>
</kw>
<msg timestamp="20180716 10:21:54.325" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:54.325" starttime="20180716 10:21:54.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:54.326" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:54.326" starttime="20180716 10:21:54.326"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:54.326" starttime="20180716 10:21:54.326"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:54.326" starttime="20180716 10:21:49.321"></status>
</kw>
<kw type="foritem" name="${i} = 133">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:54.327" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:54.327" starttime="20180716 10:21:54.327"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:54.329" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:54.329" starttime="20180716 10:21:54.327"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:21:59.329" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:21:59.329" starttime="20180716 10:21:54.329"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:21:59.329" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:21:59.329" starttime="20180716 10:21:59.329"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:21:59.330" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:21:59.331" starttime="20180716 10:21:59.330"></status>
</kw>
<msg timestamp="20180716 10:21:59.331" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:21:59.331" starttime="20180716 10:21:59.330"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:21:59.331" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:21:59.331" starttime="20180716 10:21:59.331"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:59.332" starttime="20180716 10:21:59.331"></status>
</kw>
<status status="PASS" endtime="20180716 10:21:59.332" starttime="20180716 10:21:54.326"></status>
</kw>
<kw type="foritem" name="${i} = 134">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:21:59.332" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:59.332" starttime="20180716 10:21:59.332"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:21:59.334" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:21:59.335" starttime="20180716 10:21:59.332"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:04.335" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:04.335" starttime="20180716 10:21:59.335"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:04.335" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:04.335" starttime="20180716 10:22:04.335"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:04.336" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:04.336" starttime="20180716 10:22:04.336"></status>
</kw>
<msg timestamp="20180716 10:22:04.336" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:04.336" starttime="20180716 10:22:04.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:04.337" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:04.337" starttime="20180716 10:22:04.337"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:04.337" starttime="20180716 10:22:04.337"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:04.337" starttime="20180716 10:21:59.332"></status>
</kw>
<kw type="foritem" name="${i} = 135">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:04.338" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:04.338" starttime="20180716 10:22:04.338"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:04.340" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:04.340" starttime="20180716 10:22:04.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:09.340" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:09.340" starttime="20180716 10:22:04.340"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:09.340" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:22:09.340" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:22:09.340" starttime="20180716 10:22:09.340"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:09.341" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:09.341" starttime="20180716 10:22:09.341"></status>
</kw>
<msg timestamp="20180716 10:22:09.341" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:09.341" starttime="20180716 10:22:09.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:09.342" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:09.342" starttime="20180716 10:22:09.342"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:09.342" starttime="20180716 10:22:09.342"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:09.342" starttime="20180716 10:22:04.337"></status>
</kw>
<kw type="foritem" name="${i} = 136">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:09.343" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:09.343" starttime="20180716 10:22:09.343"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:09.345" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:09.345" starttime="20180716 10:22:09.343"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:14.346" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:14.346" starttime="20180716 10:22:09.346"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:14.346" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:14.346" starttime="20180716 10:22:14.346"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:14.347" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:14.347" starttime="20180716 10:22:14.347"></status>
</kw>
<msg timestamp="20180716 10:22:14.348" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:14.348" starttime="20180716 10:22:14.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:14.348" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:14.348" starttime="20180716 10:22:14.348"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:14.348" starttime="20180716 10:22:14.348"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:14.348" starttime="20180716 10:22:09.342"></status>
</kw>
<kw type="foritem" name="${i} = 137">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:14.349" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:14.349" starttime="20180716 10:22:14.349"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:14.352" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:14.352" starttime="20180716 10:22:14.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:19.352" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:19.352" starttime="20180716 10:22:14.352"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:19.352" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:19.352" starttime="20180716 10:22:19.352"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:19.353" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:19.353" starttime="20180716 10:22:19.353"></status>
</kw>
<msg timestamp="20180716 10:22:19.354" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:19.354" starttime="20180716 10:22:19.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:19.355" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:19.355" starttime="20180716 10:22:19.354"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:19.355" starttime="20180716 10:22:19.354"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:19.355" starttime="20180716 10:22:14.349"></status>
</kw>
<kw type="foritem" name="${i} = 138">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:19.355" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:19.355" starttime="20180716 10:22:19.355"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:19.358" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:19.358" starttime="20180716 10:22:19.356"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:24.358" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:24.358" starttime="20180716 10:22:19.358"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:24.358" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:24.358" starttime="20180716 10:22:24.358"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:24.359" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:24.359" starttime="20180716 10:22:24.359"></status>
</kw>
<msg timestamp="20180716 10:22:24.359" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:24.359" starttime="20180716 10:22:24.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:24.360" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:24.360" starttime="20180716 10:22:24.360"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:24.360" starttime="20180716 10:22:24.360"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:24.360" starttime="20180716 10:22:19.355"></status>
</kw>
<kw type="foritem" name="${i} = 139">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:24.361" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:24.361" starttime="20180716 10:22:24.361"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:24.363" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:24.364" starttime="20180716 10:22:24.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:29.364" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:29.364" starttime="20180716 10:22:24.364"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:29.364" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:22:29.364" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:22:29.364" starttime="20180716 10:22:29.364"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:29.365" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:29.365" starttime="20180716 10:22:29.365"></status>
</kw>
<msg timestamp="20180716 10:22:29.365" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:29.366" starttime="20180716 10:22:29.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:29.366" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:29.366" starttime="20180716 10:22:29.366"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:29.366" starttime="20180716 10:22:29.366"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:29.367" starttime="20180716 10:22:24.360"></status>
</kw>
<kw type="foritem" name="${i} = 140">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:29.367" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:29.367" starttime="20180716 10:22:29.367"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:29.370" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:29.370" starttime="20180716 10:22:29.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:34.370" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:34.370" starttime="20180716 10:22:29.370"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:34.370" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:34.370" starttime="20180716 10:22:34.370"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:34.371" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:34.371" starttime="20180716 10:22:34.371"></status>
</kw>
<msg timestamp="20180716 10:22:34.371" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:34.371" starttime="20180716 10:22:34.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:34.372" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:34.372" starttime="20180716 10:22:34.372"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:34.372" starttime="20180716 10:22:34.372"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:34.372" starttime="20180716 10:22:29.367"></status>
</kw>
<kw type="foritem" name="${i} = 141">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:34.373" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:34.373" starttime="20180716 10:22:34.373"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:34.375" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:34.375" starttime="20180716 10:22:34.373"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:39.375" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:39.375" starttime="20180716 10:22:34.375"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:39.375" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:39.375" starttime="20180716 10:22:39.375"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:39.376" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:39.376" starttime="20180716 10:22:39.376"></status>
</kw>
<msg timestamp="20180716 10:22:39.377" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:39.377" starttime="20180716 10:22:39.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:39.377" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:39.377" starttime="20180716 10:22:39.377"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:39.377" starttime="20180716 10:22:39.377"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:39.377" starttime="20180716 10:22:34.372"></status>
</kw>
<kw type="foritem" name="${i} = 142">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:39.378" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:39.378" starttime="20180716 10:22:39.378"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:39.381" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:39.381" starttime="20180716 10:22:39.378"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:44.381" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:44.381" starttime="20180716 10:22:39.381"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:44.381" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:44.381" starttime="20180716 10:22:44.381"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:44.382" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:44.382" starttime="20180716 10:22:44.382"></status>
</kw>
<msg timestamp="20180716 10:22:44.383" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:44.383" starttime="20180716 10:22:44.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:44.383" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:44.383" starttime="20180716 10:22:44.383"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:44.383" starttime="20180716 10:22:44.383"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:44.383" starttime="20180716 10:22:39.378"></status>
</kw>
<kw type="foritem" name="${i} = 143">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:44.384" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:44.384" starttime="20180716 10:22:44.384"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:44.386" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:44.386" starttime="20180716 10:22:44.384"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:49.387" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:49.387" starttime="20180716 10:22:44.387"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:49.387" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:22:49.387" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:22:49.387" starttime="20180716 10:22:49.387"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:49.388" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:49.388" starttime="20180716 10:22:49.388"></status>
</kw>
<msg timestamp="20180716 10:22:49.388" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:49.389" starttime="20180716 10:22:49.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:49.389" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:49.389" starttime="20180716 10:22:49.389"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:49.389" starttime="20180716 10:22:49.389"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:49.389" starttime="20180716 10:22:44.384"></status>
</kw>
<kw type="foritem" name="${i} = 144">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:49.390" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:49.390" starttime="20180716 10:22:49.390"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:49.392" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:49.392" starttime="20180716 10:22:49.390"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:54.392" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:54.392" starttime="20180716 10:22:49.392"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:54.392" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:54.392" starttime="20180716 10:22:54.392"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:54.393" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:54.393" starttime="20180716 10:22:54.393"></status>
</kw>
<msg timestamp="20180716 10:22:54.393" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:54.394" starttime="20180716 10:22:54.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:54.394" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:54.394" starttime="20180716 10:22:54.394"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:54.394" starttime="20180716 10:22:54.394"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:54.394" starttime="20180716 10:22:49.390"></status>
</kw>
<kw type="foritem" name="${i} = 145">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:54.395" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:54.395" starttime="20180716 10:22:54.395"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:54.397" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:54.397" starttime="20180716 10:22:54.395"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:22:59.398" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:22:59.398" starttime="20180716 10:22:54.398"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:22:59.398" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:22:59.398" starttime="20180716 10:22:59.398"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:22:59.399" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:22:59.399" starttime="20180716 10:22:59.399"></status>
</kw>
<msg timestamp="20180716 10:22:59.400" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:22:59.400" starttime="20180716 10:22:59.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:22:59.400" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:22:59.401" starttime="20180716 10:22:59.400"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:59.401" starttime="20180716 10:22:59.400"></status>
</kw>
<status status="PASS" endtime="20180716 10:22:59.401" starttime="20180716 10:22:54.395"></status>
</kw>
<kw type="foritem" name="${i} = 146">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:22:59.401" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:59.401" starttime="20180716 10:22:59.401"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:22:59.403" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:22:59.403" starttime="20180716 10:22:59.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:04.404" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:04.404" starttime="20180716 10:22:59.404"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:04.404" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:04.404" starttime="20180716 10:23:04.404"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:04.406" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:04.406" starttime="20180716 10:23:04.405"></status>
</kw>
<msg timestamp="20180716 10:23:04.406" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:04.406" starttime="20180716 10:23:04.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:04.407" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:04.407" starttime="20180716 10:23:04.406"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:04.407" starttime="20180716 10:23:04.406"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:04.407" starttime="20180716 10:22:59.401"></status>
</kw>
<kw type="foritem" name="${i} = 147">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:04.407" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:04.407" starttime="20180716 10:23:04.407"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:04.409" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:04.409" starttime="20180716 10:23:04.408"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:09.410" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:09.410" starttime="20180716 10:23:04.410"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:09.410" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:23:09.411" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:23:09.411" starttime="20180716 10:23:09.410"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:09.412" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:09.412" starttime="20180716 10:23:09.411"></status>
</kw>
<msg timestamp="20180716 10:23:09.412" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:09.412" starttime="20180716 10:23:09.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:09.413" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:09.413" starttime="20180716 10:23:09.412"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:09.413" starttime="20180716 10:23:09.412"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:09.413" starttime="20180716 10:23:04.407"></status>
</kw>
<kw type="foritem" name="${i} = 148">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:09.413" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:09.413" starttime="20180716 10:23:09.413"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:09.415" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:09.416" starttime="20180716 10:23:09.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:14.416" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:14.416" starttime="20180716 10:23:09.416"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:14.416" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:14.416" starttime="20180716 10:23:14.416"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:14.417" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:14.417" starttime="20180716 10:23:14.417"></status>
</kw>
<msg timestamp="20180716 10:23:14.417" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:14.417" starttime="20180716 10:23:14.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:14.418" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:14.418" starttime="20180716 10:23:14.418"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:14.418" starttime="20180716 10:23:14.418"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:14.418" starttime="20180716 10:23:09.413"></status>
</kw>
<kw type="foritem" name="${i} = 149">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:14.419" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:14.419" starttime="20180716 10:23:14.419"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:14.421" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:14.421" starttime="20180716 10:23:14.419"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:19.422" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:19.422" starttime="20180716 10:23:14.422"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:19.422" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:19.422" starttime="20180716 10:23:19.422"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:19.423" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:19.423" starttime="20180716 10:23:19.423"></status>
</kw>
<msg timestamp="20180716 10:23:19.423" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:19.423" starttime="20180716 10:23:19.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:19.424" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:19.424" starttime="20180716 10:23:19.424"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:19.424" starttime="20180716 10:23:19.424"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:19.424" starttime="20180716 10:23:14.418"></status>
</kw>
<kw type="foritem" name="${i} = 150">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:19.425" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:19.425" starttime="20180716 10:23:19.425"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:19.428" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:19.428" starttime="20180716 10:23:19.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:24.428" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:24.428" starttime="20180716 10:23:19.428"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:24.430" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:24.431" starttime="20180716 10:23:24.429"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:24.434" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:24.435" starttime="20180716 10:23:24.433"></status>
</kw>
<msg timestamp="20180716 10:23:24.435" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:24.435" starttime="20180716 10:23:24.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:24.439" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:24.440" starttime="20180716 10:23:24.438"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:24.440" starttime="20180716 10:23:24.436"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:24.440" starttime="20180716 10:23:19.424"></status>
</kw>
<kw type="foritem" name="${i} = 151">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:24.443" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:24.443" starttime="20180716 10:23:24.441"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:24.449" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:24.449" starttime="20180716 10:23:24.443"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:29.451" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:29.451" starttime="20180716 10:23:24.450"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:29.452" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:23:29.452" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:23:29.452" starttime="20180716 10:23:29.451"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:29.455" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:29.455" starttime="20180716 10:23:29.454"></status>
</kw>
<msg timestamp="20180716 10:23:29.455" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:29.455" starttime="20180716 10:23:29.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:29.456" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:29.457" starttime="20180716 10:23:29.456"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:29.457" starttime="20180716 10:23:29.455"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:29.457" starttime="20180716 10:23:24.440"></status>
</kw>
<kw type="foritem" name="${i} = 152">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:29.458" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:29.458" starttime="20180716 10:23:29.457"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:29.462" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:29.462" starttime="20180716 10:23:29.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:34.463" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:34.463" starttime="20180716 10:23:29.463"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:34.465" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:34.466" starttime="20180716 10:23:34.464"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:34.470" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:34.470" starttime="20180716 10:23:34.468"></status>
</kw>
<msg timestamp="20180716 10:23:34.471" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:34.471" starttime="20180716 10:23:34.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:34.474" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:34.475" starttime="20180716 10:23:34.473"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:34.475" starttime="20180716 10:23:34.472"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:34.475" starttime="20180716 10:23:29.457"></status>
</kw>
<kw type="foritem" name="${i} = 153">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:34.478" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:34.478" starttime="20180716 10:23:34.476"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:34.485" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:34.485" starttime="20180716 10:23:34.479"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:39.486" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:39.486" starttime="20180716 10:23:34.486"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:39.488" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:39.489" starttime="20180716 10:23:39.487"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:39.493" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:39.493" starttime="20180716 10:23:39.491"></status>
</kw>
<msg timestamp="20180716 10:23:39.494" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:39.494" starttime="20180716 10:23:39.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:39.497" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:39.498" starttime="20180716 10:23:39.497"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:39.498" starttime="20180716 10:23:39.495"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:39.498" starttime="20180716 10:23:34.475"></status>
</kw>
<kw type="foritem" name="${i} = 154">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:39.501" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:39.501" starttime="20180716 10:23:39.499"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:39.508" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:39.508" starttime="20180716 10:23:39.502"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:44.510" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:44.510" starttime="20180716 10:23:39.509"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:44.510" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:44.510" starttime="20180716 10:23:44.510"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:44.512" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:44.512" starttime="20180716 10:23:44.511"></status>
</kw>
<msg timestamp="20180716 10:23:44.512" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:44.512" starttime="20180716 10:23:44.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:44.513" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:44.513" starttime="20180716 10:23:44.512"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:44.513" starttime="20180716 10:23:44.512"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:44.513" starttime="20180716 10:23:39.498"></status>
</kw>
<kw type="foritem" name="${i} = 155">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:44.513" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:44.513" starttime="20180716 10:23:44.513"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:44.515" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:44.515" starttime="20180716 10:23:44.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:49.516" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:49.516" starttime="20180716 10:23:44.516"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:49.516" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:23:49.517" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:23:49.517" starttime="20180716 10:23:49.516"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:49.518" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:49.518" starttime="20180716 10:23:49.517"></status>
</kw>
<msg timestamp="20180716 10:23:49.518" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:49.518" starttime="20180716 10:23:49.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:49.519" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:49.519" starttime="20180716 10:23:49.519"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:49.519" starttime="20180716 10:23:49.518"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:49.519" starttime="20180716 10:23:44.513"></status>
</kw>
<kw type="foritem" name="${i} = 156">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:49.520" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:49.520" starttime="20180716 10:23:49.520"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:49.523" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:49.523" starttime="20180716 10:23:49.520"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:54.524" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:54.524" starttime="20180716 10:23:49.524"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:54.526" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:54.527" starttime="20180716 10:23:54.525"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:54.531" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:54.531" starttime="20180716 10:23:54.529"></status>
</kw>
<msg timestamp="20180716 10:23:54.531" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:54.532" starttime="20180716 10:23:54.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:54.535" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:54.535" starttime="20180716 10:23:54.534"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:54.535" starttime="20180716 10:23:54.532"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:54.536" starttime="20180716 10:23:49.519"></status>
</kw>
<kw type="foritem" name="${i} = 157">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:54.538" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:54.538" starttime="20180716 10:23:54.537"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:54.545" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:54.546" starttime="20180716 10:23:54.539"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:23:59.547" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:23:59.547" starttime="20180716 10:23:54.546"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:23:59.549" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:23:59.550" starttime="20180716 10:23:59.548"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:23:59.553" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:23:59.553" starttime="20180716 10:23:59.552"></status>
</kw>
<msg timestamp="20180716 10:23:59.554" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:23:59.554" starttime="20180716 10:23:59.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:23:59.557" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:23:59.557" starttime="20180716 10:23:59.556"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:59.557" starttime="20180716 10:23:59.555"></status>
</kw>
<status status="PASS" endtime="20180716 10:23:59.557" starttime="20180716 10:23:54.536"></status>
</kw>
<kw type="foritem" name="${i} = 158">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:23:59.559" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:59.559" starttime="20180716 10:23:59.558"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:23:59.566" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:23:59.566" starttime="20180716 10:23:59.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:04.567" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:04.567" starttime="20180716 10:23:59.567"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:04.569" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:04.569" starttime="20180716 10:24:04.568"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:04.572" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:04.572" starttime="20180716 10:24:04.571"></status>
</kw>
<msg timestamp="20180716 10:24:04.572" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:04.573" starttime="20180716 10:24:04.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:04.575" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:04.576" starttime="20180716 10:24:04.575"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:04.576" starttime="20180716 10:24:04.573"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:04.576" starttime="20180716 10:23:59.557"></status>
</kw>
<kw type="foritem" name="${i} = 159">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:04.578" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:04.578" starttime="20180716 10:24:04.577"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:04.585" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:04.585" starttime="20180716 10:24:04.579"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:09.586" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:09.586" starttime="20180716 10:24:04.586"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:09.588" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:24:09.588" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:24:09.589" starttime="20180716 10:24:09.587"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:09.594" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:09.595" starttime="20180716 10:24:09.592"></status>
</kw>
<msg timestamp="20180716 10:24:09.595" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:09.596" starttime="20180716 10:24:09.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:09.599" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:09.599" starttime="20180716 10:24:09.598"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:09.600" starttime="20180716 10:24:09.596"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:09.600" starttime="20180716 10:24:04.576"></status>
</kw>
<kw type="foritem" name="${i} = 160">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:09.603" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:09.603" starttime="20180716 10:24:09.601"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:09.608" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:09.609" starttime="20180716 10:24:09.604"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:14.610" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:14.610" starttime="20180716 10:24:09.609"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:14.612" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:14.612" starttime="20180716 10:24:14.611"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:14.616" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:14.616" starttime="20180716 10:24:14.614"></status>
</kw>
<msg timestamp="20180716 10:24:14.616" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:14.616" starttime="20180716 10:24:14.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:14.619" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:14.619" starttime="20180716 10:24:14.618"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:14.619" starttime="20180716 10:24:14.617"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:14.620" starttime="20180716 10:24:09.600"></status>
</kw>
<kw type="foritem" name="${i} = 161">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:14.622" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:14.622" starttime="20180716 10:24:14.620"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:14.629" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:14.629" starttime="20180716 10:24:14.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:19.630" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:19.630" starttime="20180716 10:24:14.630"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:19.632" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:19.632" starttime="20180716 10:24:19.631"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:19.636" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:19.636" starttime="20180716 10:24:19.635"></status>
</kw>
<msg timestamp="20180716 10:24:19.637" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:19.637" starttime="20180716 10:24:19.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:19.640" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:19.641" starttime="20180716 10:24:19.640"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:19.641" starttime="20180716 10:24:19.638"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:19.641" starttime="20180716 10:24:14.620"></status>
</kw>
<kw type="foritem" name="${i} = 162">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:19.643" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:19.644" starttime="20180716 10:24:19.642"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:19.651" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:19.652" starttime="20180716 10:24:19.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:24.653" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:24.654" starttime="20180716 10:24:19.652"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:24.656" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:24.656" starttime="20180716 10:24:24.654"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:24.660" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:24.660" starttime="20180716 10:24:24.659"></status>
</kw>
<msg timestamp="20180716 10:24:24.661" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:24.661" starttime="20180716 10:24:24.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:24.664" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:24.665" starttime="20180716 10:24:24.664"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:24.665" starttime="20180716 10:24:24.662"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:24.665" starttime="20180716 10:24:19.641"></status>
</kw>
<kw type="foritem" name="${i} = 163">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:24.668" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:24.668" starttime="20180716 10:24:24.666"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:24.675" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:24.675" starttime="20180716 10:24:24.669"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:29.677" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:29.677" starttime="20180716 10:24:24.676"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:29.678" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:24:29.678" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:24:29.678" starttime="20180716 10:24:29.677"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:29.680" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:29.680" starttime="20180716 10:24:29.679"></status>
</kw>
<msg timestamp="20180716 10:24:29.680" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:29.680" starttime="20180716 10:24:29.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:29.682" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:29.682" starttime="20180716 10:24:29.681"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:29.682" starttime="20180716 10:24:29.680"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:29.682" starttime="20180716 10:24:24.666"></status>
</kw>
<kw type="foritem" name="${i} = 164">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:29.683" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:29.683" starttime="20180716 10:24:29.683"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:29.687" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:29.687" starttime="20180716 10:24:29.684"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:34.688" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:34.688" starttime="20180716 10:24:29.688"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:34.690" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:34.690" starttime="20180716 10:24:34.689"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:34.694" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:34.694" starttime="20180716 10:24:34.692"></status>
</kw>
<msg timestamp="20180716 10:24:34.694" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:34.694" starttime="20180716 10:24:34.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:34.698" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:34.698" starttime="20180716 10:24:34.697"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:34.698" starttime="20180716 10:24:34.695"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:34.698" starttime="20180716 10:24:29.682"></status>
</kw>
<kw type="foritem" name="${i} = 165">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:34.701" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:34.701" starttime="20180716 10:24:34.699"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:34.707" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:34.707" starttime="20180716 10:24:34.701"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:39.708" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:39.708" starttime="20180716 10:24:34.708"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:39.711" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:39.711" starttime="20180716 10:24:39.709"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:39.715" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:39.715" starttime="20180716 10:24:39.713"></status>
</kw>
<msg timestamp="20180716 10:24:39.715" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:39.715" starttime="20180716 10:24:39.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:39.719" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:39.719" starttime="20180716 10:24:39.718"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:39.719" starttime="20180716 10:24:39.716"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:39.720" starttime="20180716 10:24:34.699"></status>
</kw>
<kw type="foritem" name="${i} = 166">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:39.722" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:39.723" starttime="20180716 10:24:39.721"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:39.727" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:39.727" starttime="20180716 10:24:39.723"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:44.728" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:44.728" starttime="20180716 10:24:39.727"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:44.730" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:44.730" starttime="20180716 10:24:44.729"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:44.734" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:44.734" starttime="20180716 10:24:44.733"></status>
</kw>
<msg timestamp="20180716 10:24:44.734" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:44.734" starttime="20180716 10:24:44.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:44.736" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:44.736" starttime="20180716 10:24:44.736"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:44.736" starttime="20180716 10:24:44.735"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:44.737" starttime="20180716 10:24:39.720"></status>
</kw>
<kw type="foritem" name="${i} = 167">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:44.738" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:44.738" starttime="20180716 10:24:44.737"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:44.744" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:44.744" starttime="20180716 10:24:44.739"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:49.745" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:49.745" starttime="20180716 10:24:44.745"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:49.745" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:24:49.746" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:24:49.746" starttime="20180716 10:24:49.745"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:49.747" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:49.747" starttime="20180716 10:24:49.746"></status>
</kw>
<msg timestamp="20180716 10:24:49.747" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:49.747" starttime="20180716 10:24:49.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:49.748" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:49.748" starttime="20180716 10:24:49.748"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:49.748" starttime="20180716 10:24:49.747"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:49.749" starttime="20180716 10:24:44.737"></status>
</kw>
<kw type="foritem" name="${i} = 168">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:49.749" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:49.749" starttime="20180716 10:24:49.749"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:49.752" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:49.752" starttime="20180716 10:24:49.750"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:54.752" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:54.753" starttime="20180716 10:24:49.752"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:54.754" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:54.755" starttime="20180716 10:24:54.753"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:54.759" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:54.759" starttime="20180716 10:24:54.757"></status>
</kw>
<msg timestamp="20180716 10:24:54.759" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:54.759" starttime="20180716 10:24:54.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:54.764" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:54.765" starttime="20180716 10:24:54.762"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:54.765" starttime="20180716 10:24:54.760"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:54.765" starttime="20180716 10:24:49.749"></status>
</kw>
<kw type="foritem" name="${i} = 169">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:54.768" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:54.769" starttime="20180716 10:24:54.767"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:54.776" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:54.776" starttime="20180716 10:24:54.769"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:24:59.778" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:24:59.779" starttime="20180716 10:24:54.777"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:24:59.780" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:24:59.781" starttime="20180716 10:24:59.779"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:24:59.784" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:24:59.785" starttime="20180716 10:24:59.783"></status>
</kw>
<msg timestamp="20180716 10:24:59.785" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:24:59.785" starttime="20180716 10:24:59.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:24:59.789" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:24:59.789" starttime="20180716 10:24:59.788"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:59.789" starttime="20180716 10:24:59.786"></status>
</kw>
<status status="PASS" endtime="20180716 10:24:59.789" starttime="20180716 10:24:54.766"></status>
</kw>
<kw type="foritem" name="${i} = 170">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:24:59.792" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:59.792" starttime="20180716 10:24:59.791"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:24:59.798" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:24:59.798" starttime="20180716 10:24:59.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:04.800" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:04.800" starttime="20180716 10:24:59.799"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:04.802" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:04.802" starttime="20180716 10:25:04.801"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:04.807" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:04.807" starttime="20180716 10:25:04.805"></status>
</kw>
<msg timestamp="20180716 10:25:04.808" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:04.808" starttime="20180716 10:25:04.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:04.811" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:04.812" starttime="20180716 10:25:04.811"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:04.812" starttime="20180716 10:25:04.809"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:04.812" starttime="20180716 10:24:59.790"></status>
</kw>
<kw type="foritem" name="${i} = 171">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:04.815" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:04.815" starttime="20180716 10:25:04.813"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:04.820" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:04.821" starttime="20180716 10:25:04.815"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:09.822" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:09.822" starttime="20180716 10:25:04.822"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:09.824" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:25:09.825" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:25:09.825" starttime="20180716 10:25:09.823"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:09.829" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:09.829" starttime="20180716 10:25:09.827"></status>
</kw>
<msg timestamp="20180716 10:25:09.829" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:09.830" starttime="20180716 10:25:09.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:09.833" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:09.833" starttime="20180716 10:25:09.832"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:09.833" starttime="20180716 10:25:09.830"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:09.834" starttime="20180716 10:25:04.812"></status>
</kw>
<kw type="foritem" name="${i} = 172">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:09.836" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:09.837" starttime="20180716 10:25:09.835"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:09.844" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:09.844" starttime="20180716 10:25:09.837"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:14.845" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:14.845" starttime="20180716 10:25:09.845"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:14.847" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:14.847" starttime="20180716 10:25:14.846"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:14.850" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:14.850" starttime="20180716 10:25:14.849"></status>
</kw>
<msg timestamp="20180716 10:25:14.850" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:14.850" starttime="20180716 10:25:14.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:14.853" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:14.853" starttime="20180716 10:25:14.852"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:14.853" starttime="20180716 10:25:14.851"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:14.853" starttime="20180716 10:25:09.834"></status>
</kw>
<kw type="foritem" name="${i} = 173">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:14.855" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:14.856" starttime="20180716 10:25:14.854"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:14.861" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:14.861" starttime="20180716 10:25:14.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:19.862" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:19.862" starttime="20180716 10:25:14.861"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:19.864" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:19.864" starttime="20180716 10:25:19.863"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:19.868" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:19.869" starttime="20180716 10:25:19.867"></status>
</kw>
<msg timestamp="20180716 10:25:19.869" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:19.869" starttime="20180716 10:25:19.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:19.873" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:19.873" starttime="20180716 10:25:19.872"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:19.873" starttime="20180716 10:25:19.870"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:19.873" starttime="20180716 10:25:14.854"></status>
</kw>
<kw type="foritem" name="${i} = 174">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:19.876" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:19.876" starttime="20180716 10:25:19.875"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:19.883" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:19.883" starttime="20180716 10:25:19.877"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:24.885" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:24.885" starttime="20180716 10:25:19.884"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:24.887" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:24.887" starttime="20180716 10:25:24.886"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:24.891" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:24.892" starttime="20180716 10:25:24.890"></status>
</kw>
<msg timestamp="20180716 10:25:24.892" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:24.892" starttime="20180716 10:25:24.888"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:24.896" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:24.896" starttime="20180716 10:25:24.895"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:24.896" starttime="20180716 10:25:24.893"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:24.896" starttime="20180716 10:25:19.874"></status>
</kw>
<kw type="foritem" name="${i} = 175">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:24.899" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:24.900" starttime="20180716 10:25:24.898"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:24.906" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:24.906" starttime="20180716 10:25:24.900"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:29.907" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:29.907" starttime="20180716 10:25:24.907"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:29.908" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:25:29.909" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:25:29.909" starttime="20180716 10:25:29.908"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:29.912" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:29.912" starttime="20180716 10:25:29.911"></status>
</kw>
<msg timestamp="20180716 10:25:29.913" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:29.913" starttime="20180716 10:25:29.910"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:29.915" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:29.916" starttime="20180716 10:25:29.915"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:29.916" starttime="20180716 10:25:29.913"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:29.916" starttime="20180716 10:25:24.897"></status>
</kw>
<kw type="foritem" name="${i} = 176">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:29.918" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:29.918" starttime="20180716 10:25:29.917"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:29.924" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:29.925" starttime="20180716 10:25:29.918"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:34.926" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:34.926" starttime="20180716 10:25:29.925"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:34.928" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:34.928" starttime="20180716 10:25:34.927"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:34.931" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:34.931" starttime="20180716 10:25:34.930"></status>
</kw>
<msg timestamp="20180716 10:25:34.931" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:34.932" starttime="20180716 10:25:34.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:34.934" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:34.935" starttime="20180716 10:25:34.934"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:34.935" starttime="20180716 10:25:34.932"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:34.935" starttime="20180716 10:25:29.916"></status>
</kw>
<kw type="foritem" name="${i} = 177">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:34.937" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:34.937" starttime="20180716 10:25:34.936"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:34.941" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:34.941" starttime="20180716 10:25:34.938"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:39.942" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:39.942" starttime="20180716 10:25:34.942"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:39.944" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:39.944" starttime="20180716 10:25:39.943"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:39.948" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:39.949" starttime="20180716 10:25:39.947"></status>
</kw>
<msg timestamp="20180716 10:25:39.949" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:39.949" starttime="20180716 10:25:39.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:39.952" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:39.953" starttime="20180716 10:25:39.952"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:39.953" starttime="20180716 10:25:39.950"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:39.953" starttime="20180716 10:25:34.935"></status>
</kw>
<kw type="foritem" name="${i} = 178">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:39.956" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:39.956" starttime="20180716 10:25:39.954"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:39.964" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:39.964" starttime="20180716 10:25:39.957"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:44.965" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:44.965" starttime="20180716 10:25:39.964"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:44.965" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:44.965" starttime="20180716 10:25:44.965"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:44.966" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:44.966" starttime="20180716 10:25:44.966"></status>
</kw>
<msg timestamp="20180716 10:25:44.966" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:44.967" starttime="20180716 10:25:44.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:44.967" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:44.967" starttime="20180716 10:25:44.967"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:44.967" starttime="20180716 10:25:44.967"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:44.967" starttime="20180716 10:25:39.953"></status>
</kw>
<kw type="foritem" name="${i} = 179">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:44.968" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:44.968" starttime="20180716 10:25:44.968"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:44.971" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:44.971" starttime="20180716 10:25:44.968"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:49.972" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:49.972" starttime="20180716 10:25:44.971"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:49.972" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:25:49.973" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:25:49.973" starttime="20180716 10:25:49.972"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:49.974" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:49.974" starttime="20180716 10:25:49.973"></status>
</kw>
<msg timestamp="20180716 10:25:49.974" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:49.974" starttime="20180716 10:25:49.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:49.975" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:49.975" starttime="20180716 10:25:49.974"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:49.975" starttime="20180716 10:25:49.974"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:49.975" starttime="20180716 10:25:44.968"></status>
</kw>
<kw type="foritem" name="${i} = 180">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:49.976" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:49.976" starttime="20180716 10:25:49.975"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:49.978" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:49.979" starttime="20180716 10:25:49.976"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:54.979" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:54.979" starttime="20180716 10:25:49.979"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:54.979" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:54.979" starttime="20180716 10:25:54.979"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:54.980" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:54.980" starttime="20180716 10:25:54.980"></status>
</kw>
<msg timestamp="20180716 10:25:54.980" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:54.981" starttime="20180716 10:25:54.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:54.981" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:54.981" starttime="20180716 10:25:54.981"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:54.981" starttime="20180716 10:25:54.981"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:54.981" starttime="20180716 10:25:49.975"></status>
</kw>
<kw type="foritem" name="${i} = 181">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:54.982" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:54.982" starttime="20180716 10:25:54.982"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:25:54.985" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:54.985" starttime="20180716 10:25:54.982"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:25:59.985" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:25:59.985" starttime="20180716 10:25:54.985"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:25:59.987" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:25:59.987" starttime="20180716 10:25:59.986"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:25:59.991" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:25:59.991" starttime="20180716 10:25:59.990"></status>
</kw>
<msg timestamp="20180716 10:25:59.992" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:25:59.992" starttime="20180716 10:25:59.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:25:59.995" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:25:59.996" starttime="20180716 10:25:59.995"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:59.996" starttime="20180716 10:25:59.993"></status>
</kw>
<status status="PASS" endtime="20180716 10:25:59.996" starttime="20180716 10:25:54.982"></status>
</kw>
<kw type="foritem" name="${i} = 182">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:25:59.999" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:25:59.999" starttime="20180716 10:25:59.997"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:00.004" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:00.005" starttime="20180716 10:25:59.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:05.005" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:05.005" starttime="20180716 10:26:00.005"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:05.007" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:05.008" starttime="20180716 10:26:05.006"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:05.011" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:05.012" starttime="20180716 10:26:05.010"></status>
</kw>
<msg timestamp="20180716 10:26:05.012" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:05.012" starttime="20180716 10:26:05.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:05.015" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:05.015" starttime="20180716 10:26:05.014"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:05.015" starttime="20180716 10:26:05.013"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:05.016" starttime="20180716 10:25:59.996"></status>
</kw>
<kw type="foritem" name="${i} = 183">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:05.018" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:05.018" starttime="20180716 10:26:05.016"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:05.025" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:05.025" starttime="20180716 10:26:05.018"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:10.027" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:10.027" starttime="20180716 10:26:05.026"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:10.029" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:26:10.030" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:26:10.030" starttime="20180716 10:26:10.028"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:10.034" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:10.034" starttime="20180716 10:26:10.032"></status>
</kw>
<msg timestamp="20180716 10:26:10.034" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:10.035" starttime="20180716 10:26:10.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:10.038" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:10.038" starttime="20180716 10:26:10.037"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:10.038" starttime="20180716 10:26:10.035"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:10.038" starttime="20180716 10:26:05.016"></status>
</kw>
<kw type="foritem" name="${i} = 184">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:10.041" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:10.041" starttime="20180716 10:26:10.039"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:10.048" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:10.049" starttime="20180716 10:26:10.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:15.050" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:15.050" starttime="20180716 10:26:10.050"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:15.052" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:15.053" starttime="20180716 10:26:15.051"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:15.056" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:15.057" starttime="20180716 10:26:15.055"></status>
</kw>
<msg timestamp="20180716 10:26:15.057" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:15.057" starttime="20180716 10:26:15.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:15.060" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:15.061" starttime="20180716 10:26:15.060"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:15.061" starttime="20180716 10:26:15.058"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:15.061" starttime="20180716 10:26:10.039"></status>
</kw>
<kw type="foritem" name="${i} = 185">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:15.064" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:15.064" starttime="20180716 10:26:15.062"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:15.071" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:15.072" starttime="20180716 10:26:15.065"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:20.073" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:20.073" starttime="20180716 10:26:15.072"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:20.075" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:20.075" starttime="20180716 10:26:20.074"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:20.080" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:20.080" starttime="20180716 10:26:20.078"></status>
</kw>
<msg timestamp="20180716 10:26:20.081" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:20.081" starttime="20180716 10:26:20.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:20.084" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:20.084" starttime="20180716 10:26:20.083"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:20.085" starttime="20180716 10:26:20.082"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:20.085" starttime="20180716 10:26:15.061"></status>
</kw>
<kw type="foritem" name="${i} = 186">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:20.087" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:20.088" starttime="20180716 10:26:20.086"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:20.094" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:20.095" starttime="20180716 10:26:20.088"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:25.096" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:25.096" starttime="20180716 10:26:20.096"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:25.098" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:25.098" starttime="20180716 10:26:25.097"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:25.102" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:25.103" starttime="20180716 10:26:25.101"></status>
</kw>
<msg timestamp="20180716 10:26:25.103" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:25.103" starttime="20180716 10:26:25.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:25.106" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:25.107" starttime="20180716 10:26:25.106"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:25.107" starttime="20180716 10:26:25.104"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:25.107" starttime="20180716 10:26:20.085"></status>
</kw>
<kw type="foritem" name="${i} = 187">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:25.110" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:25.110" starttime="20180716 10:26:25.108"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:25.116" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:25.116" starttime="20180716 10:26:25.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:30.117" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:30.117" starttime="20180716 10:26:25.117"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:30.119" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:26:30.119" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:26:30.119" starttime="20180716 10:26:30.118"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:30.122" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:30.122" starttime="20180716 10:26:30.121"></status>
</kw>
<msg timestamp="20180716 10:26:30.123" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:30.123" starttime="20180716 10:26:30.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:30.126" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:30.126" starttime="20180716 10:26:30.125"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:30.126" starttime="20180716 10:26:30.124"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:30.126" starttime="20180716 10:26:25.108"></status>
</kw>
<kw type="foritem" name="${i} = 188">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:30.128" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:30.129" starttime="20180716 10:26:30.127"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:30.136" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:30.136" starttime="20180716 10:26:30.129"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:35.137" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:35.137" starttime="20180716 10:26:30.137"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:35.139" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:35.140" starttime="20180716 10:26:35.138"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:35.144" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:35.144" starttime="20180716 10:26:35.142"></status>
</kw>
<msg timestamp="20180716 10:26:35.145" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:35.145" starttime="20180716 10:26:35.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:35.148" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:35.149" starttime="20180716 10:26:35.148"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:35.149" starttime="20180716 10:26:35.146"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:35.149" starttime="20180716 10:26:30.127"></status>
</kw>
<kw type="foritem" name="${i} = 189">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:35.152" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:35.152" starttime="20180716 10:26:35.151"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:35.160" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:35.161" starttime="20180716 10:26:35.153"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:40.162" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:40.162" starttime="20180716 10:26:35.161"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:40.164" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:40.164" starttime="20180716 10:26:40.163"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:40.168" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:40.168" starttime="20180716 10:26:40.167"></status>
</kw>
<msg timestamp="20180716 10:26:40.169" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:40.169" starttime="20180716 10:26:40.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:40.173" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:40.173" starttime="20180716 10:26:40.171"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:40.173" starttime="20180716 10:26:40.170"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:40.173" starttime="20180716 10:26:35.150"></status>
</kw>
<kw type="foritem" name="${i} = 190">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:40.175" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:40.176" starttime="20180716 10:26:40.174"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:40.182" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:40.183" starttime="20180716 10:26:40.176"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:45.184" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:45.184" starttime="20180716 10:26:40.183"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:45.186" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:45.186" starttime="20180716 10:26:45.185"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:45.190" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:45.190" starttime="20180716 10:26:45.189"></status>
</kw>
<msg timestamp="20180716 10:26:45.191" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:45.191" starttime="20180716 10:26:45.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:45.195" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:45.195" starttime="20180716 10:26:45.194"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:45.196" starttime="20180716 10:26:45.192"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:45.196" starttime="20180716 10:26:40.174"></status>
</kw>
<kw type="foritem" name="${i} = 191">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:45.198" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:45.199" starttime="20180716 10:26:45.197"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:45.206" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:45.207" starttime="20180716 10:26:45.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:50.208" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:50.208" starttime="20180716 10:26:45.207"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:50.209" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:26:50.210" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:26:50.210" starttime="20180716 10:26:50.209"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:50.213" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:50.213" starttime="20180716 10:26:50.212"></status>
</kw>
<msg timestamp="20180716 10:26:50.213" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:50.213" starttime="20180716 10:26:50.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:50.216" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:50.216" starttime="20180716 10:26:50.215"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:50.216" starttime="20180716 10:26:50.214"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:50.216" starttime="20180716 10:26:45.196"></status>
</kw>
<kw type="foritem" name="${i} = 192">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:50.218" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:50.218" starttime="20180716 10:26:50.217"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:50.224" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:50.224" starttime="20180716 10:26:50.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:26:55.225" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:26:55.225" starttime="20180716 10:26:50.225"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:26:55.227" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:26:55.227" starttime="20180716 10:26:55.226"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:26:55.231" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:26:55.231" starttime="20180716 10:26:55.230"></status>
</kw>
<msg timestamp="20180716 10:26:55.232" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:26:55.232" starttime="20180716 10:26:55.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:26:55.235" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:26:55.235" starttime="20180716 10:26:55.234"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:55.235" starttime="20180716 10:26:55.233"></status>
</kw>
<status status="PASS" endtime="20180716 10:26:55.235" starttime="20180716 10:26:50.216"></status>
</kw>
<kw type="foritem" name="${i} = 193">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:26:55.237" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:55.237" starttime="20180716 10:26:55.236"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:26:55.244" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:26:55.244" starttime="20180716 10:26:55.238"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:00.245" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:00.246" starttime="20180716 10:26:55.245"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:00.248" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:27:00.248" starttime="20180716 10:27:00.246"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:00.251" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:00.252" starttime="20180716 10:27:00.250"></status>
</kw>
<msg timestamp="20180716 10:27:00.252" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:00.252" starttime="20180716 10:27:00.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:00.256" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:00.256" starttime="20180716 10:27:00.255"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:00.256" starttime="20180716 10:27:00.253"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:00.256" starttime="20180716 10:26:55.236"></status>
</kw>
<kw type="foritem" name="${i} = 194">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:00.259" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:00.259" starttime="20180716 10:27:00.258"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:00.266" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:00.267" starttime="20180716 10:27:00.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:05.268" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:05.268" starttime="20180716 10:27:00.267"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:05.270" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:27:05.270" starttime="20180716 10:27:05.269"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:05.274" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:05.275" starttime="20180716 10:27:05.273"></status>
</kw>
<msg timestamp="20180716 10:27:05.275" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:05.275" starttime="20180716 10:27:05.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:05.278" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:05.279" starttime="20180716 10:27:05.278"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:05.279" starttime="20180716 10:27:05.276"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:05.279" starttime="20180716 10:27:00.257"></status>
</kw>
<kw type="foritem" name="${i} = 195">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:05.282" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:05.282" starttime="20180716 10:27:05.280"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:05.289" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:05.289" starttime="20180716 10:27:05.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:10.290" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:10.290" starttime="20180716 10:27:05.290"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:10.292" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:27:10.292" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:27:10.293" starttime="20180716 10:27:10.291"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:10.295" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:10.296" starttime="20180716 10:27:10.294"></status>
</kw>
<msg timestamp="20180716 10:27:10.296" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:10.296" starttime="20180716 10:27:10.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:10.298" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:10.299" starttime="20180716 10:27:10.298"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:10.299" starttime="20180716 10:27:10.297"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:10.299" starttime="20180716 10:27:05.279"></status>
</kw>
<kw type="foritem" name="${i} = 196">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:10.301" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:10.301" starttime="20180716 10:27:10.300"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:10.308" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:10.308" starttime="20180716 10:27:10.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:15.309" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:15.309" starttime="20180716 10:27:10.309"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:15.311" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:27:15.311" starttime="20180716 10:27:15.310"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:15.315" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:15.315" starttime="20180716 10:27:15.313"></status>
</kw>
<msg timestamp="20180716 10:27:15.316" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:15.316" starttime="20180716 10:27:15.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:15.319" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:15.320" starttime="20180716 10:27:15.318"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:15.320" starttime="20180716 10:27:15.317"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:15.320" starttime="20180716 10:27:10.300"></status>
</kw>
<kw type="foritem" name="${i} = 197">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:15.323" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:15.323" starttime="20180716 10:27:15.321"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:15.330" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:15.330" starttime="20180716 10:27:15.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:20.332" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:20.332" starttime="20180716 10:27:15.331"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:20.333" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:27:20.333" starttime="20180716 10:27:20.332"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:20.335" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:20.335" starttime="20180716 10:27:20.334"></status>
</kw>
<msg timestamp="20180716 10:27:20.335" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:20.335" starttime="20180716 10:27:20.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:20.337" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:20.337" starttime="20180716 10:27:20.336"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:20.337" starttime="20180716 10:27:20.336"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:20.337" starttime="20180716 10:27:15.320"></status>
</kw>
<kw type="foritem" name="${i} = 198">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:20.338" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:20.338" starttime="20180716 10:27:20.337"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:20.342" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:20.342" starttime="20180716 10:27:20.338"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:25.343" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:25.343" starttime="20180716 10:27:20.343"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:25.343" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:27:25.344" starttime="20180716 10:27:25.343"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:25.345" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:25.345" starttime="20180716 10:27:25.344"></status>
</kw>
<msg timestamp="20180716 10:27:25.345" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:25.345" starttime="20180716 10:27:25.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:25.346" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:25.346" starttime="20180716 10:27:25.346"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:25.346" starttime="20180716 10:27:25.345"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:25.346" starttime="20180716 10:27:20.337"></status>
</kw>
<kw type="foritem" name="${i} = 199">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:25.347" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:25.347" starttime="20180716 10:27:25.347"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:25.349" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:25.349" starttime="20180716 10:27:25.347"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:30.350" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:30.350" starttime="20180716 10:27:25.349"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:30.350" level="INFO">ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller</msg>
<msg timestamp="20180716 10:27:30.350" level="INFO">${Output} = ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
</msg>
<status status="PASS" endtime="20180716 10:27:30.350" starttime="20180716 10:27:30.350"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:30.351" level="FAIL">'ping: unknown host [root@controller
[root@controller ~(keystone_admin)]# ping -c 1 [root@controller
' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:30.351" starttime="20180716 10:27:30.351"></status>
</kw>
<msg timestamp="20180716 10:27:30.352" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:30.352" starttime="20180716 10:27:30.351"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:30.352" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:30.352" starttime="20180716 10:27:30.352"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:30.352" starttime="20180716 10:27:30.352"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:30.352" starttime="20180716 10:27:25.347"></status>
</kw>
<kw type="foritem" name="${i} = 200">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:30.353" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:30.353" starttime="20180716 10:27:30.353"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:30.355" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:30.355" starttime="20180716 10:27:30.353"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:35.356" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:35.356" starttime="20180716 10:27:30.356"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:35.356" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:27:35.356" starttime="20180716 10:27:35.356"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:35.357" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:35.357" starttime="20180716 10:27:35.357"></status>
</kw>
<msg timestamp="20180716 10:27:35.358" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:35.358" starttime="20180716 10:27:35.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:35.358" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:35.358" starttime="20180716 10:27:35.358"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:35.359" starttime="20180716 10:27:35.358"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:35.359" starttime="20180716 10:27:30.353"></status>
</kw>
<kw type="foritem" name="${i} = 201">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:35.359" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:35.359" starttime="20180716 10:27:35.359"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:35.361" level="INFO">ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:35.361" starttime="20180716 10:27:35.359"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5</arg>
</arguments>
<msg timestamp="20180716 10:27:40.362" level="INFO">Slept 5 seconds</msg>
<status status="PASS" endtime="20180716 10:27:40.362" starttime="20180716 10:27:35.362"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<assign>
<var>${Output}</var>
</assign>
<msg timestamp="20180716 10:27:40.364" level="INFO">${Output} = </msg>
<status status="PASS" endtime="20180716 10:27:40.364" starttime="20180716 10:27:40.363"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Contain</arg>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${Output}</arg>
<arg>ttl=64</arg>
</arguments>
<msg timestamp="20180716 10:27:40.368" level="FAIL">'' does not contain 'ttl=64'</msg>
<status status="FAIL" endtime="20180716 10:27:40.368" starttime="20180716 10:27:40.367"></status>
</kw>
<msg timestamp="20180716 10:27:40.369" level="INFO">${status} = False</msg>
<status status="PASS" endtime="20180716 10:27:40.369" starttime="20180716 10:27:40.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${status}==False</arg>
<arg>Continue For Loop</arg>
</arguments>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current for loop iteration and continues from the next.</doc>
<msg timestamp="20180716 10:27:40.372" level="INFO">Continuing for loop from the next iteration.</msg>
<status status="PASS" endtime="20180716 10:27:40.373" starttime="20180716 10:27:40.372"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:40.373" starttime="20180716 10:27:40.370"></status>
</kw>
<status status="PASS" endtime="20180716 10:27:40.373" starttime="20180716 10:27:35.359"></status>
</kw>
<kw type="foritem" name="${i} = 202">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>ping</arg>
<arg>-c 1</arg>
<arg>${MGmt_IP}</arg>
</arguments>
<assign>
<var>${store}</var>
</assign>
<msg timestamp="20180716 10:27:40.376" level="INFO">${store} = ping -c 1 [root@controller</msg>
<status status="PASS" endtime="20180716 10:27:40.376" starttime="20180716 10:27:40.374"></status>
</kw>
<kw name="Write" library="SSHLibrary">
<doc>Writes the given `text` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${store}</arg>
</arguments>
<msg timestamp="20180716 10:27:43.391" level="FAIL">No match found for '
' in 3 seconds
Output:
ping -c 1 [root@co.</msg>
<status status="FAIL" endtime="20180716 10:27:43.391" starttime="20180716 10:27:40.376"></status>
</kw>
<status status="FAIL" endtime="20180716 10:27:43.391" starttime="20180716 10:27:40.373"></status>
</kw>
<status status="FAIL" endtime="20180716 10:27:43.391" starttime="20180716 10:10:47.536"></status>
</kw>
<status status="FAIL" endtime="20180716 10:27:43.392" starttime="20180716 10:10:10.261"></status>
</kw>
<status status="FAIL" endtime="20180716 10:27:43.392" starttime="20180716 10:08:25.217"></status>
</kw>
<kw type="teardown" name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180716 10:27:43.521" starttime="20180716 10:27:43.392"></status>
</kw>
<doc>Verify the Cloud environment (RHOSP) before we start Onboarding of VNF VM’s process.</doc>
<tags>
<tag>Onboard</tag>
</tags>
<status status="FAIL" endtime="20180716 10:27:43.521" critical="yes" starttime="20180716 10:07:23.919">No match found for '
' in 3 seconds
Output:
ping -c 1 [root@co.</status>
</test>
<status status="FAIL" endtime="20180716 10:27:43.523" starttime="20180716 10:07:22.393"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">Onboard</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="SBC Onboarding TestCases" pass="0">SBC Onboarding TestCases</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
